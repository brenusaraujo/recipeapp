{"ast":null,"code":"import _slicedToArray from\"/Users/brenoaraujo/projects-to-github/RecipeApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useEffect,useState}from'react';import Footer from'../components/Footer';import Header from'../components/Header';import RecipesContext from'../context/RecipesContext';import Card from'../components/Card';import{requestFilteredFoods,requestFoodsOrDrinks}from'../services/fetchAPIs';import FilterButtons from'../components/FilterButtons';import'../css/MainPage.css';var MAX_MAP_LENGTH=12;function Food(_ref){var ingredient=_ref.location.ingredient;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),foods=_useState2[0],setFoods=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),renderFoods=_useState4[0],setRenderFoods=_useState4[1];var _useContext=useContext(RecipesContext),filteredFood=_useContext.filteredFood;useEffect(function(){if(!ingredient){requestFoodsOrDrinks('themealdb').then(function(_ref2){var meals=_ref2.meals;return setFoods(meals);});}else{requestFilteredFoods(ingredient,'ingredient').then(function(_ref3){var meals=_ref3.meals;return setFoods(meals);});}},[ingredient]);useEffect(function(){var results=filteredFood.length>0?filteredFood:foods;setRenderFoods(results.slice(0,MAX_MAP_LENGTH));},[filteredFood,foods]);return/*#__PURE__*/React.createElement(\"div\",{className:\"page-container\"},/*#__PURE__*/React.createElement(Header,{name:\"Comidas\",search:true}),/*#__PURE__*/React.createElement(FilterButtons,{url:\"themealdb\",type:\"meals\"}),/*#__PURE__*/React.createElement(\"main\",{className:\"recipes\"},renderFoods&&renderFoods.map(function(food,index){return/*#__PURE__*/React.createElement(Card,{id:\"idMeal\",itemId:food.idMeal,header:food.strMeal,img:food.strMealThumb,index:index,key:food.idMeal,testId:\"\".concat(index,\"-recipe-card\")});})),/*#__PURE__*/React.createElement(Footer,null));}Food.defaultProps={location:{}};export default Food;","map":{"version":3,"names":["React","useContext","useEffect","useState","Footer","Header","RecipesContext","Card","requestFilteredFoods","requestFoodsOrDrinks","FilterButtons","MAX_MAP_LENGTH","Food","ingredient","location","foods","setFoods","renderFoods","setRenderFoods","filteredFood","then","meals","results","length","slice","map","food","index","idMeal","strMeal","strMealThumb","defaultProps"],"sources":["/Users/brenoaraujo/projects-to-github/RecipeApp/src/pages/Food.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport RecipesContext from '../context/RecipesContext';\nimport Card from '../components/Card';\nimport { requestFilteredFoods, requestFoodsOrDrinks } from '../services/fetchAPIs';\nimport FilterButtons from '../components/FilterButtons';\nimport '../css/MainPage.css';\n\nconst MAX_MAP_LENGTH = 12;\n\nfunction Food({ location: { ingredient } }) {\n  const [foods, setFoods] = useState([]);\n  const [renderFoods, setRenderFoods] = useState([]);\n  const { filteredFood } = useContext(RecipesContext);\n\n  useEffect(() => {\n    if (!ingredient) {\n      requestFoodsOrDrinks('themealdb')\n        .then(({ meals }) => setFoods(meals));\n    } else {\n      requestFilteredFoods(ingredient, 'ingredient')\n        .then(({ meals }) => setFoods(meals));\n    }\n  }, [ingredient]);\n\n  useEffect(() => {\n    const results = filteredFood.length > 0 ? filteredFood : foods;\n    setRenderFoods(results.slice(0, MAX_MAP_LENGTH));\n  }, [filteredFood, foods]);\n\n  return (\n    <div className=\"page-container\">\n      <Header name=\"Comidas\" search />\n      <FilterButtons url=\"themealdb\" type=\"meals\" />\n      <main className=\"recipes\">\n        { renderFoods && renderFoods.map((food, index) => (\n          <Card\n            id=\"idMeal\"\n            itemId={ food.idMeal }\n            header={ food.strMeal }\n            img={ food.strMealThumb }\n            index={ index }\n            key={ food.idMeal }\n            testId={ `${index}-recipe-card` }\n          />\n        )) }\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nFood.propTypes = {\n  location: PropTypes.shape({\n    ingredient: PropTypes.string,\n  }),\n};\n\nFood.defaultProps = {\n  location: {},\n};\n\nexport default Food;\n"],"mappings":"sKAAA,MAAOA,MAAK,EAAIC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAE9D,MAAOC,OAAM,KAAM,sBAAsB,CACzC,MAAOC,OAAM,KAAM,sBAAsB,CACzC,MAAOC,eAAc,KAAM,2BAA2B,CACtD,MAAOC,KAAI,KAAM,oBAAoB,CACrC,OAASC,oBAAoB,CAAEC,oBAAoB,KAAQ,uBAAuB,CAClF,MAAOC,cAAa,KAAM,6BAA6B,CACvD,MAAO,qBAAqB,CAE5B,GAAMC,eAAc,CAAG,EAAE,CAEzB,QAASC,KAAI,MAA+B,IAAhBC,WAAU,MAAtBC,QAAQ,CAAID,UAAU,CACpC,cAA0BV,QAAQ,CAAC,EAAE,CAAC,wCAA/BY,KAAK,eAAEC,QAAQ,eACtB,eAAsCb,QAAQ,CAAC,EAAE,CAAC,yCAA3Cc,WAAW,eAAEC,cAAc,eAClC,gBAAyBjB,UAAU,CAACK,cAAc,CAAC,CAA3Ca,YAAY,aAAZA,YAAY,CAEpBjB,SAAS,CAAC,UAAM,CACd,GAAI,CAACW,UAAU,CAAE,CACfJ,oBAAoB,CAAC,WAAW,CAAC,CAC9BW,IAAI,CAAC,mBAAGC,MAAK,OAALA,KAAK,OAAOL,SAAQ,CAACK,KAAK,CAAC,GAAC,CACzC,CAAC,IAAM,CACLb,oBAAoB,CAACK,UAAU,CAAE,YAAY,CAAC,CAC3CO,IAAI,CAAC,mBAAGC,MAAK,OAALA,KAAK,OAAOL,SAAQ,CAACK,KAAK,CAAC,GAAC,CACzC,CACF,CAAC,CAAE,CAACR,UAAU,CAAC,CAAC,CAEhBX,SAAS,CAAC,UAAM,CACd,GAAMoB,QAAO,CAAGH,YAAY,CAACI,MAAM,CAAG,CAAC,CAAGJ,YAAY,CAAGJ,KAAK,CAC9DG,cAAc,CAACI,OAAO,CAACE,KAAK,CAAC,CAAC,CAAEb,cAAc,CAAC,CAAC,CAClD,CAAC,CAAE,CAACQ,YAAY,CAAEJ,KAAK,CAAC,CAAC,CAEzB,mBACE,2BAAK,SAAS,CAAC,gBAAgB,eAC7B,oBAAC,MAAM,EAAC,IAAI,CAAC,SAAS,CAAC,MAAM,OAAG,cAChC,oBAAC,aAAa,EAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAG,cAC9C,4BAAM,SAAS,CAAC,SAAS,EACrBE,WAAW,EAAIA,WAAW,CAACQ,GAAG,CAAC,SAACC,IAAI,CAAEC,KAAK,qBAC3C,oBAAC,IAAI,EACH,EAAE,CAAC,QAAQ,CACX,MAAM,CAAGD,IAAI,CAACE,MAAQ,CACtB,MAAM,CAAGF,IAAI,CAACG,OAAS,CACvB,GAAG,CAAGH,IAAI,CAACI,YAAc,CACzB,KAAK,CAAGH,KAAO,CACf,GAAG,CAAGD,IAAI,CAACE,MAAQ,CACnB,MAAM,WAAMD,KAAK,gBAAgB,EACjC,EACH,CAAC,CACG,cACP,oBAAC,MAAM,MAAG,CACN,CAEV,CAQAf,IAAI,CAACmB,YAAY,CAAG,CAClBjB,QAAQ,CAAE,CAAC,CACb,CAAC,CAED,cAAeF,KAAI"},"metadata":{},"sourceType":"module"}