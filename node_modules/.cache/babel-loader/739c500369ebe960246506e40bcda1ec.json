{"ast":null,"code":"var _jsxFileName = \"/Users/brenoaraujo/projects-to-github/RecipeApp/src/components/ConcludedCard.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport '../css/ConcludedRecipes.css';\nfunction ConcludedCard(_ref) {\n  let {\n    type,\n    mainIndex,\n    id,\n    topText,\n    handleShare,\n    isCopied,\n    name,\n    image,\n    doneDate,\n    tags\n  } = _ref;\n  const [arrayTags, setArrayTags] = useState([]);\n  useEffect(() => {\n    if (tags) {\n      const array = tags !== '' ? tags.toString().split(',').slice(0, 2) : [];\n      return setArrayTags(array);\n    }\n  }, [tags]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recipe-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${type}/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"favorites__img\",\n    \"data-testid\": `${mainIndex}-horizontal-image`,\n    src: image,\n    alt: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${type}/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"favorites__title\",\n    \"data-testid\": `${mainIndex}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"favorites__category\",\n    \"data-testid\": `${mainIndex}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, topText), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"favorites__date\",\n    \"data-testid\": `${mainIndex}-horizontal-done-date`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, doneDate), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"favorites__btn\",\n    type: \"button\",\n    onClick: handleShare,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"favorites__icon\",\n    src: shareIcon,\n    alt: \"share\",\n    id: `${type}/${id}`,\n    \"data-testid\": `${mainIndex}-horizontal-share-btn`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })), isCopied && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"link-favorite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 22\n    }\n  }, \"Link copiado!\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"tag-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, arrayTags.map(tag => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"favorites__tag\",\n    key: tag,\n    \"data-testid\": `${mainIndex}-${tag}-horizontal-tag`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, tag))));\n}\nConcludedCard.propTypes = {\n  type: PropTypes.string.isRequired,\n  mainIndex: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  topText: PropTypes.string.isRequired,\n  handleShare: PropTypes.func.isRequired,\n  isCopied: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  doneDate: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired\n};\nexport default ConcludedCard;","map":{"version":3,"names":["React","useEffect","useState","PropTypes","Link","ConcludedCard","type","mainIndex","id","topText","handleShare","isCopied","name","image","doneDate","tags","arrayTags","setArrayTags","array","toString","split","slice","shareIcon","map","tag","propTypes","string","isRequired","number","func","bool"],"sources":["/Users/brenoaraujo/projects-to-github/RecipeApp/src/components/ConcludedCard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport shareIcon from '../images/shareIcon.svg';\nimport '../css/ConcludedRecipes.css';\n\nfunction ConcludedCard({\n  type,\n  mainIndex,\n  id,\n  topText,\n  handleShare,\n  isCopied,\n  name,\n  image,\n  doneDate,\n  tags,\n}) {\n  const [arrayTags, setArrayTags] = useState([]);\n  useEffect(() => {\n    if (tags) {\n      const array = tags !== '' ? tags.toString().split(',').slice(0, 2) : [];\n      return setArrayTags(array);\n    }\n  }, [tags]);\n  return (\n    <div className=\"recipe-container\">\n      <Link to={ `/${type}/${id}` }>\n        <img\n          className=\"favorites__img\"\n          data-testid={ `${mainIndex}-horizontal-image` }\n          src={ image }\n          alt={ name }\n        />\n      </Link>\n      <div className=\"text\">\n        <Link to={ `/${type}/${id}` }>\n          <h3\n            className=\"favorites__title\"\n            data-testid={ `${mainIndex}-horizontal-name` }\n          >\n            {name}\n          </h3>\n        </Link>\n        <h4\n          className=\"favorites__category\"\n          data-testid={ `${mainIndex}-horizontal-top-text` }\n        >\n          {topText}\n        </h4>\n        <p\n          className=\"favorites__date\"\n          data-testid={ `${mainIndex}-horizontal-done-date` }\n        >\n          {doneDate}\n        </p>\n        <button className=\"favorites__btn\" type=\"button\" onClick={ handleShare }>\n          <img\n            className=\"favorites__icon\"\n            src={ shareIcon }\n            alt=\"share\"\n            id={ `${type}/${id}` }\n            data-testid={ `${mainIndex}-horizontal-share-btn` }\n          />\n        </button>\n        {isCopied && <p className=\"link-favorite\">Link copiado!</p>}\n      </div>\n      <ul className=\"tag-container\">\n        {arrayTags.map((tag) => (\n          <li\n            className=\"favorites__tag\"\n            key={ tag }\n            data-testid={ `${mainIndex}-${tag}-horizontal-tag` }\n          >\n            {tag}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nConcludedCard.propTypes = {\n  type: PropTypes.string.isRequired,\n  mainIndex: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  topText: PropTypes.string.isRequired,\n  handleShare: PropTypes.func.isRequired,\n  isCopied: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  doneDate: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n};\nexport default ConcludedCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}