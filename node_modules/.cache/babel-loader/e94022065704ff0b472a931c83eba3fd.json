{"ast":null,"code":"export async function requestFilteredDrinks(text, radio) {\n  if (radio === 'ingredient') {\n    const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${text}`);\n    const result = await response.json();\n    return result;\n  }\n\n  if (radio === 'name') {\n    const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${text}`);\n    const result = await response.json();\n    return result;\n  }\n\n  const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${text}`);\n  const result = await response.json();\n  return result;\n}\nexport async function requestFilteredFoods(text, radio) {\n  if (radio === 'ingredient') {\n    const response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${text}`);\n    const result = await response.json();\n    return result;\n  }\n\n  if (radio === 'name') {\n    const response = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${text}`);\n    const result = await response.json();\n    return result;\n  }\n\n  const response = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${text}`);\n  const result = await response.json();\n  return result;\n}\nexport async function fetchAPIRandomFoodOrDrink(category) {\n  const urlByCategory = category === 'food' ? 'themealdb' : 'thecocktaildb';\n  const response = await fetch(`https://www.${urlByCategory}.com/api/json/v1/1/random.php`);\n  const result = await response.json();\n  return result;\n}\nexport async function requestFoodsOrDrinks(urlByCategory) {\n  const response = await fetch(`https://www.${urlByCategory}.com/api/json/v1/1/search.php?s=`);\n  const result = await response.json();\n  return result;\n}\nexport async function requestCategories(urlByCategory) {\n  const response = await fetch(`https://www.${urlByCategory}.com/api/json/v1/1/list.php?c=list`);\n  const result = await response.json();\n  return result;\n}\nexport async function requestRecipesByCategory(category, urlByCategory) {\n  const response = await fetch(`https://www.${urlByCategory}.com/api/json/v1/1/filter.php?c=${category}`);\n  const result = await response.json();\n  return result;\n}\nexport async function requestRecipesById(id, urlByCategory) {\n  const response = await fetch(`https://www.${urlByCategory}.com/api/json/v1/1/lookup.php?i=${id}`);\n  const result = await response.json();\n  return result;\n}\nexport async function requestIngredients(urlByCategory) {\n  const response = await fetch(`https://www.${urlByCategory}.com/api/json/v1/1/list.php?i=list`);\n  const result = await response.json();\n  return result;\n}\nexport async function requestAreas() {\n  const response = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?a=list');\n  const result = await response.json();\n  return result;\n}\nexport async function requestRecipesByArea(area) {\n  if (area === 'All') {\n    return requestFoodsOrDrinks('themealdb');\n  }\n\n  const response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${area}`);\n  const result = await response.json();\n  return result;\n}","map":{"version":3,"names":["requestFilteredDrinks","text","radio","response","fetch","result","json","requestFilteredFoods","fetchAPIRandomFoodOrDrink","category","urlByCategory","requestFoodsOrDrinks","requestCategories","requestRecipesByCategory","requestRecipesById","id","requestIngredients","requestAreas","requestRecipesByArea","area"],"sources":["/Users/brenoaraujo/projects-to-github/RecipeApp/src/services/fetchAPIs.js"],"sourcesContent":["export async function requestFilteredDrinks(text, radio) {\n  if (radio === 'ingredient') {\n    const response = await fetch(\n      `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${text}`,\n    );\n    const result = await response.json();\n    return result;\n  }\n  if (radio === 'name') {\n    const response = await fetch(\n      `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${text}`,\n    );\n    const result = await response.json();\n    return result;\n  }\n  const response = await fetch(\n    `https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${text}`,\n  );\n  const result = await response.json();\n  return result;\n}\n\nexport async function requestFilteredFoods(text, radio) {\n  if (radio === 'ingredient') {\n    const response = await fetch(\n      `https://www.themealdb.com/api/json/v1/1/filter.php?i=${text}`,\n    );\n    const result = await response.json();\n    return result;\n  }\n  if (radio === 'name') {\n    const response = await fetch(\n      `https://www.themealdb.com/api/json/v1/1/search.php?s=${text}`,\n    );\n    const result = await response.json();\n    return result;\n  }\n  const response = await fetch(\n    `https://www.themealdb.com/api/json/v1/1/search.php?f=${text}`,\n  );\n  const result = await response.json();\n  return result;\n}\n\nexport async function fetchAPIRandomFoodOrDrink(category) {\n  const urlByCategory = category === 'food' ? 'themealdb' : 'thecocktaildb';\n  const response = await fetch(\n    `https://www.${urlByCategory}.com/api/json/v1/1/random.php`,\n  );\n  const result = await response.json();\n  return result;\n}\n\nexport async function requestFoodsOrDrinks(urlByCategory) {\n  const response = await fetch(\n    `https://www.${urlByCategory}.com/api/json/v1/1/search.php?s=`,\n  );\n  const result = await response.json();\n  return result;\n}\n\nexport async function requestCategories(urlByCategory) {\n  const response = await fetch(\n    `https://www.${urlByCategory}.com/api/json/v1/1/list.php?c=list`,\n  );\n  const result = await response.json();\n  return result;\n}\n\nexport async function requestRecipesByCategory(category, urlByCategory) {\n  const response = await fetch(\n    `https://www.${urlByCategory}.com/api/json/v1/1/filter.php?c=${category}`,\n  );\n  const result = await response.json();\n  return result;\n}\n\nexport async function requestRecipesById(id, urlByCategory) {\n  const response = await fetch(\n    `https://www.${urlByCategory}.com/api/json/v1/1/lookup.php?i=${id}`,\n  );\n  const result = await response.json();\n  return result;\n}\n\nexport async function requestIngredients(urlByCategory) {\n  const response = await fetch(\n    `https://www.${urlByCategory}.com/api/json/v1/1/list.php?i=list`,\n  );\n  const result = await response.json();\n  return result;\n}\n\nexport async function requestAreas() {\n  const response = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?a=list');\n  const result = await response.json();\n  return result;\n}\n\nexport async function requestRecipesByArea(area) {\n  if (area === 'All') {\n    return requestFoodsOrDrinks('themealdb');\n  }\n  const response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${area}`);\n  const result = await response.json();\n  return result;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}