{"ast":null,"code":"/**\n * @fileoverview Rule to flag variable leak in CatchClauses in IE 8 and earlier\n * @author Ian Christian Myers\n * @deprecated in ESLint v5.1.0\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nconst astUtils = require(\"./utils/ast-utils\"); //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n\nmodule.exports = {\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"disallow `catch` clause parameters from shadowing variables in the outer scope\",\n      category: \"Variables\",\n      recommended: false,\n      url: \"https://eslint.org/docs/rules/no-catch-shadow\"\n    },\n    replacedBy: [\"no-shadow\"],\n    deprecated: true,\n    schema: [],\n    messages: {\n      mutable: \"Value of '{{name}}' may be overwritten in IE 8 and earlier.\"\n    }\n  },\n\n  create(context) {\n    //--------------------------------------------------------------------------\n    // Helpers\n    //--------------------------------------------------------------------------\n\n    /**\n     * Check if the parameters are been shadowed\n     * @param {Object} scope current scope\n     * @param {string} name parameter name\n     * @returns {boolean} True is its been shadowed\n     */\n    function paramIsShadowing(scope, name) {\n      return astUtils.getVariableByName(scope, name) !== null;\n    } //--------------------------------------------------------------------------\n    // Public API\n    //--------------------------------------------------------------------------\n\n\n    return {\n      \"CatchClause[param!=null]\"(node) {\n        let scope = context.getScope();\n        /*\n         * When ecmaVersion >= 6, CatchClause creates its own scope\n         * so start from one upper scope to exclude the current node\n         */\n\n        if (scope.block === node) {\n          scope = scope.upper;\n        }\n\n        if (paramIsShadowing(scope, node.param.name)) {\n          context.report({\n            node,\n            messageId: \"mutable\",\n            data: {\n              name: node.param.name\n            }\n          });\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"names":["astUtils","require","module","exports","meta","type","docs","description","category","recommended","url","replacedBy","deprecated","schema","messages","mutable","create","context","paramIsShadowing","scope","name","getVariableByName","node","getScope","block","upper","param","report","messageId","data"],"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/node_modules/eslint/lib/rules/no-catch-shadow.js"],"sourcesContent":["/**\n * @fileoverview Rule to flag variable leak in CatchClauses in IE 8 and earlier\n * @author Ian Christian Myers\n * @deprecated in ESLint v5.1.0\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nconst astUtils = require(\"./utils/ast-utils\");\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        type: \"suggestion\",\n\n        docs: {\n            description: \"disallow `catch` clause parameters from shadowing variables in the outer scope\",\n            category: \"Variables\",\n            recommended: false,\n            url: \"https://eslint.org/docs/rules/no-catch-shadow\"\n        },\n\n        replacedBy: [\"no-shadow\"],\n\n        deprecated: true,\n        schema: [],\n\n        messages: {\n            mutable: \"Value of '{{name}}' may be overwritten in IE 8 and earlier.\"\n        }\n    },\n\n    create(context) {\n\n        //--------------------------------------------------------------------------\n        // Helpers\n        //--------------------------------------------------------------------------\n\n        /**\n         * Check if the parameters are been shadowed\n         * @param {Object} scope current scope\n         * @param {string} name parameter name\n         * @returns {boolean} True is its been shadowed\n         */\n        function paramIsShadowing(scope, name) {\n            return astUtils.getVariableByName(scope, name) !== null;\n        }\n\n        //--------------------------------------------------------------------------\n        // Public API\n        //--------------------------------------------------------------------------\n\n        return {\n\n            \"CatchClause[param!=null]\"(node) {\n                let scope = context.getScope();\n\n                /*\n                 * When ecmaVersion >= 6, CatchClause creates its own scope\n                 * so start from one upper scope to exclude the current node\n                 */\n                if (scope.block === node) {\n                    scope = scope.upper;\n                }\n\n                if (paramIsShadowing(scope, node.param.name)) {\n                    context.report({ node, messageId: \"mutable\", data: { name: node.param.name } });\n                }\n            }\n        };\n\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA,a,CAEA;AACA;AACA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,mBAAD,CAAxB,C,CAEA;AACA;AACA;;;AAEAC,MAAM,CAACC,OAAP,GAAiB;EACbC,IAAI,EAAE;IACFC,IAAI,EAAE,YADJ;IAGFC,IAAI,EAAE;MACFC,WAAW,EAAE,gFADX;MAEFC,QAAQ,EAAE,WAFR;MAGFC,WAAW,EAAE,KAHX;MAIFC,GAAG,EAAE;IAJH,CAHJ;IAUFC,UAAU,EAAE,CAAC,WAAD,CAVV;IAYFC,UAAU,EAAE,IAZV;IAaFC,MAAM,EAAE,EAbN;IAeFC,QAAQ,EAAE;MACNC,OAAO,EAAE;IADH;EAfR,CADO;;EAqBbC,MAAM,CAACC,OAAD,EAAU;IAEZ;IACA;IACA;;IAEA;AACR;AACA;AACA;AACA;AACA;IACQ,SAASC,gBAAT,CAA0BC,KAA1B,EAAiCC,IAAjC,EAAuC;MACnC,OAAOpB,QAAQ,CAACqB,iBAAT,CAA2BF,KAA3B,EAAkCC,IAAlC,MAA4C,IAAnD;IACH,CAdW,CAgBZ;IACA;IACA;;;IAEA,OAAO;MAEH,2BAA2BE,IAA3B,EAAiC;QAC7B,IAAIH,KAAK,GAAGF,OAAO,CAACM,QAAR,EAAZ;QAEA;AAChB;AACA;AACA;;QACgB,IAAIJ,KAAK,CAACK,KAAN,KAAgBF,IAApB,EAA0B;UACtBH,KAAK,GAAGA,KAAK,CAACM,KAAd;QACH;;QAED,IAAIP,gBAAgB,CAACC,KAAD,EAAQG,IAAI,CAACI,KAAL,CAAWN,IAAnB,CAApB,EAA8C;UAC1CH,OAAO,CAACU,MAAR,CAAe;YAAEL,IAAF;YAAQM,SAAS,EAAE,SAAnB;YAA8BC,IAAI,EAAE;cAAET,IAAI,EAAEE,IAAI,CAACI,KAAL,CAAWN;YAAnB;UAApC,CAAf;QACH;MACJ;;IAhBE,CAAP;EAmBH;;AA5DY,CAAjB"},"metadata":{},"sourceType":"script"}