{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getControlContainerStyles = void 0;\n\nconst types_1 = require(\"./types\");\n\nconst commonStyles = {\n  position: 'absolute',\n  display: 'flex',\n  zIndex: 1,\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0\n};\n/**\n * Gets flexbox alignment and justify-content styles for a given position.\n */\n\nconst getControlContainerFlexStyles = pos => {\n  let alignItems;\n\n  switch (pos) {\n    case types_1.Positions.TopLeft:\n    case types_1.Positions.TopCenter:\n    case types_1.Positions.TopRight:\n      alignItems = 'flex-start';\n      break;\n\n    case types_1.Positions.CenterLeft:\n    case types_1.Positions.CenterCenter:\n    case types_1.Positions.CenterRight:\n      alignItems = 'center';\n      break;\n\n    case types_1.Positions.BottomLeft:\n    case types_1.Positions.BottomCenter:\n    case types_1.Positions.BottomRight:\n      alignItems = 'flex-end';\n      break;\n  }\n\n  let justifyContent;\n\n  switch (pos) {\n    case types_1.Positions.TopLeft:\n    case types_1.Positions.CenterLeft:\n    case types_1.Positions.BottomLeft:\n      justifyContent = 'flex-start';\n      break;\n\n    case types_1.Positions.TopCenter:\n    case types_1.Positions.CenterCenter:\n    case types_1.Positions.BottomCenter:\n      justifyContent = 'center';\n      break;\n\n    case types_1.Positions.TopRight:\n    case types_1.Positions.CenterRight:\n    case types_1.Positions.BottomRight:\n      justifyContent = 'flex-end';\n      break;\n  }\n\n  return {\n    alignItems,\n    justifyContent\n  };\n};\n/**\n * Gets the styles for a back/forward control container to align the control\n * properly within the parent.\n */\n\n\nconst getControlContainerStyles = pos => {\n  return Object.assign(Object.assign({}, getControlContainerFlexStyles(pos)), commonStyles);\n};\n\nexports.getControlContainerStyles = getControlContainerStyles;","map":{"version":3,"sources":["../src/control-styles.ts"],"names":[],"mappings":";;;;;;;AACA,MAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAEA,MAAM,YAAY,GAAkB;EAClC,QAAQ,EAAE,UADwB;EAElC,OAAO,EAAE,MAFyB;EAGlC,MAAM,EAAE,CAH0B;EAIlC,GAAG,EAAE,CAJ6B;EAKlC,IAAI,EAAE,CAL4B;EAMlC,MAAM,EAAE,CAN0B;EAOlC,KAAK,EAAE;AAP2B,CAApC;AAUA;;AAEG;;AACH,MAAM,6BAA6B,GAAI,GAAD,IAAkC;EACtE,IAAI,UAAJ;;EAEA,QAAQ,GAAR;IACE,KAAK,OAAA,CAAA,SAAA,CAAU,OAAf;IACA,KAAK,OAAA,CAAA,SAAA,CAAU,SAAf;IACA,KAAK,OAAA,CAAA,SAAA,CAAU,QAAf;MACE,UAAU,GAAG,YAAb;MACA;;IACF,KAAK,OAAA,CAAA,SAAA,CAAU,UAAf;IACA,KAAK,OAAA,CAAA,SAAA,CAAU,YAAf;IACA,KAAK,OAAA,CAAA,SAAA,CAAU,WAAf;MACE,UAAU,GAAG,QAAb;MACA;;IACF,KAAK,OAAA,CAAA,SAAA,CAAU,UAAf;IACA,KAAK,OAAA,CAAA,SAAA,CAAU,YAAf;IACA,KAAK,OAAA,CAAA,SAAA,CAAU,WAAf;MACE,UAAU,GAAG,UAAb;MACA;EAfJ;;EAkBA,IAAI,cAAJ;;EACA,QAAQ,GAAR;IACE,KAAK,OAAA,CAAA,SAAA,CAAU,OAAf;IACA,KAAK,OAAA,CAAA,SAAA,CAAU,UAAf;IACA,KAAK,OAAA,CAAA,SAAA,CAAU,UAAf;MACE,cAAc,GAAG,YAAjB;MACA;;IACF,KAAK,OAAA,CAAA,SAAA,CAAU,SAAf;IACA,KAAK,OAAA,CAAA,SAAA,CAAU,YAAf;IACA,KAAK,OAAA,CAAA,SAAA,CAAU,YAAf;MACE,cAAc,GAAG,QAAjB;MACA;;IACF,KAAK,OAAA,CAAA,SAAA,CAAU,QAAf;IACA,KAAK,OAAA,CAAA,SAAA,CAAU,WAAf;IACA,KAAK,OAAA,CAAA,SAAA,CAAU,WAAf;MACE,cAAc,GAAG,UAAjB;MACA;EAfJ;;EAkBA,OAAO;IAAE,UAAF;IAAc;EAAd,CAAP;AACD,CAzCD;AA2CA;;;AAGG;;;AACI,MAAM,yBAAyB,GAAI,GAAD,IAAkC;EACzE,OAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAY,6BAA6B,CAAC,GAAD,CAAzC,CAAA,EAAmD,YAAnD,CAAA;AACD,CAFM;;AAAM,OAAA,CAAA,yBAAA,GAAyB,yBAAzB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getControlContainerStyles = void 0;\nconst types_1 = require(\"./types\");\nconst commonStyles = {\n    position: 'absolute',\n    display: 'flex',\n    zIndex: 1,\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n};\n/**\n * Gets flexbox alignment and justify-content styles for a given position.\n */\nconst getControlContainerFlexStyles = (pos) => {\n    let alignItems;\n    switch (pos) {\n        case types_1.Positions.TopLeft:\n        case types_1.Positions.TopCenter:\n        case types_1.Positions.TopRight:\n            alignItems = 'flex-start';\n            break;\n        case types_1.Positions.CenterLeft:\n        case types_1.Positions.CenterCenter:\n        case types_1.Positions.CenterRight:\n            alignItems = 'center';\n            break;\n        case types_1.Positions.BottomLeft:\n        case types_1.Positions.BottomCenter:\n        case types_1.Positions.BottomRight:\n            alignItems = 'flex-end';\n            break;\n    }\n    let justifyContent;\n    switch (pos) {\n        case types_1.Positions.TopLeft:\n        case types_1.Positions.CenterLeft:\n        case types_1.Positions.BottomLeft:\n            justifyContent = 'flex-start';\n            break;\n        case types_1.Positions.TopCenter:\n        case types_1.Positions.CenterCenter:\n        case types_1.Positions.BottomCenter:\n            justifyContent = 'center';\n            break;\n        case types_1.Positions.TopRight:\n        case types_1.Positions.CenterRight:\n        case types_1.Positions.BottomRight:\n            justifyContent = 'flex-end';\n            break;\n    }\n    return { alignItems, justifyContent };\n};\n/**\n * Gets the styles for a back/forward control container to align the control\n * properly within the parent.\n */\nconst getControlContainerStyles = (pos) => {\n    return Object.assign(Object.assign({}, getControlContainerFlexStyles(pos)), commonStyles);\n};\nexports.getControlContainerStyles = getControlContainerStyles;\n"]},"metadata":{},"sourceType":"script"}