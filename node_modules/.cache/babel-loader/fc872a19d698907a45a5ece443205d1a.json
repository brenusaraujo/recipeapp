{"ast":null,"code":"/**\n * @fileoverview Defines environment settings and globals.\n * @author Elan Shanker\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nconst globals = require(\"globals\"); //------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\n/**\n * Get the object that has difference.\n * @param {Record<string,boolean>} current The newer object.\n * @param {Record<string,boolean>} prev The older object.\n * @returns {Record<string,boolean>} The difference object.\n */\n\n\nfunction getDiff(current, prev) {\n  const retv = {};\n\n  for (const [key, value] of Object.entries(current)) {\n    if (!Object.hasOwnProperty.call(prev, key)) {\n      retv[key] = value;\n    }\n  }\n\n  return retv;\n}\n\nconst newGlobals2015 = getDiff(globals.es2015, globals.es5); // 19 variables such as Promise, Map, ...\n\nconst newGlobals2017 = {\n  Atomics: false,\n  SharedArrayBuffer: false\n};\nconst newGlobals2020 = {\n  BigInt: false,\n  BigInt64Array: false,\n  BigUint64Array: false,\n  globalThis: false\n};\nconst newGlobals2021 = {\n  AggregateError: false,\n  FinalizationRegistry: false,\n  WeakRef: false\n}; //------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\n/** @type {Map<string, import(\"../lib/shared/types\").Environment>} */\n\nmodule.exports = new Map(Object.entries({\n  // Language\n  builtin: {\n    globals: globals.es5\n  },\n  es6: {\n    globals: newGlobals2015,\n    parserOptions: {\n      ecmaVersion: 6\n    }\n  },\n  es2015: {\n    globals: newGlobals2015,\n    parserOptions: {\n      ecmaVersion: 6\n    }\n  },\n  es2017: {\n    globals: { ...newGlobals2015,\n      ...newGlobals2017\n    },\n    parserOptions: {\n      ecmaVersion: 8\n    }\n  },\n  es2020: {\n    globals: { ...newGlobals2015,\n      ...newGlobals2017,\n      ...newGlobals2020\n    },\n    parserOptions: {\n      ecmaVersion: 11\n    }\n  },\n  es2021: {\n    globals: { ...newGlobals2015,\n      ...newGlobals2017,\n      ...newGlobals2020,\n      ...newGlobals2021\n    },\n    parserOptions: {\n      ecmaVersion: 12\n    }\n  },\n  // Platforms\n  browser: {\n    globals: globals.browser\n  },\n  node: {\n    globals: globals.node,\n    parserOptions: {\n      ecmaFeatures: {\n        globalReturn: true\n      }\n    }\n  },\n  \"shared-node-browser\": {\n    globals: globals[\"shared-node-browser\"]\n  },\n  worker: {\n    globals: globals.worker\n  },\n  serviceworker: {\n    globals: globals.serviceworker\n  },\n  // Frameworks\n  commonjs: {\n    globals: globals.commonjs,\n    parserOptions: {\n      ecmaFeatures: {\n        globalReturn: true\n      }\n    }\n  },\n  amd: {\n    globals: globals.amd\n  },\n  mocha: {\n    globals: globals.mocha\n  },\n  jasmine: {\n    globals: globals.jasmine\n  },\n  jest: {\n    globals: globals.jest\n  },\n  phantomjs: {\n    globals: globals.phantomjs\n  },\n  jquery: {\n    globals: globals.jquery\n  },\n  qunit: {\n    globals: globals.qunit\n  },\n  prototypejs: {\n    globals: globals.prototypejs\n  },\n  shelljs: {\n    globals: globals.shelljs\n  },\n  meteor: {\n    globals: globals.meteor\n  },\n  mongo: {\n    globals: globals.mongo\n  },\n  protractor: {\n    globals: globals.protractor\n  },\n  applescript: {\n    globals: globals.applescript\n  },\n  nashorn: {\n    globals: globals.nashorn\n  },\n  atomtest: {\n    globals: globals.atomtest\n  },\n  embertest: {\n    globals: globals.embertest\n  },\n  webextensions: {\n    globals: globals.webextensions\n  },\n  greasemonkey: {\n    globals: globals.greasemonkey\n  }\n}));","map":{"version":3,"names":["globals","require","getDiff","current","prev","retv","key","value","Object","entries","hasOwnProperty","call","newGlobals2015","es2015","es5","newGlobals2017","Atomics","SharedArrayBuffer","newGlobals2020","BigInt","BigInt64Array","BigUint64Array","globalThis","newGlobals2021","AggregateError","FinalizationRegistry","WeakRef","module","exports","Map","builtin","es6","parserOptions","ecmaVersion","es2017","es2020","es2021","browser","node","ecmaFeatures","globalReturn","worker","serviceworker","commonjs","amd","mocha","jasmine","jest","phantomjs","jquery","qunit","prototypejs","shelljs","meteor","mongo","protractor","applescript","nashorn","atomtest","embertest","webextensions","greasemonkey"],"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/node_modules/@eslint/eslintrc/conf/environments.js"],"sourcesContent":["/**\n * @fileoverview Defines environment settings and globals.\n * @author Elan Shanker\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nconst globals = require(\"globals\");\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\n/**\n * Get the object that has difference.\n * @param {Record<string,boolean>} current The newer object.\n * @param {Record<string,boolean>} prev The older object.\n * @returns {Record<string,boolean>} The difference object.\n */\nfunction getDiff(current, prev) {\n    const retv = {};\n\n    for (const [key, value] of Object.entries(current)) {\n        if (!Object.hasOwnProperty.call(prev, key)) {\n            retv[key] = value;\n        }\n    }\n\n    return retv;\n}\n\nconst newGlobals2015 = getDiff(globals.es2015, globals.es5); // 19 variables such as Promise, Map, ...\nconst newGlobals2017 = {\n    Atomics: false,\n    SharedArrayBuffer: false\n};\nconst newGlobals2020 = {\n    BigInt: false,\n    BigInt64Array: false,\n    BigUint64Array: false,\n    globalThis: false\n};\n\nconst newGlobals2021 = {\n    AggregateError: false,\n    FinalizationRegistry: false,\n    WeakRef: false\n};\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\n/** @type {Map<string, import(\"../lib/shared/types\").Environment>} */\nmodule.exports = new Map(Object.entries({\n\n    // Language\n    builtin: {\n        globals: globals.es5\n    },\n    es6: {\n        globals: newGlobals2015,\n        parserOptions: {\n            ecmaVersion: 6\n        }\n    },\n    es2015: {\n        globals: newGlobals2015,\n        parserOptions: {\n            ecmaVersion: 6\n        }\n    },\n    es2017: {\n        globals: { ...newGlobals2015, ...newGlobals2017 },\n        parserOptions: {\n            ecmaVersion: 8\n        }\n    },\n    es2020: {\n        globals: { ...newGlobals2015, ...newGlobals2017, ...newGlobals2020 },\n        parserOptions: {\n            ecmaVersion: 11\n        }\n    },\n    es2021: {\n        globals: { ...newGlobals2015, ...newGlobals2017, ...newGlobals2020, ...newGlobals2021 },\n        parserOptions: {\n            ecmaVersion: 12\n        }\n    },\n\n    // Platforms\n    browser: {\n        globals: globals.browser\n    },\n    node: {\n        globals: globals.node,\n        parserOptions: {\n            ecmaFeatures: {\n                globalReturn: true\n            }\n        }\n    },\n    \"shared-node-browser\": {\n        globals: globals[\"shared-node-browser\"]\n    },\n    worker: {\n        globals: globals.worker\n    },\n    serviceworker: {\n        globals: globals.serviceworker\n    },\n\n    // Frameworks\n    commonjs: {\n        globals: globals.commonjs,\n        parserOptions: {\n            ecmaFeatures: {\n                globalReturn: true\n            }\n        }\n    },\n    amd: {\n        globals: globals.amd\n    },\n    mocha: {\n        globals: globals.mocha\n    },\n    jasmine: {\n        globals: globals.jasmine\n    },\n    jest: {\n        globals: globals.jest\n    },\n    phantomjs: {\n        globals: globals.phantomjs\n    },\n    jquery: {\n        globals: globals.jquery\n    },\n    qunit: {\n        globals: globals.qunit\n    },\n    prototypejs: {\n        globals: globals.prototypejs\n    },\n    shelljs: {\n        globals: globals.shelljs\n    },\n    meteor: {\n        globals: globals.meteor\n    },\n    mongo: {\n        globals: globals.mongo\n    },\n    protractor: {\n        globals: globals.protractor\n    },\n    applescript: {\n        globals: globals.applescript\n    },\n    nashorn: {\n        globals: globals.nashorn\n    },\n    atomtest: {\n        globals: globals.atomtest\n    },\n    embertest: {\n        globals: globals.embertest\n    },\n    webextensions: {\n        globals: globals.webextensions\n    },\n    greasemonkey: {\n        globals: globals.greasemonkey\n    }\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}