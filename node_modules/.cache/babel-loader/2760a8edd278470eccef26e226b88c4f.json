{"ast":null,"code":"var _jsxFileName = \"/Users/brenoaraujo/projects-to-github/RecipeApp/src/components/headerComponents/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Context from '../../context/Context';\nimport { requestMealsAPI, requestDrinksAPI } from '../../services/requestMealsAndDrinksAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchBar() {\n  _s();\n\n  const {\n    setSearchData,\n    search,\n    setError,\n    handleSearchChange\n  } = useContext(Context);\n  const history = useHistory();\n  const {\n    pathname\n  } = history.location;\n  const path = pathname.split('/')[1];\n\n  const handleSearch = async () => {\n    const {\n      filter,\n      value\n    } = search;\n\n    if (filter === 'First letter' && value.length !== 1) {\n      setError('Your search must have only 1 (one) character');\n    }\n\n    const data = path === 'foods' ? await requestMealsAPI(filter, value) : await requestDrinksAPI(filter, value);\n\n    if (data) {\n      setSearchData(data);\n    } else {\n      setError('Sorry, we haven\\'t found any recipes for these filters.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"ingredient-search-radio\",\n      children: [\"Ingredient\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"filter\",\n        id: \"ingredient-search-radio\",\n        \"data-testid\": \"ingredient-search-radio\",\n        value: \"Ingredient\",\n        onChange: handleSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name-search-radio\",\n      children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"filter\",\n        id: \"name-search-radio\",\n        \"data-testid\": \"name-search-radio\",\n        value: \"Name\",\n        onChange: handleSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"first-letter-search-radio\",\n      children: [\"First letter\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"filter\",\n        id: \"first-letter-search-radio\",\n        \"data-testid\": \"first-letter-search-radio\",\n        value: \"First letter\",\n        onChange: handleSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"exec-search-btn\",\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchBar, \"+tNM7NaEMxB5YvtIzc5ee2ru0bs=\", false, function () {\n  return [useHistory];\n});\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useContext","useHistory","Context","requestMealsAPI","requestDrinksAPI","SearchBar","setSearchData","search","setError","handleSearchChange","history","pathname","location","path","split","handleSearch","filter","value","length","data"],"sources":["/Users/brenoaraujo/projects-to-github/RecipeApp/src/components/headerComponents/SearchBar.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Context from '../../context/Context';\nimport {\n  requestMealsAPI,\n  requestDrinksAPI } from '../../services/requestMealsAndDrinksAPI';\n\nfunction SearchBar() {\n  const { setSearchData, search, setError, handleSearchChange } = useContext(Context);\n  const history = useHistory();\n  const { pathname } = history.location;\n  const path = pathname.split('/')[1];\n\n  const handleSearch = async () => {\n    const { filter, value } = search;\n    if (filter === 'First letter' && value.length !== 1) {\n      setError('Your search must have only 1 (one) character');\n    }\n    const data = path === 'foods'\n      ? await requestMealsAPI(filter, value) : await requestDrinksAPI(filter, value);\n\n    if (data) {\n      setSearchData(data);\n    } else {\n      setError('Sorry, we haven\\'t found any recipes for these filters.');\n    }\n  };\n\n  return (\n    <form>\n      <label htmlFor=\"ingredient-search-radio\">\n        Ingredient\n        <input\n          type=\"radio\"\n          name=\"filter\"\n          id=\"ingredient-search-radio\"\n          data-testid=\"ingredient-search-radio\"\n          value=\"Ingredient\"\n          onChange={ handleSearchChange }\n        />\n      </label>\n      <label htmlFor=\"name-search-radio\">\n        Name\n        <input\n          type=\"radio\"\n          name=\"filter\"\n          id=\"name-search-radio\"\n          data-testid=\"name-search-radio\"\n          value=\"Name\"\n          onChange={ handleSearchChange }\n        />\n      </label>\n      <label htmlFor=\"first-letter-search-radio\">\n        First letter\n        <input\n          type=\"radio\"\n          name=\"filter\"\n          id=\"first-letter-search-radio\"\n          data-testid=\"first-letter-search-radio\"\n          value=\"First letter\"\n          onChange={ handleSearchChange }\n        />\n      </label>\n      <button\n        type=\"button\"\n        data-testid=\"exec-search-btn\"\n        onClick={ handleSearch }\n      >\n        Search\n      </button>\n    </form>\n  );\n}\n\nexport default SearchBar;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SACEC,eADF,EAEEC,gBAFF,QAE0B,yCAF1B;;;AAIA,SAASC,SAAT,GAAqB;EAAA;;EACnB,MAAM;IAAEC,aAAF;IAAiBC,MAAjB;IAAyBC,QAAzB;IAAmCC;EAAnC,IAA0DT,UAAU,CAACE,OAAD,CAA1E;EACA,MAAMQ,OAAO,GAAGT,UAAU,EAA1B;EACA,MAAM;IAAEU;EAAF,IAAeD,OAAO,CAACE,QAA7B;EACA,MAAMC,IAAI,GAAGF,QAAQ,CAACG,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAb;;EAEA,MAAMC,YAAY,GAAG,YAAY;IAC/B,MAAM;MAAEC,MAAF;MAAUC;IAAV,IAAoBV,MAA1B;;IACA,IAAIS,MAAM,KAAK,cAAX,IAA6BC,KAAK,CAACC,MAAN,KAAiB,CAAlD,EAAqD;MACnDV,QAAQ,CAAC,8CAAD,CAAR;IACD;;IACD,MAAMW,IAAI,GAAGN,IAAI,KAAK,OAAT,GACT,MAAMV,eAAe,CAACa,MAAD,EAASC,KAAT,CADZ,GAC8B,MAAMb,gBAAgB,CAACY,MAAD,EAASC,KAAT,CADjE;;IAGA,IAAIE,IAAJ,EAAU;MACRb,aAAa,CAACa,IAAD,CAAb;IACD,CAFD,MAEO;MACLX,QAAQ,CAAC,yDAAD,CAAR;IACD;EACF,CAbD;;EAeA,oBACE;IAAA,wBACE;MAAO,OAAO,EAAC,yBAAf;MAAA,sCAEE;QACE,IAAI,EAAC,OADP;QAEE,IAAI,EAAC,QAFP;QAGE,EAAE,EAAC,yBAHL;QAIE,eAAY,yBAJd;QAKE,KAAK,EAAC,YALR;QAME,QAAQ,EAAGC;MANb;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAYE;MAAO,OAAO,EAAC,mBAAf;MAAA,gCAEE;QACE,IAAI,EAAC,OADP;QAEE,IAAI,EAAC,QAFP;QAGE,EAAE,EAAC,mBAHL;QAIE,eAAY,mBAJd;QAKE,KAAK,EAAC,MALR;QAME,QAAQ,EAAGA;MANb;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAZF,eAuBE;MAAO,OAAO,EAAC,2BAAf;MAAA,wCAEE;QACE,IAAI,EAAC,OADP;QAEE,IAAI,EAAC,QAFP;QAGE,EAAE,EAAC,2BAHL;QAIE,eAAY,2BAJd;QAKE,KAAK,EAAC,cALR;QAME,QAAQ,EAAGA;MANb;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAvBF,eAkCE;MACE,IAAI,EAAC,QADP;MAEE,eAAY,iBAFd;MAGE,OAAO,EAAGM,YAHZ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAlCF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA4CD;;GAjEQV,S;UAESJ,U;;;KAFTI,S;AAmET,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}