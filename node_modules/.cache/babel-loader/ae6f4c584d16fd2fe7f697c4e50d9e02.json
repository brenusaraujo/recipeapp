{"ast":null,"code":"/**\n * @fileoverview Warn when using template string syntax in regular strings\n * @author Jeroen Engels\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  meta: {\n    type: \"problem\",\n    docs: {\n      description: \"disallow template literal placeholder syntax in regular strings\",\n      category: \"Possible Errors\",\n      recommended: false,\n      url: \"https://eslint.org/docs/rules/no-template-curly-in-string\"\n    },\n    schema: [],\n    messages: {\n      unexpectedTemplateExpression: \"Unexpected template string expression.\"\n    }\n  },\n\n  create(context) {\n    const regex = /\\$\\{[^}]+\\}/u;\n    return {\n      Literal(node) {\n        if (typeof node.value === \"string\" && regex.test(node.value)) {\n          context.report({\n            node,\n            messageId: \"unexpectedTemplateExpression\"\n          });\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"names":["module","exports","meta","type","docs","description","category","recommended","url","schema","messages","unexpectedTemplateExpression","create","context","regex","Literal","node","value","test","report","messageId"],"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/node_modules/eslint/lib/rules/no-template-curly-in-string.js"],"sourcesContent":["/**\n * @fileoverview Warn when using template string syntax in regular strings\n * @author Jeroen Engels\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        type: \"problem\",\n\n        docs: {\n            description: \"disallow template literal placeholder syntax in regular strings\",\n            category: \"Possible Errors\",\n            recommended: false,\n            url: \"https://eslint.org/docs/rules/no-template-curly-in-string\"\n        },\n\n        schema: [],\n\n        messages: {\n            unexpectedTemplateExpression: \"Unexpected template string expression.\"\n        }\n    },\n\n    create(context) {\n        const regex = /\\$\\{[^}]+\\}/u;\n\n        return {\n            Literal(node) {\n                if (typeof node.value === \"string\" && regex.test(node.value)) {\n                    context.report({\n                        node,\n                        messageId: \"unexpectedTemplateExpression\"\n                    });\n                }\n            }\n        };\n\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,a,CAEA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB;EACbC,IAAI,EAAE;IACFC,IAAI,EAAE,SADJ;IAGFC,IAAI,EAAE;MACFC,WAAW,EAAE,iEADX;MAEFC,QAAQ,EAAE,iBAFR;MAGFC,WAAW,EAAE,KAHX;MAIFC,GAAG,EAAE;IAJH,CAHJ;IAUFC,MAAM,EAAE,EAVN;IAYFC,QAAQ,EAAE;MACNC,4BAA4B,EAAE;IADxB;EAZR,CADO;;EAkBbC,MAAM,CAACC,OAAD,EAAU;IACZ,MAAMC,KAAK,GAAG,cAAd;IAEA,OAAO;MACHC,OAAO,CAACC,IAAD,EAAO;QACV,IAAI,OAAOA,IAAI,CAACC,KAAZ,KAAsB,QAAtB,IAAkCH,KAAK,CAACI,IAAN,CAAWF,IAAI,CAACC,KAAhB,CAAtC,EAA8D;UAC1DJ,OAAO,CAACM,MAAR,CAAe;YACXH,IADW;YAEXI,SAAS,EAAE;UAFA,CAAf;QAIH;MACJ;;IARE,CAAP;EAWH;;AAhCY,CAAjB"},"metadata":{},"sourceType":"script"}