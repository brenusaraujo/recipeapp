{"ast":null,"code":"var _jsxFileName = \"/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/src/context/AppProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport AppContext from './AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AppProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [title, setTitle] = useState('');\n  const [searchInput, setSearchInput] = useState('');\n  const [renderCards, setRenderCards] = useState([]);\n  const [id, setId] = useState('');\n  const [detail, setDetail] = useState([]);\n  const [doneRecipe, setDoneRecipe] = useState(false);\n  const [startedRecipe, setStartedRecipe] = useState(false);\n  const [globalRecipes, setGlobalRecipes] = useState({});\n  const [tipo, setTipo] = useState();\n  const [idProgress, setidProgress] = useState();\n  const [alert, setAlert] = useState(false);\n  const [favorites, setFavorites] = useState([]);\n  const [doneRecipes, setDoneRecipes] = useState([]);\n  const [favorited, setFavorited] = useState(false);\n\n  const addFirstFavorite = type => {\n    localStorage.setItem('favoriteRecipes', JSON.stringify([{\n      id: type === 'foods' ? recipeDetail[0].idMeal : recipeDetail[0].idDrink,\n      type: type === 'foods' ? 'food' : 'drink',\n      nationality: recipeDetail[0].strArea ? recipeDetail[0].strArea : '',\n      category: recipeDetail[0].strCategory,\n      alcoholicOrNot: type === 'foods' ? '' : recipeDetail[0].strAlcoholic,\n      name: type === 'foods' ? recipeDetail[0].strMeal : recipeDetail[0].strDrink,\n      image: type === 'foods' ? recipeDetail[0].strMealThumb : recipeDetail[0].strDrinkThumb\n    }]));\n  };\n\n  const addNewFavorite = (type, favoritesLocalStorage) => {\n    localStorage.setItem('favoriteRecipes', JSON.stringify([...favoritesLocalStorage, {\n      id: recipeDetail[0].idMeal ? recipeDetail[0].idMeal : recipeDetail[0].idDrink,\n      type: type === 'foods' ? 'food' : 'drink',\n      nationality: recipeDetail[0].strArea ? recipeDetail[0].strArea : '',\n      category: recipeDetail[0].strCategory,\n      alcoholicOrNot: type === 'foods' ? '' : recipeDetail[0].strAlcoholic,\n      name: type === 'foods' ? recipeDetail[0].strMeal : recipeDetail[0].strDrink,\n      image: type === 'foods' ? recipeDetail[0].strMealThumb : recipeDetail[0].strDrinkThumb\n    }]));\n  }; // Requisito 34 - Função que salva no localStorage o primeiro favorito ou acrescenta mais um favorito na lista.\n\n\n  const handleFavorite = (type, idFood, idDrink) => {\n    const favoritesLocalStorage = JSON.parse(localStorage.getItem('favoriteRecipes')); // Requisito 36 - Caso a receita já esteja favoritada, executa o setItem para deixar no localStorage todas as receitas que não forem essa. Ou seja, remove apenas a receita clicada do localStorage. E as receitas restantes são deixadas no localStorage por passarem pelo filtro.\n\n    if (favorited === true) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify(favoritesLocalStorage.filter(item => item.id !== idFood ? idFood : idDrink))); // Requisito 36 - Além de remover do localStorage eu troco a imagem para o coração vazio.\n\n      setFavorited(false);\n    } // Requisito 36 - Caso a receita não esteja favoritada, colocarei ela na lista do localStorage e trocarei a foto para o coração preenchido.\n\n\n    if (favorited === false) {\n      setFavorited(true); // Se não tiver nada salvo na lista 'favoriteRecipes' vai inserir o primeiro item.\n\n      if (favoritesLocalStorage === null) {\n        addFirstFavorite(type);\n      } // Caso já tenha itens na lista 'favoriteRecipes', mantém o que já tem e acrescenta um novo.\n\n\n      if (favoritesLocalStorage !== null) {\n        addNewFavorite(type, favoritesLocalStorage);\n      }\n    }\n  }; // Requisito 35 - Abaixo é feita a verificação se o ID dessa receita atual da página é encontrado na chave 'favoriteRecipes' do localStorage. Se esse ID for encontrado, o state 'favorited' será true e isso renderiza o ícone 'blackHeartIcon'. Se não for encontrado, o state se mantém false e a renderização continua sendo do 'whiteHeartIcon'.\n\n\n  const getFavoriteLocalStorage = (idFood, idDrink) => {\n    const favoritesLocalStorage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n    if (favoritesLocalStorage !== null) {\n      const boolean = favoritesLocalStorage.some(item => item.id === idFood ? idFood : idDrink);\n\n      if (boolean === true) {\n        setFavorited(true);\n      }\n    }\n  };\n\n  const context = {\n    idProgress,\n    setidProgress,\n    tipo,\n    setTipo,\n    title,\n    setTitle,\n    searchInput,\n    setSearchInput,\n    renderCards,\n    setRenderCards,\n    globalRecipes,\n    setGlobalRecipes,\n    id,\n    setId,\n    detail,\n    setDetail,\n    doneRecipe,\n    setDoneRecipe,\n    startedRecipe,\n    setStartedRecipe,\n    alert,\n    setAlert,\n    favorites,\n    setFavorites,\n    doneRecipes,\n    setDoneRecipes\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: context,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AppProvider, \"T6Q9ROSVEJYRjsJnqJB5lyDF0dc=\");\n\n_c = AppProvider;\nAppProvider.propTypes = {\n  children: PropTypes.node\n}.isRequired;\nexport default AppProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useState","PropTypes","AppContext","AppProvider","children","title","setTitle","searchInput","setSearchInput","renderCards","setRenderCards","id","setId","detail","setDetail","doneRecipe","setDoneRecipe","startedRecipe","setStartedRecipe","globalRecipes","setGlobalRecipes","tipo","setTipo","idProgress","setidProgress","alert","setAlert","favorites","setFavorites","doneRecipes","setDoneRecipes","favorited","setFavorited","addFirstFavorite","type","localStorage","setItem","JSON","stringify","recipeDetail","idMeal","idDrink","nationality","strArea","category","strCategory","alcoholicOrNot","strAlcoholic","name","strMeal","strDrink","image","strMealThumb","strDrinkThumb","addNewFavorite","favoritesLocalStorage","handleFavorite","idFood","parse","getItem","filter","item","getFavoriteLocalStorage","boolean","some","context","propTypes","node","isRequired"],"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/src/context/AppProvider.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport AppContext from './AppContext';\n\nfunction AppProvider({ children }) {\n  const [title, setTitle] = useState('');\n  const [searchInput, setSearchInput] = useState('');\n  const [renderCards, setRenderCards] = useState([]);\n  const [id, setId] = useState('');\n  const [detail, setDetail] = useState([]);\n  const [doneRecipe, setDoneRecipe] = useState(false);\n  const [startedRecipe, setStartedRecipe] = useState(false);\n  const [globalRecipes, setGlobalRecipes] = useState({});\n  const [tipo, setTipo] = useState();\n  const [idProgress, setidProgress] = useState();\n  const [alert, setAlert] = useState(false);\n  const [favorites, setFavorites] = useState([]);\n  const [doneRecipes, setDoneRecipes] = useState([]);\n  const [favorited, setFavorited] = useState(false);\n\n  const addFirstFavorite = (type) => {\n    localStorage.setItem('favoriteRecipes', JSON.stringify([{\n      id: type === 'foods' ? recipeDetail[0].idMeal : recipeDetail[0].idDrink,\n      type: type === 'foods' ? 'food' : 'drink',\n      nationality: recipeDetail[0].strArea ? recipeDetail[0].strArea : '',\n      category: recipeDetail[0].strCategory,\n      alcoholicOrNot: type === 'foods' ? '' : recipeDetail[0].strAlcoholic,\n      name: type === 'foods' ? recipeDetail[0].strMeal : recipeDetail[0].strDrink,\n      image: type === 'foods' ? (\n        recipeDetail[0].strMealThumb) : (recipeDetail[0].strDrinkThumb),\n    }]));\n  };\n  const addNewFavorite = (type, favoritesLocalStorage) => {\n    localStorage.setItem('favoriteRecipes', JSON.stringify([\n      ...favoritesLocalStorage,\n      { id: recipeDetail[0].idMeal ? recipeDetail[0].idMeal : recipeDetail[0].idDrink,\n        type: type === 'foods' ? 'food' : 'drink',\n        nationality: recipeDetail[0].strArea ? recipeDetail[0].strArea : '',\n        category: recipeDetail[0].strCategory,\n        alcoholicOrNot: type === 'foods' ? '' : recipeDetail[0].strAlcoholic,\n        name: type === 'foods' ? recipeDetail[0].strMeal : recipeDetail[0].strDrink,\n        image: type === 'foods' ? (\n          recipeDetail[0].strMealThumb) : (recipeDetail[0].strDrinkThumb),\n      }]));\n  };\n  // Requisito 34 - Função que salva no localStorage o primeiro favorito ou acrescenta mais um favorito na lista.\n  const handleFavorite = (type, idFood, idDrink) => {\n    const favoritesLocalStorage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    // Requisito 36 - Caso a receita já esteja favoritada, executa o setItem para deixar no localStorage todas as receitas que não forem essa. Ou seja, remove apenas a receita clicada do localStorage. E as receitas restantes são deixadas no localStorage por passarem pelo filtro.\n    if (favorited === true) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify(\n        favoritesLocalStorage.filter((item) => (item.id !== idFood ? idFood : idDrink)),\n      ));\n      // Requisito 36 - Além de remover do localStorage eu troco a imagem para o coração vazio.\n      setFavorited(false);\n    }\n    // Requisito 36 - Caso a receita não esteja favoritada, colocarei ela na lista do localStorage e trocarei a foto para o coração preenchido.\n    if (favorited === false) {\n      setFavorited(true);\n      // Se não tiver nada salvo na lista 'favoriteRecipes' vai inserir o primeiro item.\n      if (favoritesLocalStorage === null) { addFirstFavorite(type); }\n      // Caso já tenha itens na lista 'favoriteRecipes', mantém o que já tem e acrescenta um novo.\n      if (favoritesLocalStorage !== null) { addNewFavorite(type, favoritesLocalStorage); }\n    }\n  };\n\n  // Requisito 35 - Abaixo é feita a verificação se o ID dessa receita atual da página é encontrado na chave 'favoriteRecipes' do localStorage. Se esse ID for encontrado, o state 'favorited' será true e isso renderiza o ícone 'blackHeartIcon'. Se não for encontrado, o state se mantém false e a renderização continua sendo do 'whiteHeartIcon'.\n  const getFavoriteLocalStorage = (idFood, idDrink) => {\n    const favoritesLocalStorage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (favoritesLocalStorage !== null) {\n      const boolean = favoritesLocalStorage\n        .some((item) => (item.id === idFood ? idFood : idDrink));\n      if (boolean === true) { setFavorited(true); }\n    }\n  };\n\n  const context = {\n    idProgress,\n    setidProgress,\n    tipo,\n    setTipo,\n    title,\n    setTitle,\n    searchInput,\n    setSearchInput,\n    renderCards,\n    setRenderCards,\n    globalRecipes,\n    setGlobalRecipes,\n    id,\n    setId,\n    detail,\n    setDetail,\n    doneRecipe,\n    setDoneRecipe,\n    startedRecipe,\n    setStartedRecipe,\n    alert,\n    setAlert,\n    favorites,\n    setFavorites,\n    doneRecipes,\n    setDoneRecipes,\n  };\n\n  return (\n    <AppContext.Provider value={ context }>\n      { children }\n    </AppContext.Provider>\n  );\n}\n\nAppProvider.propTypes = {\n  children: PropTypes.node,\n}.isRequired;\n\nexport default AppProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}