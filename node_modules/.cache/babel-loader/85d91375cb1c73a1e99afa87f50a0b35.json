{"ast":null,"code":"/**\n * @fileoverview Define the cursor which iterates tokens only, with inflated range.\n * @author Toru Nagashima\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nconst ForwardTokenCursor = require(\"./forward-token-cursor\"); //------------------------------------------------------------------------------\n// Exports\n//------------------------------------------------------------------------------\n\n/**\n * The cursor which iterates tokens only, with inflated range.\n * This is for the backward compatibility of padding options.\n */\n\n\nmodule.exports = class PaddedTokenCursor extends ForwardTokenCursor {\n  /**\n   * Initializes this cursor.\n   * @param {Token[]} tokens The array of tokens.\n   * @param {Comment[]} comments The array of comments.\n   * @param {Object} indexMap The map from locations to indices in `tokens`.\n   * @param {number} startLoc The start location of the iteration range.\n   * @param {number} endLoc The end location of the iteration range.\n   * @param {number} beforeCount The number of tokens this cursor iterates before start.\n   * @param {number} afterCount The number of tokens this cursor iterates after end.\n   */\n  constructor(tokens, comments, indexMap, startLoc, endLoc, beforeCount, afterCount) {\n    super(tokens, comments, indexMap, startLoc, endLoc);\n    this.index = Math.max(0, this.index - beforeCount);\n    this.indexEnd = Math.min(tokens.length - 1, this.indexEnd + afterCount);\n  }\n\n};","map":{"version":3,"names":["ForwardTokenCursor","require","module","exports","PaddedTokenCursor","constructor","tokens","comments","indexMap","startLoc","endLoc","beforeCount","afterCount","index","Math","max","indexEnd","min","length"],"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/node_modules/eslint/lib/source-code/token-store/padded-token-cursor.js"],"sourcesContent":["/**\n * @fileoverview Define the cursor which iterates tokens only, with inflated range.\n * @author Toru Nagashima\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nconst ForwardTokenCursor = require(\"./forward-token-cursor\");\n\n//------------------------------------------------------------------------------\n// Exports\n//------------------------------------------------------------------------------\n\n/**\n * The cursor which iterates tokens only, with inflated range.\n * This is for the backward compatibility of padding options.\n */\nmodule.exports = class PaddedTokenCursor extends ForwardTokenCursor {\n\n    /**\n     * Initializes this cursor.\n     * @param {Token[]} tokens The array of tokens.\n     * @param {Comment[]} comments The array of comments.\n     * @param {Object} indexMap The map from locations to indices in `tokens`.\n     * @param {number} startLoc The start location of the iteration range.\n     * @param {number} endLoc The end location of the iteration range.\n     * @param {number} beforeCount The number of tokens this cursor iterates before start.\n     * @param {number} afterCount The number of tokens this cursor iterates after end.\n     */\n    constructor(tokens, comments, indexMap, startLoc, endLoc, beforeCount, afterCount) {\n        super(tokens, comments, indexMap, startLoc, endLoc);\n        this.index = Math.max(0, this.index - beforeCount);\n        this.indexEnd = Math.min(tokens.length - 1, this.indexEnd + afterCount);\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,a,CAEA;AACA;AACA;;AAEA,MAAMA,kBAAkB,GAAGC,OAAO,CAAC,wBAAD,CAAlC,C,CAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,MAAMC,iBAAN,SAAgCJ,kBAAhC,CAAmD;EAEhE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIK,WAAW,CAACC,MAAD,EAASC,QAAT,EAAmBC,QAAnB,EAA6BC,QAA7B,EAAuCC,MAAvC,EAA+CC,WAA/C,EAA4DC,UAA5D,EAAwE;IAC/E,MAAMN,MAAN,EAAcC,QAAd,EAAwBC,QAAxB,EAAkCC,QAAlC,EAA4CC,MAA5C;IACA,KAAKG,KAAL,GAAaC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,KAAKF,KAAL,GAAaF,WAAzB,CAAb;IACA,KAAKK,QAAL,GAAgBF,IAAI,CAACG,GAAL,CAASX,MAAM,CAACY,MAAP,GAAgB,CAAzB,EAA4B,KAAKF,QAAL,GAAgBJ,UAA5C,CAAhB;EACH;;AAhB+D,CAApE"},"metadata":{},"sourceType":"script"}