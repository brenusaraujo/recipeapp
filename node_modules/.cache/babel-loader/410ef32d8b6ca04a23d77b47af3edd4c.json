{"ast":null,"code":"var _jsxFileName = \"/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/src/components/DetailCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Carousel } from 'react-responsive-carousel';\nimport { fetchFoodsList } from '../services/foodAPI';\nimport 'react-multi-carousel/lib/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIX = 6;\n\nfunction DetailCards(_ref) {\n  _s();\n\n  let {\n    typeOf\n  } = _ref;\n  const [recomended, setRecomended] = useState(undefined);\n  const typeInverted = typeOf === 'foods' ? 'drinks' : 'foods';\n  useEffect(() => {\n    const getRecomended = async () => {\n      const currRecomended = await fetchFoodsList(typeInverted);\n      setRecomended(currRecomended);\n    };\n\n    getRecomended();\n  }, []);\n  console.log(recomended); // ok\n  // const recomendedRenderer = (typeR, data) => {\n  //   if (typeR === 'foods') {\n  //     const { meals } = data;\n  //     const sliced = meals.slice(0, SIX);\n  //     console.log(sliced);\n  //     const returnArray = sliced.map((recipe, index) => (\n  //       <Carousel key={ index }>\n  //         <button\n  //           key={ recipe.idMeal }\n  //           id={ recipe.idMeal }\n  //           type=\"button\"\n  //           data-testid={ `${index}-recomendation-card` }\n  //         >\n  //           <img\n  //             src={ recipe.strMealThumb }\n  //             alt={ recipe.strMeal }\n  //             id={ recipe.idMeal }\n  //             width=\"200px\"\n  //             data-testid={ `${index}-card-img` }\n  //           />\n  //           <p\n  //             id={ recipe.idMeal }\n  //             data-testid={ `${index}-recomendation-title` }\n  //           >\n  //             {recipe.strMeal}\n  //           </p>\n  //         </button>\n  //       </Carousel>\n  //     ));\n  //     return returnArray;\n  //   } if (typeR === 'drinks') {\n  //     const { drinks } = data;\n  //     const sliced = drinks.slice(0, SIX);\n  //     console.log(sliced);\n  //     const returnArray = sliced.map((recipe, index) => (\n  //       <Carousel key={ index }>\n  //         <button\n  //           key={ recipe.idDrink }\n  //           id={ recipe.idDrink }\n  //           type=\"button\"\n  //           data-testid={ `${index}-recomendation-card` }\n  //         >\n  //           <img\n  //             src={ recipe.strDrinkThumb }\n  //             alt={ recipe.strDrink }\n  //             id={ recipe.idDrink }\n  //             width=\"200px\"\n  //             data-testid={ `${index}-card-img` }\n  //           />\n  //           <p\n  //             id={ recipe.idDrink }\n  //             data-testid={ `${index}-recomendation-title` }\n  //           >\n  //             {recipe.strDrink}\n  //           </p>\n  //         </button>\n  //       </Carousel>\n  //     ));\n  //     console.log(returnArray);\n  //     return returnArray;\n  //   }\n  // };\n\n  console.log(typeInverted);\n  console.log(recomended);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DetailCards, \"yBD5RA5Qdvo063dr00hcU7u+QpE=\");\n\n_c = DetailCards;\nDetailCards.propTypes = {\n  typeOf: propTypes.string\n};\nDetailCards.defaultProps = {\n  typeOf: ''\n};\nexport default DetailCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailCards\");","map":{"version":3,"names":["React","useEffect","useState","propTypes","Carousel","fetchFoodsList","SIX","DetailCards","typeOf","recomended","setRecomended","undefined","typeInverted","getRecomended","currRecomended","console","log","string","defaultProps"],"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/src/components/DetailCard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Carousel } from 'react-responsive-carousel';\nimport { fetchFoodsList } from '../services/foodAPI';\nimport 'react-multi-carousel/lib/styles.css';\n\nconst SIX = 6;\n\nfunction DetailCards({ typeOf }) {\n  const [recomended, setRecomended] = useState(undefined);\n\n  const typeInverted = (typeOf === 'foods') ? 'drinks' : 'foods';\n\n  useEffect(() => {\n    const getRecomended = async () => {\n      const currRecomended = await fetchFoodsList(typeInverted);\n      setRecomended(currRecomended);\n    };\n    getRecomended();\n  }, []);\n  console.log(recomended);\n  // ok\n  // const recomendedRenderer = (typeR, data) => {\n  //   if (typeR === 'foods') {\n  //     const { meals } = data;\n  //     const sliced = meals.slice(0, SIX);\n  //     console.log(sliced);\n  //     const returnArray = sliced.map((recipe, index) => (\n  //       <Carousel key={ index }>\n  //         <button\n  //           key={ recipe.idMeal }\n  //           id={ recipe.idMeal }\n  //           type=\"button\"\n  //           data-testid={ `${index}-recomendation-card` }\n  //         >\n  //           <img\n  //             src={ recipe.strMealThumb }\n  //             alt={ recipe.strMeal }\n  //             id={ recipe.idMeal }\n  //             width=\"200px\"\n  //             data-testid={ `${index}-card-img` }\n  //           />\n  //           <p\n  //             id={ recipe.idMeal }\n  //             data-testid={ `${index}-recomendation-title` }\n  //           >\n  //             {recipe.strMeal}\n  //           </p>\n  //         </button>\n  //       </Carousel>\n  //     ));\n  //     return returnArray;\n  //   } if (typeR === 'drinks') {\n  //     const { drinks } = data;\n  //     const sliced = drinks.slice(0, SIX);\n  //     console.log(sliced);\n  //     const returnArray = sliced.map((recipe, index) => (\n  //       <Carousel key={ index }>\n  //         <button\n  //           key={ recipe.idDrink }\n  //           id={ recipe.idDrink }\n  //           type=\"button\"\n  //           data-testid={ `${index}-recomendation-card` }\n  //         >\n  //           <img\n  //             src={ recipe.strDrinkThumb }\n  //             alt={ recipe.strDrink }\n  //             id={ recipe.idDrink }\n  //             width=\"200px\"\n  //             data-testid={ `${index}-card-img` }\n  //           />\n  //           <p\n  //             id={ recipe.idDrink }\n  //             data-testid={ `${index}-recomendation-title` }\n  //           >\n  //             {recipe.strDrink}\n  //           </p>\n  //         </button>\n  //       </Carousel>\n  //     ));\n  //     console.log(returnArray);\n  //     return returnArray;\n  //   }\n  // };\n  console.log(typeInverted);\n  console.log(recomended);\n  return (\n    <div>\n      {/* { recomendedRenderer(typeInverted, recomended) } */}\n    </div>\n\n  );\n}\n\nDetailCards.propTypes = {\n  typeOf: propTypes.string,\n};\n\nDetailCards.defaultProps = {\n  typeOf: '',\n};\n\nexport default DetailCards;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAO,qCAAP;;AAEA,MAAMC,GAAG,GAAG,CAAZ;;AAEA,SAASC,WAAT,OAAiC;EAAA;;EAAA,IAAZ;IAAEC;EAAF,CAAY;EAC/B,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAACS,SAAD,CAA5C;EAEA,MAAMC,YAAY,GAAIJ,MAAM,KAAK,OAAZ,GAAuB,QAAvB,GAAkC,OAAvD;EAEAP,SAAS,CAAC,MAAM;IACd,MAAMY,aAAa,GAAG,YAAY;MAChC,MAAMC,cAAc,GAAG,MAAMT,cAAc,CAACO,YAAD,CAA3C;MACAF,aAAa,CAACI,cAAD,CAAb;IACD,CAHD;;IAIAD,aAAa;EACd,CANQ,EAMN,EANM,CAAT;EAOAE,OAAO,CAACC,GAAR,CAAYP,UAAZ,EAZ+B,CAa/B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACAM,OAAO,CAACC,GAAR,CAAYJ,YAAZ;EACAG,OAAO,CAACC,GAAR,CAAYP,UAAZ;EACA,oBACE;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GApFQF,W;;KAAAA,W;AAsFTA,WAAW,CAACJ,SAAZ,GAAwB;EACtBK,MAAM,EAAEL,SAAS,CAACc;AADI,CAAxB;AAIAV,WAAW,CAACW,YAAZ,GAA2B;EACzBV,MAAM,EAAE;AADiB,CAA3B;AAIA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}