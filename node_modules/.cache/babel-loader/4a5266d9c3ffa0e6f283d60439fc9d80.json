{"ast":null,"code":"/**\n * @fileoverview Define the cursor which iterates tokens only in reverse.\n * @author Toru Nagashima\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nconst Cursor = require(\"./cursor\");\n\nconst utils = require(\"./utils\"); //------------------------------------------------------------------------------\n// Exports\n//------------------------------------------------------------------------------\n\n/**\n * The cursor which iterates tokens only in reverse.\n */\n\n\nmodule.exports = class BackwardTokenCursor extends Cursor {\n  /**\n   * Initializes this cursor.\n   * @param {Token[]} tokens The array of tokens.\n   * @param {Comment[]} comments The array of comments.\n   * @param {Object} indexMap The map from locations to indices in `tokens`.\n   * @param {number} startLoc The start location of the iteration range.\n   * @param {number} endLoc The end location of the iteration range.\n   */\n  constructor(tokens, comments, indexMap, startLoc, endLoc) {\n    super();\n    this.tokens = tokens;\n    this.index = utils.getLastIndex(tokens, indexMap, endLoc);\n    this.indexEnd = utils.getFirstIndex(tokens, indexMap, startLoc);\n  }\n  /** @inheritdoc */\n\n\n  moveNext() {\n    if (this.index >= this.indexEnd) {\n      this.current = this.tokens[this.index];\n      this.index -= 1;\n      return true;\n    }\n\n    return false;\n  }\n  /*\n   *\n   * Shorthand for performance.\n   *\n   */\n\n  /** @inheritdoc */\n\n\n  getOneToken() {\n    return this.index >= this.indexEnd ? this.tokens[this.index] : null;\n  }\n\n};","map":{"version":3,"names":["Cursor","require","utils","module","exports","BackwardTokenCursor","constructor","tokens","comments","indexMap","startLoc","endLoc","index","getLastIndex","indexEnd","getFirstIndex","moveNext","current","getOneToken"],"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/node_modules/eslint/lib/source-code/token-store/backward-token-cursor.js"],"sourcesContent":["/**\n * @fileoverview Define the cursor which iterates tokens only in reverse.\n * @author Toru Nagashima\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nconst Cursor = require(\"./cursor\");\nconst utils = require(\"./utils\");\n\n//------------------------------------------------------------------------------\n// Exports\n//------------------------------------------------------------------------------\n\n/**\n * The cursor which iterates tokens only in reverse.\n */\nmodule.exports = class BackwardTokenCursor extends Cursor {\n\n    /**\n     * Initializes this cursor.\n     * @param {Token[]} tokens The array of tokens.\n     * @param {Comment[]} comments The array of comments.\n     * @param {Object} indexMap The map from locations to indices in `tokens`.\n     * @param {number} startLoc The start location of the iteration range.\n     * @param {number} endLoc The end location of the iteration range.\n     */\n    constructor(tokens, comments, indexMap, startLoc, endLoc) {\n        super();\n        this.tokens = tokens;\n        this.index = utils.getLastIndex(tokens, indexMap, endLoc);\n        this.indexEnd = utils.getFirstIndex(tokens, indexMap, startLoc);\n    }\n\n    /** @inheritdoc */\n    moveNext() {\n        if (this.index >= this.indexEnd) {\n            this.current = this.tokens[this.index];\n            this.index -= 1;\n            return true;\n        }\n        return false;\n    }\n\n    /*\n     *\n     * Shorthand for performance.\n     *\n     */\n\n    /** @inheritdoc */\n    getOneToken() {\n        return (this.index >= this.indexEnd) ? this.tokens[this.index] : null;\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,a,CAEA;AACA;AACA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAArB,C,CAEA;AACA;AACA;;AAEA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,GAAiB,MAAMC,mBAAN,SAAkCL,MAAlC,CAAyC;EAEtD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIM,WAAW,CAACC,MAAD,EAASC,QAAT,EAAmBC,QAAnB,EAA6BC,QAA7B,EAAuCC,MAAvC,EAA+C;IACtD;IACA,KAAKJ,MAAL,GAAcA,MAAd;IACA,KAAKK,KAAL,GAAaV,KAAK,CAACW,YAAN,CAAmBN,MAAnB,EAA2BE,QAA3B,EAAqCE,MAArC,CAAb;IACA,KAAKG,QAAL,GAAgBZ,KAAK,CAACa,aAAN,CAAoBR,MAApB,EAA4BE,QAA5B,EAAsCC,QAAtC,CAAhB;EACH;EAED;;;EACAM,QAAQ,GAAG;IACP,IAAI,KAAKJ,KAAL,IAAc,KAAKE,QAAvB,EAAiC;MAC7B,KAAKG,OAAL,GAAe,KAAKV,MAAL,CAAY,KAAKK,KAAjB,CAAf;MACA,KAAKA,KAAL,IAAc,CAAd;MACA,OAAO,IAAP;IACH;;IACD,OAAO,KAAP;EACH;EAED;AACJ;AACA;AACA;AACA;;EAEI;;;EACAM,WAAW,GAAG;IACV,OAAQ,KAAKN,KAAL,IAAc,KAAKE,QAApB,GAAgC,KAAKP,MAAL,CAAY,KAAKK,KAAjB,CAAhC,GAA0D,IAAjE;EACH;;AApCqD,CAA1D"},"metadata":{},"sourceType":"script"}