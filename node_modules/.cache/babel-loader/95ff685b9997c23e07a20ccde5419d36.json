{"ast":null,"code":"'use strict';\n\nconst path = require('path');\n\nconst resolveFrom = require('resolve-from');\n\nconst parentModule = require('parent-module');\n\nmodule.exports = moduleId => {\n  if (typeof moduleId !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  const parentPath = parentModule(__filename);\n  const cwd = parentPath ? path.dirname(parentPath) : __dirname;\n  const filePath = resolveFrom(cwd, moduleId);\n  const oldModule = require.cache[filePath]; // Delete itself from module parent\n\n  if (oldModule && oldModule.parent) {\n    let i = oldModule.parent.children.length;\n\n    while (i--) {\n      if (oldModule.parent.children[i].id === filePath) {\n        oldModule.parent.children.splice(i, 1);\n      }\n    }\n  }\n\n  delete require.cache[filePath]; // Delete module from cache\n\n  const parent = require.cache[parentPath]; // If `filePath` and `parentPath` are the same, cache will already be deleted so we won't get a memory leak in next step\n\n  return parent === undefined ? require(filePath) : parent.require(filePath); // In case cache doesn't have parent, fall back to normal require\n};","map":{"version":3,"names":["path","require","resolveFrom","parentModule","module","exports","moduleId","TypeError","parentPath","__filename","cwd","dirname","__dirname","filePath","oldModule","cache","parent","i","children","length","id","splice","undefined"],"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/node_modules/import-fresh/index.js"],"sourcesContent":["'use strict';\nconst path = require('path');\nconst resolveFrom = require('resolve-from');\nconst parentModule = require('parent-module');\n\nmodule.exports = moduleId => {\n\tif (typeof moduleId !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\tconst parentPath = parentModule(__filename);\n\n\tconst cwd = parentPath ? path.dirname(parentPath) : __dirname;\n\tconst filePath = resolveFrom(cwd, moduleId);\n\n\tconst oldModule = require.cache[filePath];\n\t// Delete itself from module parent\n\tif (oldModule && oldModule.parent) {\n\t\tlet i = oldModule.parent.children.length;\n\n\t\twhile (i--) {\n\t\t\tif (oldModule.parent.children[i].id === filePath) {\n\t\t\t\toldModule.parent.children.splice(i, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tdelete require.cache[filePath]; // Delete module from cache\n\n\tconst parent = require.cache[parentPath]; // If `filePath` and `parentPath` are the same, cache will already be deleted so we won't get a memory leak in next step\n\n\treturn parent === undefined ? require(filePath) : parent.require(filePath); // In case cache doesn't have parent, fall back to normal require\n};\n"],"mappings":"AAAA;;AACA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,cAAD,CAA3B;;AACA,MAAME,YAAY,GAAGF,OAAO,CAAC,eAAD,CAA5B;;AAEAG,MAAM,CAACC,OAAP,GAAiBC,QAAQ,IAAI;EAC5B,IAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;IACjC,MAAM,IAAIC,SAAJ,CAAc,mBAAd,CAAN;EACA;;EAED,MAAMC,UAAU,GAAGL,YAAY,CAACM,UAAD,CAA/B;EAEA,MAAMC,GAAG,GAAGF,UAAU,GAAGR,IAAI,CAACW,OAAL,CAAaH,UAAb,CAAH,GAA8BI,SAApD;EACA,MAAMC,QAAQ,GAAGX,WAAW,CAACQ,GAAD,EAAMJ,QAAN,CAA5B;EAEA,MAAMQ,SAAS,GAAGb,OAAO,CAACc,KAAR,CAAcF,QAAd,CAAlB,CAV4B,CAW5B;;EACA,IAAIC,SAAS,IAAIA,SAAS,CAACE,MAA3B,EAAmC;IAClC,IAAIC,CAAC,GAAGH,SAAS,CAACE,MAAV,CAAiBE,QAAjB,CAA0BC,MAAlC;;IAEA,OAAOF,CAAC,EAAR,EAAY;MACX,IAAIH,SAAS,CAACE,MAAV,CAAiBE,QAAjB,CAA0BD,CAA1B,EAA6BG,EAA7B,KAAoCP,QAAxC,EAAkD;QACjDC,SAAS,CAACE,MAAV,CAAiBE,QAAjB,CAA0BG,MAA1B,CAAiCJ,CAAjC,EAAoC,CAApC;MACA;IACD;EACD;;EAED,OAAOhB,OAAO,CAACc,KAAR,CAAcF,QAAd,CAAP,CAtB4B,CAsBI;;EAEhC,MAAMG,MAAM,GAAGf,OAAO,CAACc,KAAR,CAAcP,UAAd,CAAf,CAxB4B,CAwBc;;EAE1C,OAAOQ,MAAM,KAAKM,SAAX,GAAuBrB,OAAO,CAACY,QAAD,CAA9B,GAA2CG,MAAM,CAACf,OAAP,CAAeY,QAAf,CAAlD,CA1B4B,CA0BgD;AAC5E,CA3BD"},"metadata":{},"sourceType":"script"}