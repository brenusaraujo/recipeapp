{"ast":null,"code":"var _jsxFileName = \"/Users/brenoaraujo/projects-to-github/RecipeApp/src/pages/BeverageInProgress.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesContext from '../context/RecipesContext';\nimport ProgressCard from '../components/ProgressCard';\nimport { requestRecipesById } from '../services/fetchAPIs';\nfunction BeverageInProgress(props) {\n  const {\n    match: {\n      params: {\n        id\n      }\n    }\n  } = props;\n  const {\n    sliceIngredients,\n    sliceMeasures\n  } = useContext(RecipesContext);\n  const [recipeInfo, setRecipeInfo] = useState({});\n  const {\n    strDrinkThumb,\n    strDrink,\n    strAlcoholic,\n    strInstructions,\n    strCategory,\n    strTags\n  } = recipeInfo;\n  const ingredientsList = sliceIngredients(recipeInfo);\n  const measuresList = sliceMeasures(recipeInfo);\n  useEffect(() => {\n    requestRecipesById(id, 'thecocktaildb').then(_ref => {\n      let {\n        drinks\n      } = _ref;\n      return setRecipeInfo(drinks[0]);\n    });\n  }, [id]);\n  return /*#__PURE__*/React.createElement(ProgressCard, {\n    photo: strDrinkThumb,\n    title: strDrink,\n    alcoholic: strAlcoholic,\n    category: strCategory,\n    ingredients: ingredientsList,\n    measures: measuresList,\n    instructions: strInstructions,\n    type: \"cocktails\",\n    id: id,\n    area: \"\",\n    tags: strTags === null ? '' : strTags,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  });\n}\nBeverageInProgress.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default BeverageInProgress;","map":{"version":3,"names":["React","useContext","useEffect","useState","PropTypes","RecipesContext","ProgressCard","requestRecipesById","BeverageInProgress","props","match","params","id","sliceIngredients","sliceMeasures","recipeInfo","setRecipeInfo","strDrinkThumb","strDrink","strAlcoholic","strInstructions","strCategory","strTags","ingredientsList","measuresList","then","drinks","propTypes","shape","string","isRequired"],"sources":["/Users/brenoaraujo/projects-to-github/RecipeApp/src/pages/BeverageInProgress.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesContext from '../context/RecipesContext';\nimport ProgressCard from '../components/ProgressCard';\nimport { requestRecipesById } from '../services/fetchAPIs';\n\nfunction BeverageInProgress(props) {\n  const {\n    match: {\n      params: { id },\n    },\n  } = props;\n\n  const { sliceIngredients, sliceMeasures } = useContext(RecipesContext);\n  const [recipeInfo, setRecipeInfo] = useState({});\n  const {\n    strDrinkThumb,\n    strDrink,\n    strAlcoholic,\n    strInstructions,\n    strCategory,\n    strTags,\n  } = recipeInfo;\n\n  const ingredientsList = sliceIngredients(recipeInfo);\n  const measuresList = sliceMeasures(recipeInfo);\n\n  useEffect(() => {\n    requestRecipesById(id, 'thecocktaildb')\n      .then(({ drinks }) => setRecipeInfo(drinks[0]));\n  }, [id]);\n\n  return (\n    <ProgressCard\n      photo={ strDrinkThumb }\n      title={ strDrink }\n      alcoholic={ strAlcoholic }\n      category={ strCategory }\n      ingredients={ ingredientsList }\n      measures={ measuresList }\n      instructions={ strInstructions }\n      type=\"cocktails\"\n      id={ id }\n      area=\"\"\n      tags={ strTags === null ? '' : strTags }\n    />\n  );\n}\n\nBeverageInProgress.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default BeverageInProgress;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,SAASC,kBAAkB,QAAQ,uBAAuB;AAE1D,SAASC,kBAAkB,CAACC,KAAK,EAAE;EACjC,MAAM;IACJC,KAAK,EAAE;MACLC,MAAM,EAAE;QAAEC;MAAG;IACf;EACF,CAAC,GAAGH,KAAK;EAET,MAAM;IAAEI,gBAAgB;IAAEC;EAAc,CAAC,GAAGb,UAAU,CAACI,cAAc,CAAC;EACtE,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM;IACJc,aAAa;IACbC,QAAQ;IACRC,YAAY;IACZC,eAAe;IACfC,WAAW;IACXC;EACF,CAAC,GAAGP,UAAU;EAEd,MAAMQ,eAAe,GAAGV,gBAAgB,CAACE,UAAU,CAAC;EACpD,MAAMS,YAAY,GAAGV,aAAa,CAACC,UAAU,CAAC;EAE9Cb,SAAS,CAAC,MAAM;IACdK,kBAAkB,CAACK,EAAE,EAAE,eAAe,CAAC,CACpCa,IAAI,CAAC;MAAA,IAAC;QAAEC;MAAO,CAAC;MAAA,OAAKV,aAAa,CAACU,MAAM,CAAC,CAAC,CAAC,CAAC;IAAA,EAAC;EACnD,CAAC,EAAE,CAACd,EAAE,CAAC,CAAC;EAER,oBACE,oBAAC,YAAY;IACX,KAAK,EAAGK,aAAe;IACvB,KAAK,EAAGC,QAAU;IAClB,SAAS,EAAGC,YAAc;IAC1B,QAAQ,EAAGE,WAAa;IACxB,WAAW,EAAGE,eAAiB;IAC/B,QAAQ,EAAGC,YAAc;IACzB,YAAY,EAAGJ,eAAiB;IAChC,IAAI,EAAC,WAAW;IAChB,EAAE,EAAGR,EAAI;IACT,IAAI,EAAC,EAAE;IACP,IAAI,EAAGU,OAAO,KAAK,IAAI,GAAG,EAAE,GAAGA,OAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACxC;AAEN;AAEAd,kBAAkB,CAACmB,SAAS,GAAG;EAC7BjB,KAAK,EAAEN,SAAS,CAACwB,KAAK,CAAC;IACrBjB,MAAM,EAAEP,SAAS,CAACwB,KAAK,CAAC;MACtBhB,EAAE,EAAER,SAAS,CAACyB,MAAM,CAACC;IACvB,CAAC,CAAC,CAACA;EACL,CAAC,CAAC,CAACA;AACL,CAAC;AAED,eAAetB,kBAAkB"},"metadata":{},"sourceType":"module"}