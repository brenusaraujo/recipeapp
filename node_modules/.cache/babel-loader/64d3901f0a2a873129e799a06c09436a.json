{"ast":null,"code":"/**\n * @fileoverview Rule to flag statements with function invocation preceded by\n * \"new\" and not part of assignment\n * @author Ilya Volodin\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"disallow `new` operators outside of assignments or comparisons\",\n      category: \"Best Practices\",\n      recommended: false,\n      url: \"https://eslint.org/docs/rules/no-new\"\n    },\n    schema: [],\n    messages: {\n      noNewStatement: \"Do not use 'new' for side effects.\"\n    }\n  },\n\n  create(context) {\n    return {\n      \"ExpressionStatement > NewExpression\"(node) {\n        context.report({\n          node: node.parent,\n          messageId: \"noNewStatement\"\n        });\n      }\n\n    };\n  }\n\n};","map":{"version":3,"names":["module","exports","meta","type","docs","description","category","recommended","url","schema","messages","noNewStatement","create","context","node","report","parent","messageId"],"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/node_modules/eslint/lib/rules/no-new.js"],"sourcesContent":["/**\n * @fileoverview Rule to flag statements with function invocation preceded by\n * \"new\" and not part of assignment\n * @author Ilya Volodin\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        type: \"suggestion\",\n\n        docs: {\n            description: \"disallow `new` operators outside of assignments or comparisons\",\n            category: \"Best Practices\",\n            recommended: false,\n            url: \"https://eslint.org/docs/rules/no-new\"\n        },\n\n        schema: [],\n\n        messages: {\n            noNewStatement: \"Do not use 'new' for side effects.\"\n        }\n    },\n\n    create(context) {\n\n        return {\n            \"ExpressionStatement > NewExpression\"(node) {\n                context.report({\n                    node: node.parent,\n                    messageId: \"noNewStatement\"\n                });\n            }\n        };\n\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA,a,CAEA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB;EACbC,IAAI,EAAE;IACFC,IAAI,EAAE,YADJ;IAGFC,IAAI,EAAE;MACFC,WAAW,EAAE,gEADX;MAEFC,QAAQ,EAAE,gBAFR;MAGFC,WAAW,EAAE,KAHX;MAIFC,GAAG,EAAE;IAJH,CAHJ;IAUFC,MAAM,EAAE,EAVN;IAYFC,QAAQ,EAAE;MACNC,cAAc,EAAE;IADV;EAZR,CADO;;EAkBbC,MAAM,CAACC,OAAD,EAAU;IAEZ,OAAO;MACH,sCAAsCC,IAAtC,EAA4C;QACxCD,OAAO,CAACE,MAAR,CAAe;UACXD,IAAI,EAAEA,IAAI,CAACE,MADA;UAEXC,SAAS,EAAE;QAFA,CAAf;MAIH;;IANE,CAAP;EASH;;AA7BY,CAAjB"},"metadata":{},"sourceType":"script"}