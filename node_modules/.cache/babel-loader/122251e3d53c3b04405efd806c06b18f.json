{"ast":null,"code":"'use strict';\n\nconst path = require('path');\n\nconst Module = require('module');\n\nconst fs = require('fs');\n\nconst resolveFrom = (fromDir, moduleId, silent) => {\n  if (typeof fromDir !== 'string') {\n    throw new TypeError(`Expected \\`fromDir\\` to be of type \\`string\\`, got \\`${typeof fromDir}\\``);\n  }\n\n  if (typeof moduleId !== 'string') {\n    throw new TypeError(`Expected \\`moduleId\\` to be of type \\`string\\`, got \\`${typeof moduleId}\\``);\n  }\n\n  try {\n    fromDir = fs.realpathSync(fromDir);\n  } catch (err) {\n    if (err.code === 'ENOENT') {\n      fromDir = path.resolve(fromDir);\n    } else if (silent) {\n      return null;\n    } else {\n      throw err;\n    }\n  }\n\n  const fromFile = path.join(fromDir, 'noop.js');\n\n  const resolveFileName = () => Module._resolveFilename(moduleId, {\n    id: fromFile,\n    filename: fromFile,\n    paths: Module._nodeModulePaths(fromDir)\n  });\n\n  if (silent) {\n    try {\n      return resolveFileName();\n    } catch (err) {\n      return null;\n    }\n  }\n\n  return resolveFileName();\n};\n\nmodule.exports = (fromDir, moduleId) => resolveFrom(fromDir, moduleId);\n\nmodule.exports.silent = (fromDir, moduleId) => resolveFrom(fromDir, moduleId, true);","map":{"version":3,"names":["path","require","Module","fs","resolveFrom","fromDir","moduleId","silent","TypeError","realpathSync","err","code","resolve","fromFile","join","resolveFileName","_resolveFilename","id","filename","paths","_nodeModulePaths","module","exports"],"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/node_modules/resolve-from/index.js"],"sourcesContent":["'use strict';\nconst path = require('path');\nconst Module = require('module');\nconst fs = require('fs');\n\nconst resolveFrom = (fromDir, moduleId, silent) => {\n\tif (typeof fromDir !== 'string') {\n\t\tthrow new TypeError(`Expected \\`fromDir\\` to be of type \\`string\\`, got \\`${typeof fromDir}\\``);\n\t}\n\n\tif (typeof moduleId !== 'string') {\n\t\tthrow new TypeError(`Expected \\`moduleId\\` to be of type \\`string\\`, got \\`${typeof moduleId}\\``);\n\t}\n\n\ttry {\n\t\tfromDir = fs.realpathSync(fromDir);\n\t} catch (err) {\n\t\tif (err.code === 'ENOENT') {\n\t\t\tfromDir = path.resolve(fromDir);\n\t\t} else if (silent) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\tconst fromFile = path.join(fromDir, 'noop.js');\n\n\tconst resolveFileName = () => Module._resolveFilename(moduleId, {\n\t\tid: fromFile,\n\t\tfilename: fromFile,\n\t\tpaths: Module._nodeModulePaths(fromDir)\n\t});\n\n\tif (silent) {\n\t\ttry {\n\t\t\treturn resolveFileName();\n\t\t} catch (err) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn resolveFileName();\n};\n\nmodule.exports = (fromDir, moduleId) => resolveFrom(fromDir, moduleId);\nmodule.exports.silent = (fromDir, moduleId) => resolveFrom(fromDir, moduleId, true);\n"],"mappings":"AAAA;;AACA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAME,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAlB;;AAEA,MAAMG,WAAW,GAAG,CAACC,OAAD,EAAUC,QAAV,EAAoBC,MAApB,KAA+B;EAClD,IAAI,OAAOF,OAAP,KAAmB,QAAvB,EAAiC;IAChC,MAAM,IAAIG,SAAJ,CAAe,wDAAuD,OAAOH,OAAQ,IAArF,CAAN;EACA;;EAED,IAAI,OAAOC,QAAP,KAAoB,QAAxB,EAAkC;IACjC,MAAM,IAAIE,SAAJ,CAAe,yDAAwD,OAAOF,QAAS,IAAvF,CAAN;EACA;;EAED,IAAI;IACHD,OAAO,GAAGF,EAAE,CAACM,YAAH,CAAgBJ,OAAhB,CAAV;EACA,CAFD,CAEE,OAAOK,GAAP,EAAY;IACb,IAAIA,GAAG,CAACC,IAAJ,KAAa,QAAjB,EAA2B;MAC1BN,OAAO,GAAGL,IAAI,CAACY,OAAL,CAAaP,OAAb,CAAV;IACA,CAFD,MAEO,IAAIE,MAAJ,EAAY;MAClB,OAAO,IAAP;IACA,CAFM,MAEA;MACN,MAAMG,GAAN;IACA;EACD;;EAED,MAAMG,QAAQ,GAAGb,IAAI,CAACc,IAAL,CAAUT,OAAV,EAAmB,SAAnB,CAAjB;;EAEA,MAAMU,eAAe,GAAG,MAAMb,MAAM,CAACc,gBAAP,CAAwBV,QAAxB,EAAkC;IAC/DW,EAAE,EAAEJ,QAD2D;IAE/DK,QAAQ,EAAEL,QAFqD;IAG/DM,KAAK,EAAEjB,MAAM,CAACkB,gBAAP,CAAwBf,OAAxB;EAHwD,CAAlC,CAA9B;;EAMA,IAAIE,MAAJ,EAAY;IACX,IAAI;MACH,OAAOQ,eAAe,EAAtB;IACA,CAFD,CAEE,OAAOL,GAAP,EAAY;MACb,OAAO,IAAP;IACA;EACD;;EAED,OAAOK,eAAe,EAAtB;AACA,CAtCD;;AAwCAM,MAAM,CAACC,OAAP,GAAiB,CAACjB,OAAD,EAAUC,QAAV,KAAuBF,WAAW,CAACC,OAAD,EAAUC,QAAV,CAAnD;;AACAe,MAAM,CAACC,OAAP,CAAef,MAAf,GAAwB,CAACF,OAAD,EAAUC,QAAV,KAAuBF,WAAW,CAACC,OAAD,EAAUC,QAAV,EAAoB,IAApB,CAA1D"},"metadata":{},"sourceType":"script"}