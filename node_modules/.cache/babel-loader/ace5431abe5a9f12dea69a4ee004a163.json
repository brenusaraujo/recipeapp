{"ast":null,"code":"var _jsxFileName = \"/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/src/components/Recipes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchMeals, fetchMealsCategories, searchFoods } from '../services/foodAPI';\nimport { fetchDrinks, fetchDrinksCategories } from '../services/drinkAPI';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Recipes(_ref) {\n  _s();\n\n  let {\n    type\n  } = _ref;\n  const MAX_RECIPES = 11;\n  const MAX_CATEGORIES = 4;\n  const [firstRecipes, setFirstRecipes] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedFilter, setSelectedFilter] = useState('');\n  const [globalRecipes, setGlobalRecipes] = useState({});\n\n  async function fetchMealsAPI() {\n    const meals = await fetchMeals();\n    setFirstRecipes(meals.filter((meal, index) => index <= MAX_RECIPES));\n    const mealsCategories = await fetchMealsCategories();\n    setCategories(mealsCategories.filter((meal, index) => index <= MAX_CATEGORIES));\n  }\n\n  async function fetchDrinksAPI() {\n    const drinks = await fetchDrinks();\n    setFirstRecipes(drinks.filter((meal, index) => index <= MAX_RECIPES));\n    const drinksCategories = await fetchDrinksCategories();\n    setCategories(drinksCategories.filter((meal, index) => index <= MAX_CATEGORIES));\n  }\n\n  function resetFilters() {\n    if (Object.keys(globalRecipes).length === 0) {\n      fetchMealsAPI(type);\n    } else {\n      const {\n        myRecipes\n      } = globalRecipes;\n      setFirstRecipes(myRecipes.filter((meal, index) => index <= MAXIMUM_CARDS));\n    }\n  }\n\n  useEffect(() => {\n    resetFilters();\n  }, [globalRecipes]);\n\n  function mealsMap(meal, index) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      name: meal.strMeal,\n      thumb: meal.strMealThumb,\n      index: index\n    }, meal.idMeal, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n  function drinksMap(drink, index) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      name: drink.strDrink,\n      thumb: drink.strDrinkThumb,\n      index: index\n    }, drink.idDrink, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n  async function filter(value) {\n    const filteredFoods = await searchFoods(type, value);\n\n    if (type === 'foods') {\n      const {\n        meals\n      } = filteredFoods;\n      setFirstRecipes(meals.filter((meal, index) => index <= MAX_RECIPES));\n    } else {\n      const {\n        drinks\n      } = filteredFoods;\n      setFirstRecipes(drinks.filter((meal, index) => index <= MAX_RECIPES));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"All-category-filter\",\n        onClick: resetFilters,\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": `${category.strCategory}-category-filter`,\n        onClick: () => {\n          filter(category.strCategory);\n        },\n        children: category.strCategory\n      }, category.strCategory, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), type === 'foods' ? firstRecipes.map((meal, index) => mealsMap(meal, index)) : firstRecipes.map((drink, index) => drinksMap(drink, index))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Recipes, \"/I0crIqoW+6NfCdgg5cIxwhUrlE=\");\n\n_c = Recipes;\nRecipes.propTypes = {\n  type: PropTypes.string\n}.isRequired;\nexport default Recipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipes\");","map":{"version":3,"names":["React","useEffect","useState","PropTypes","fetchMeals","fetchMealsCategories","searchFoods","fetchDrinks","fetchDrinksCategories","Card","Recipes","type","MAX_RECIPES","MAX_CATEGORIES","firstRecipes","setFirstRecipes","categories","setCategories","selectedFilter","setSelectedFilter","globalRecipes","setGlobalRecipes","fetchMealsAPI","meals","filter","meal","index","mealsCategories","fetchDrinksAPI","drinks","drinksCategories","resetFilters","Object","keys","length","myRecipes","MAXIMUM_CARDS","mealsMap","strMeal","strMealThumb","idMeal","drinksMap","drink","strDrink","strDrinkThumb","idDrink","value","filteredFoods","map","category","strCategory","propTypes","string","isRequired"],"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/src/components/Recipes.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchMeals, fetchMealsCategories, searchFoods } from '../services/foodAPI';\nimport { fetchDrinks, fetchDrinksCategories } from '../services/drinkAPI';\nimport Card from './Card';\n\nfunction Recipes({ type }) {\n  const MAX_RECIPES = 11;\n  const MAX_CATEGORIES = 4;\n\n  const [firstRecipes, setFirstRecipes] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedFilter, setSelectedFilter] = useState('');\n  const [globalRecipes, setGlobalRecipes] = useState({});\n\n  async function fetchMealsAPI() {\n    const meals = await fetchMeals();\n    setFirstRecipes(meals.filter((meal, index) => index <= MAX_RECIPES));\n    const mealsCategories = await fetchMealsCategories();\n    setCategories(mealsCategories.filter((meal, index) => index <= MAX_CATEGORIES));\n  }\n\n  async function fetchDrinksAPI() {\n    const drinks = await fetchDrinks();\n    setFirstRecipes(drinks.filter((meal, index) => index <= MAX_RECIPES));\n    const drinksCategories = await fetchDrinksCategories();\n    setCategories(drinksCategories.filter((meal, index) => index <= MAX_CATEGORIES));\n  }\n\n  function resetFilters() {\n    if (Object.keys(globalRecipes).length === 0) {\n      fetchMealsAPI(type);\n    } else {\n      const { myRecipes } = globalRecipes;\n      setFirstRecipes(myRecipes.filter((meal, index) => index <= MAXIMUM_CARDS));\n    }\n  }\n\n  useEffect(() => {\n    resetFilters();\n  }, [globalRecipes]);\n\n  function mealsMap(meal, index) {\n    return (\n      <Card\n        key={ meal.idMeal }\n        name={ meal.strMeal }\n        thumb={ meal.strMealThumb }\n        index={ index }\n      />\n    );\n  }\n\n  function drinksMap(drink, index) {\n    return (\n      <Card\n        key={ drink.idDrink }\n        name={ drink.strDrink }\n        thumb={ drink.strDrinkThumb }\n        index={ index }\n      />\n    );\n  }\n\n  async function filter(value) {\n    const filteredFoods = await searchFoods(type, value);\n    if (type === 'foods') {\n      const { meals } = filteredFoods;\n      setFirstRecipes(meals.filter((meal, index) => index <= MAX_RECIPES));\n    } else {\n      const { drinks } = filteredFoods;\n      setFirstRecipes(drinks.filter((meal, index) => index <= MAX_RECIPES));\n    }\n  }\n\n  return (\n    <div>\n      <section>\n        <button\n          type=\"button\"\n          data-testid=\"All-category-filter\"\n          onClick={ resetFilters }\n        >\n          All\n        </button>\n        {categories.map((category) => (\n          <button\n            key={ category.strCategory }\n            type=\"button\"\n            data-testid={ `${category.strCategory}-category-filter` }\n            onClick={ () => { filter(category.strCategory); } }\n          >\n            {category.strCategory}\n          </button>))}\n      </section>\n      {\n        type === 'foods'\n          ? firstRecipes.map((meal, index) => mealsMap(meal, index))\n          : firstRecipes.map((drink, index) => drinksMap(drink, index))\n      }\n    </div>\n  );\n}\n\nRecipes.propTypes = {\n  type: PropTypes.string,\n}.isRequired;\n\nexport default Recipes;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,EAAqBC,oBAArB,EAA2CC,WAA3C,QAA8D,qBAA9D;AACA,SAASC,WAAT,EAAsBC,qBAAtB,QAAmD,sBAAnD;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,OAAT,OAA2B;EAAA;;EAAA,IAAV;IAAEC;EAAF,CAAU;EACzB,MAAMC,WAAW,GAAG,EAApB;EACA,MAAMC,cAAc,GAAG,CAAvB;EAEA,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACgB,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,CAAC,EAAD,CAApD;EACA,MAAM,CAACkB,aAAD,EAAgBC,gBAAhB,IAAoCnB,QAAQ,CAAC,EAAD,CAAlD;;EAEA,eAAeoB,aAAf,GAA+B;IAC7B,MAAMC,KAAK,GAAG,MAAMnB,UAAU,EAA9B;IACAW,eAAe,CAACQ,KAAK,CAACC,MAAN,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiBA,KAAK,IAAId,WAAvC,CAAD,CAAf;IACA,MAAMe,eAAe,GAAG,MAAMtB,oBAAoB,EAAlD;IACAY,aAAa,CAACU,eAAe,CAACH,MAAhB,CAAuB,CAACC,IAAD,EAAOC,KAAP,KAAiBA,KAAK,IAAIb,cAAjD,CAAD,CAAb;EACD;;EAED,eAAee,cAAf,GAAgC;IAC9B,MAAMC,MAAM,GAAG,MAAMtB,WAAW,EAAhC;IACAQ,eAAe,CAACc,MAAM,CAACL,MAAP,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiBA,KAAK,IAAId,WAAxC,CAAD,CAAf;IACA,MAAMkB,gBAAgB,GAAG,MAAMtB,qBAAqB,EAApD;IACAS,aAAa,CAACa,gBAAgB,CAACN,MAAjB,CAAwB,CAACC,IAAD,EAAOC,KAAP,KAAiBA,KAAK,IAAIb,cAAlD,CAAD,CAAb;EACD;;EAED,SAASkB,YAAT,GAAwB;IACtB,IAAIC,MAAM,CAACC,IAAP,CAAYb,aAAZ,EAA2Bc,MAA3B,KAAsC,CAA1C,EAA6C;MAC3CZ,aAAa,CAACX,IAAD,CAAb;IACD,CAFD,MAEO;MACL,MAAM;QAAEwB;MAAF,IAAgBf,aAAtB;MACAL,eAAe,CAACoB,SAAS,CAACX,MAAV,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiBA,KAAK,IAAIU,aAA3C,CAAD,CAAf;IACD;EACF;;EAEDnC,SAAS,CAAC,MAAM;IACd8B,YAAY;EACb,CAFQ,EAEN,CAACX,aAAD,CAFM,CAAT;;EAIA,SAASiB,QAAT,CAAkBZ,IAAlB,EAAwBC,KAAxB,EAA+B;IAC7B,oBACE,QAAC,IAAD;MAEE,IAAI,EAAGD,IAAI,CAACa,OAFd;MAGE,KAAK,EAAGb,IAAI,CAACc,YAHf;MAIE,KAAK,EAAGb;IAJV,GACQD,IAAI,CAACe,MADb;MAAA;MAAA;MAAA;IAAA,QADF;EAQD;;EAED,SAASC,SAAT,CAAmBC,KAAnB,EAA0BhB,KAA1B,EAAiC;IAC/B,oBACE,QAAC,IAAD;MAEE,IAAI,EAAGgB,KAAK,CAACC,QAFf;MAGE,KAAK,EAAGD,KAAK,CAACE,aAHhB;MAIE,KAAK,EAAGlB;IAJV,GACQgB,KAAK,CAACG,OADd;MAAA;MAAA;MAAA;IAAA,QADF;EAQD;;EAED,eAAerB,MAAf,CAAsBsB,KAAtB,EAA6B;IAC3B,MAAMC,aAAa,GAAG,MAAMzC,WAAW,CAACK,IAAD,EAAOmC,KAAP,CAAvC;;IACA,IAAInC,IAAI,KAAK,OAAb,EAAsB;MACpB,MAAM;QAAEY;MAAF,IAAYwB,aAAlB;MACAhC,eAAe,CAACQ,KAAK,CAACC,MAAN,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiBA,KAAK,IAAId,WAAvC,CAAD,CAAf;IACD,CAHD,MAGO;MACL,MAAM;QAAEiB;MAAF,IAAakB,aAAnB;MACAhC,eAAe,CAACc,MAAM,CAACL,MAAP,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiBA,KAAK,IAAId,WAAxC,CAAD,CAAf;IACD;EACF;;EAED,oBACE;IAAA,wBACE;MAAA,wBACE;QACE,IAAI,EAAC,QADP;QAEE,eAAY,qBAFd;QAGE,OAAO,EAAGmB,YAHZ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAQGf,UAAU,CAACgC,GAAX,CAAgBC,QAAD,iBACd;QAEE,IAAI,EAAC,QAFP;QAGE,eAAe,GAAEA,QAAQ,CAACC,WAAY,kBAHxC;QAIE,OAAO,EAAG,MAAM;UAAE1B,MAAM,CAACyB,QAAQ,CAACC,WAAV,CAAN;QAA+B,CAJnD;QAAA,UAMGD,QAAQ,CAACC;MANZ,GACQD,QAAQ,CAACC,WADjB;QAAA;QAAA;QAAA;MAAA,QADD,CARH;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAoBIvC,IAAI,KAAK,OAAT,GACIG,YAAY,CAACkC,GAAb,CAAiB,CAACvB,IAAD,EAAOC,KAAP,KAAiBW,QAAQ,CAACZ,IAAD,EAAOC,KAAP,CAA1C,CADJ,GAEIZ,YAAY,CAACkC,GAAb,CAAiB,CAACN,KAAD,EAAQhB,KAAR,KAAkBe,SAAS,CAACC,KAAD,EAAQhB,KAAR,CAA5C,CAtBR;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA2BD;;GAhGQhB,O;;KAAAA,O;AAkGTA,OAAO,CAACyC,SAAR,GAAoB;EAClBxC,IAAI,EAAER,SAAS,CAACiD;AADE,EAElBC,UAFF;AAIA,eAAe3C,OAAf"},"metadata":{},"sourceType":"module"}