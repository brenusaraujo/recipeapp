{"ast":null,"code":"var _jsxFileName = \"/Users/brenoaraujo/projects-to-github/RecipeApp/src/components/FilterButtons.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport RecipesContext from '../context/RecipesContext';\nimport '../css/FilterButtons.css';\nimport { requestCategories, requestRecipesByCategory } from '../services/fetchAPIs';\nconst MAX_MAP_LENGTH = 5;\nfunction FilterButtons(_ref) {\n  let {\n    url,\n    type\n  } = _ref;\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('All');\n  const {\n    location: {\n      pathname\n    }\n  } = useHistory();\n  const {\n    setFilteredFood,\n    setFilteredBeverage\n  } = useContext(RecipesContext);\n  const filterBeverage = async id => {\n    if (id === selectedCategory) {\n      setSelectedCategory('All');\n      return setFilteredBeverage([]);\n    }\n    const result = await requestRecipesByCategory(id, 'thecocktaildb');\n    setFilteredBeverage(result.drinks);\n    return setSelectedCategory(id);\n  };\n  const filterFood = async id => {\n    if (id === selectedCategory) {\n      setSelectedCategory('All');\n      return setFilteredFood([]);\n    }\n    const result = await requestRecipesByCategory(id, 'themealdb');\n    setFilteredFood(result.meals);\n    return setSelectedCategory(id);\n  };\n  const handleClick = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    if (pathname === '/bebidas') return filterBeverage(target.id);\n    return filterFood(target.id);\n  };\n  const resetFilters = () => {\n    setSelectedCategory('All');\n    if (pathname === '/bebidas') return setFilteredBeverage([]);\n    return setFilteredFood([]);\n  };\n  useEffect(() => {\n    requestCategories(url).then(items => setCategories(items[type]));\n  }, [type, url]);\n  const renderButtons = categories.slice(0, MAX_MAP_LENGTH);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Categories\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: selectedCategory === 'All' ? 'selected' : 'filters__btn',\n    \"data-testid\": \"All-category-filter\",\n    type: \"button\",\n    onClick: resetFilters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"All\"), renderButtons && renderButtons.map(_ref3 => {\n    let {\n      strCategory\n    } = _ref3;\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: selectedCategory === strCategory ? 'selected' : 'filters__btn',\n      key: strCategory,\n      type: \"button\",\n      \"data-testid\": `${strCategory}-category-filter`,\n      id: strCategory,\n      onClick: handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, strCategory);\n  })));\n}\nFilterButtons.propTypes = {\n  type: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired\n};\nexport default FilterButtons;","map":{"version":3,"names":["React","useContext","useEffect","useState","PropTypes","useHistory","RecipesContext","requestCategories","requestRecipesByCategory","MAX_MAP_LENGTH","FilterButtons","url","type","categories","setCategories","selectedCategory","setSelectedCategory","location","pathname","setFilteredFood","setFilteredBeverage","filterBeverage","id","result","drinks","filterFood","meals","handleClick","target","resetFilters","then","items","renderButtons","slice","map","strCategory","propTypes","string","isRequired"],"sources":["/Users/brenoaraujo/projects-to-github/RecipeApp/src/components/FilterButtons.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport RecipesContext from '../context/RecipesContext';\nimport '../css/FilterButtons.css';\nimport { requestCategories, requestRecipesByCategory } from '../services/fetchAPIs';\n\nconst MAX_MAP_LENGTH = 5;\n\nfunction FilterButtons({ url, type }) {\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('All');\n  const {\n    location: { pathname },\n  } = useHistory();\n  const { setFilteredFood, setFilteredBeverage } = useContext(RecipesContext);\n\n  const filterBeverage = async (id) => {\n    if (id === selectedCategory) {\n      setSelectedCategory('All');\n      return setFilteredBeverage([]);\n    }\n    const result = await requestRecipesByCategory(id, 'thecocktaildb');\n    setFilteredBeverage(result.drinks);\n    return setSelectedCategory(id);\n  };\n\n  const filterFood = async (id) => {\n    if (id === selectedCategory) {\n      setSelectedCategory('All');\n      return setFilteredFood([]);\n    }\n    const result = await requestRecipesByCategory(id, 'themealdb');\n    setFilteredFood(result.meals);\n    return setSelectedCategory(id);\n  };\n\n  const handleClick = ({ target }) => {\n    if (pathname === '/bebidas') return filterBeverage(target.id);\n    return filterFood(target.id);\n  };\n\n  const resetFilters = () => {\n    setSelectedCategory('All');\n    if (pathname === '/bebidas') return setFilteredBeverage([]);\n    return setFilteredFood([]);\n  };\n\n  useEffect(() => {\n    requestCategories(url).then((items) => setCategories(items[type]));\n  }, [type, url]);\n\n  const renderButtons = categories.slice(0, MAX_MAP_LENGTH);\n\n  return (\n    <>\n      <p className=\"description\">Categories</p>\n      <div className=\"filters\">\n        <button\n          className={ selectedCategory === 'All' ? 'selected' : 'filters__btn' }\n          data-testid=\"All-category-filter\"\n          type=\"button\"\n          onClick={ resetFilters }\n        >\n          All\n        </button>\n        {renderButtons\n        && renderButtons.map(({ strCategory }) => (\n          <button\n            className={ selectedCategory === strCategory ? 'selected' : 'filters__btn' }\n            key={ strCategory }\n            type=\"button\"\n            data-testid={ `${strCategory}-category-filter` }\n            id={ strCategory }\n            onClick={ handleClick }\n          >\n            {strCategory}\n          </button>\n        ))}\n      </div>\n    </>\n  );\n}\n\nFilterButtons.propTypes = {\n  type: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n};\n\nexport default FilterButtons;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}