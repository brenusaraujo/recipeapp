{"ast":null,"code":"/**\n * @fileoverview Common helpers for naming of plugins, formatters and configs\n */\n\"use strict\";\n\nconst NAMESPACE_REGEX = /^@.*\\//iu;\n/**\n * Brings package name to correct format based on prefix\n * @param {string} name The name of the package.\n * @param {string} prefix Can be either \"eslint-plugin\", \"eslint-config\" or \"eslint-formatter\"\n * @returns {string} Normalized name of the package\n * @private\n */\n\nfunction normalizePackageName(name, prefix) {\n  let normalizedName = name;\n  /**\n   * On Windows, name can come in with Windows slashes instead of Unix slashes.\n   * Normalize to Unix first to avoid errors later on.\n   * https://github.com/eslint/eslint/issues/5644\n   */\n\n  if (normalizedName.includes(\"\\\\\")) {\n    normalizedName = normalizedName.replace(/\\\\/gu, \"/\");\n  }\n\n  if (normalizedName.charAt(0) === \"@\") {\n    /**\n     * it's a scoped package\n     * package name is the prefix, or just a username\n     */\n    const scopedPackageShortcutRegex = new RegExp(`^(@[^/]+)(?:/(?:${prefix})?)?$`, \"u\"),\n          scopedPackageNameRegex = new RegExp(`^${prefix}(-|$)`, \"u\");\n\n    if (scopedPackageShortcutRegex.test(normalizedName)) {\n      normalizedName = normalizedName.replace(scopedPackageShortcutRegex, `$1/${prefix}`);\n    } else if (!scopedPackageNameRegex.test(normalizedName.split(\"/\")[1])) {\n      /**\n       * for scoped packages, insert the prefix after the first / unless\n       * the path is already @scope/eslint or @scope/eslint-xxx-yyy\n       */\n      normalizedName = normalizedName.replace(/^@([^/]+)\\/(.*)$/u, `@$1/${prefix}-$2`);\n    }\n  } else if (!normalizedName.startsWith(`${prefix}-`)) {\n    normalizedName = `${prefix}-${normalizedName}`;\n  }\n\n  return normalizedName;\n}\n/**\n * Removes the prefix from a fullname.\n * @param {string} fullname The term which may have the prefix.\n * @param {string} prefix The prefix to remove.\n * @returns {string} The term without prefix.\n */\n\n\nfunction getShorthandName(fullname, prefix) {\n  if (fullname[0] === \"@\") {\n    let matchResult = new RegExp(`^(@[^/]+)/${prefix}$`, \"u\").exec(fullname);\n\n    if (matchResult) {\n      return matchResult[1];\n    }\n\n    matchResult = new RegExp(`^(@[^/]+)/${prefix}-(.+)$`, \"u\").exec(fullname);\n\n    if (matchResult) {\n      return `${matchResult[1]}/${matchResult[2]}`;\n    }\n  } else if (fullname.startsWith(`${prefix}-`)) {\n    return fullname.slice(prefix.length + 1);\n  }\n\n  return fullname;\n}\n/**\n * Gets the scope (namespace) of a term.\n * @param {string} term The term which may have the namespace.\n * @returns {string} The namespace of the term if it has one.\n */\n\n\nfunction getNamespaceFromTerm(term) {\n  const match = term.match(NAMESPACE_REGEX);\n  return match ? match[0] : \"\";\n} //------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\n\nmodule.exports = {\n  normalizePackageName,\n  getShorthandName,\n  getNamespaceFromTerm\n};","map":{"version":3,"names":["NAMESPACE_REGEX","normalizePackageName","name","prefix","normalizedName","includes","replace","charAt","scopedPackageShortcutRegex","RegExp","scopedPackageNameRegex","test","split","startsWith","getShorthandName","fullname","matchResult","exec","slice","length","getNamespaceFromTerm","term","match","module","exports"],"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/node_modules/@eslint/eslintrc/lib/shared/naming.js"],"sourcesContent":["/**\n * @fileoverview Common helpers for naming of plugins, formatters and configs\n */\n\"use strict\";\n\nconst NAMESPACE_REGEX = /^@.*\\//iu;\n\n/**\n * Brings package name to correct format based on prefix\n * @param {string} name The name of the package.\n * @param {string} prefix Can be either \"eslint-plugin\", \"eslint-config\" or \"eslint-formatter\"\n * @returns {string} Normalized name of the package\n * @private\n */\nfunction normalizePackageName(name, prefix) {\n    let normalizedName = name;\n\n    /**\n     * On Windows, name can come in with Windows slashes instead of Unix slashes.\n     * Normalize to Unix first to avoid errors later on.\n     * https://github.com/eslint/eslint/issues/5644\n     */\n    if (normalizedName.includes(\"\\\\\")) {\n        normalizedName = normalizedName.replace(/\\\\/gu, \"/\");\n    }\n\n    if (normalizedName.charAt(0) === \"@\") {\n\n        /**\n         * it's a scoped package\n         * package name is the prefix, or just a username\n         */\n        const scopedPackageShortcutRegex = new RegExp(`^(@[^/]+)(?:/(?:${prefix})?)?$`, \"u\"),\n            scopedPackageNameRegex = new RegExp(`^${prefix}(-|$)`, \"u\");\n\n        if (scopedPackageShortcutRegex.test(normalizedName)) {\n            normalizedName = normalizedName.replace(scopedPackageShortcutRegex, `$1/${prefix}`);\n        } else if (!scopedPackageNameRegex.test(normalizedName.split(\"/\")[1])) {\n\n            /**\n             * for scoped packages, insert the prefix after the first / unless\n             * the path is already @scope/eslint or @scope/eslint-xxx-yyy\n             */\n            normalizedName = normalizedName.replace(/^@([^/]+)\\/(.*)$/u, `@$1/${prefix}-$2`);\n        }\n    } else if (!normalizedName.startsWith(`${prefix}-`)) {\n        normalizedName = `${prefix}-${normalizedName}`;\n    }\n\n    return normalizedName;\n}\n\n/**\n * Removes the prefix from a fullname.\n * @param {string} fullname The term which may have the prefix.\n * @param {string} prefix The prefix to remove.\n * @returns {string} The term without prefix.\n */\nfunction getShorthandName(fullname, prefix) {\n    if (fullname[0] === \"@\") {\n        let matchResult = new RegExp(`^(@[^/]+)/${prefix}$`, \"u\").exec(fullname);\n\n        if (matchResult) {\n            return matchResult[1];\n        }\n\n        matchResult = new RegExp(`^(@[^/]+)/${prefix}-(.+)$`, \"u\").exec(fullname);\n        if (matchResult) {\n            return `${matchResult[1]}/${matchResult[2]}`;\n        }\n    } else if (fullname.startsWith(`${prefix}-`)) {\n        return fullname.slice(prefix.length + 1);\n    }\n\n    return fullname;\n}\n\n/**\n * Gets the scope (namespace) of a term.\n * @param {string} term The term which may have the namespace.\n * @returns {string} The namespace of the term if it has one.\n */\nfunction getNamespaceFromTerm(term) {\n    const match = term.match(NAMESPACE_REGEX);\n\n    return match ? match[0] : \"\";\n}\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    normalizePackageName,\n    getShorthandName,\n    getNamespaceFromTerm\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,MAAMA,eAAe,GAAG,UAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,oBAAT,CAA8BC,IAA9B,EAAoCC,MAApC,EAA4C;EACxC,IAAIC,cAAc,GAAGF,IAArB;EAEA;AACJ;AACA;AACA;AACA;;EACI,IAAIE,cAAc,CAACC,QAAf,CAAwB,IAAxB,CAAJ,EAAmC;IAC/BD,cAAc,GAAGA,cAAc,CAACE,OAAf,CAAuB,MAAvB,EAA+B,GAA/B,CAAjB;EACH;;EAED,IAAIF,cAAc,CAACG,MAAf,CAAsB,CAAtB,MAA6B,GAAjC,EAAsC;IAElC;AACR;AACA;AACA;IACQ,MAAMC,0BAA0B,GAAG,IAAIC,MAAJ,CAAY,mBAAkBN,MAAO,OAArC,EAA6C,GAA7C,CAAnC;IAAA,MACIO,sBAAsB,GAAG,IAAID,MAAJ,CAAY,IAAGN,MAAO,OAAtB,EAA8B,GAA9B,CAD7B;;IAGA,IAAIK,0BAA0B,CAACG,IAA3B,CAAgCP,cAAhC,CAAJ,EAAqD;MACjDA,cAAc,GAAGA,cAAc,CAACE,OAAf,CAAuBE,0BAAvB,EAAoD,MAAKL,MAAO,EAAhE,CAAjB;IACH,CAFD,MAEO,IAAI,CAACO,sBAAsB,CAACC,IAAvB,CAA4BP,cAAc,CAACQ,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAA5B,CAAL,EAAgE;MAEnE;AACZ;AACA;AACA;MACYR,cAAc,GAAGA,cAAc,CAACE,OAAf,CAAuB,mBAAvB,EAA6C,OAAMH,MAAO,KAA1D,CAAjB;IACH;EACJ,CAnBD,MAmBO,IAAI,CAACC,cAAc,CAACS,UAAf,CAA2B,GAAEV,MAAO,GAApC,CAAL,EAA8C;IACjDC,cAAc,GAAI,GAAED,MAAO,IAAGC,cAAe,EAA7C;EACH;;EAED,OAAOA,cAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASU,gBAAT,CAA0BC,QAA1B,EAAoCZ,MAApC,EAA4C;EACxC,IAAIY,QAAQ,CAAC,CAAD,CAAR,KAAgB,GAApB,EAAyB;IACrB,IAAIC,WAAW,GAAG,IAAIP,MAAJ,CAAY,aAAYN,MAAO,GAA/B,EAAmC,GAAnC,EAAwCc,IAAxC,CAA6CF,QAA7C,CAAlB;;IAEA,IAAIC,WAAJ,EAAiB;MACb,OAAOA,WAAW,CAAC,CAAD,CAAlB;IACH;;IAEDA,WAAW,GAAG,IAAIP,MAAJ,CAAY,aAAYN,MAAO,QAA/B,EAAwC,GAAxC,EAA6Cc,IAA7C,CAAkDF,QAAlD,CAAd;;IACA,IAAIC,WAAJ,EAAiB;MACb,OAAQ,GAAEA,WAAW,CAAC,CAAD,CAAI,IAAGA,WAAW,CAAC,CAAD,CAAI,EAA3C;IACH;EACJ,CAXD,MAWO,IAAID,QAAQ,CAACF,UAAT,CAAqB,GAAEV,MAAO,GAA9B,CAAJ,EAAuC;IAC1C,OAAOY,QAAQ,CAACG,KAAT,CAAef,MAAM,CAACgB,MAAP,GAAgB,CAA/B,CAAP;EACH;;EAED,OAAOJ,QAAP;AACH;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASK,oBAAT,CAA8BC,IAA9B,EAAoC;EAChC,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAL,CAAWtB,eAAX,CAAd;EAEA,OAAOsB,KAAK,GAAGA,KAAK,CAAC,CAAD,CAAR,GAAc,EAA1B;AACH,C,CAED;AACA;AACA;;;AAEAC,MAAM,CAACC,OAAP,GAAiB;EACbvB,oBADa;EAEba,gBAFa;EAGbM;AAHa,CAAjB"},"metadata":{},"sourceType":"script"}