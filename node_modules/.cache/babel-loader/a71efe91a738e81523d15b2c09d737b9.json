{"ast":null,"code":"'use strict';\n\nvar Type = require('../type');\n\nvar YAML_DATE_REGEXP = new RegExp('^([0-9][0-9][0-9][0-9])' + // [1] year\n'-([0-9][0-9])' + // [2] month\n'-([0-9][0-9])$'); // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp('^([0-9][0-9][0-9][0-9])' + // [1] year\n'-([0-9][0-9]?)' + // [2] month\n'-([0-9][0-9]?)' + // [3] day\n'(?:[Tt]|[ \\\\t]+)' + // ...\n'([0-9][0-9]?)' + // [4] hour\n':([0-9][0-9])' + // [5] minute\n':([0-9][0-9])' + // [6] second\n'(?:\\\\.([0-9]*))?' + // [7] fraction\n'(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n'(?::([0-9][0-9]))?))?$'); // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match,\n      year,\n      month,\n      day,\n      hour,\n      minute,\n      second,\n      fraction = 0,\n      delta = null,\n      tz_hour,\n      tz_minute,\n      date;\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n  if (match === null) throw new Error('Date resolve error'); // match: [1] year [2] month [3] day\n\n  year = +match[1];\n  month = +match[2] - 1; // JS month starts with 0\n\n  day = +match[3];\n\n  if (!match[4]) {\n    // no hour\n    return new Date(Date.UTC(year, month, day));\n  } // match: [4] hour [5] minute [6] second [7] fraction\n\n\n  hour = +match[4];\n  minute = +match[5];\n  second = +match[6];\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n\n    while (fraction.length < 3) {\n      // milli-seconds\n      fraction += '0';\n    }\n\n    fraction = +fraction;\n  } // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n\n  if (match[9]) {\n    tz_hour = +match[10];\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n  if (delta) date.setTime(date.getTime() - delta);\n  return date;\n}\n\nfunction representYamlTimestamp(object\n/*, style*/\n) {\n  return object.toISOString();\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});","map":{"version":3,"names":["Type","require","YAML_DATE_REGEXP","RegExp","YAML_TIMESTAMP_REGEXP","resolveYamlTimestamp","data","exec","constructYamlTimestamp","match","year","month","day","hour","minute","second","fraction","delta","tz_hour","tz_minute","date","Error","Date","UTC","slice","length","setTime","getTime","representYamlTimestamp","object","toISOString","module","exports","kind","resolve","construct","instanceOf","represent"],"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/node_modules/js-yaml/lib/js-yaml/type/timestamp.js"],"sourcesContent":["'use strict';\n\nvar Type = require('../type');\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}