{"ast":null,"code":"/**\n * @fileoverview Rule to flag usage of __iterator__ property\n * @author Ian Christian Myers\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nconst {\n  getStaticPropertyName\n} = require(\"./utils/ast-utils\"); //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n\nmodule.exports = {\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"disallow the use of the `__iterator__` property\",\n      category: \"Best Practices\",\n      recommended: false,\n      url: \"https://eslint.org/docs/rules/no-iterator\"\n    },\n    schema: [],\n    messages: {\n      noIterator: \"Reserved name '__iterator__'.\"\n    }\n  },\n\n  create(context) {\n    return {\n      MemberExpression(node) {\n        if (getStaticPropertyName(node) === \"__iterator__\") {\n          context.report({\n            node,\n            messageId: \"noIterator\"\n          });\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"names":["getStaticPropertyName","require","module","exports","meta","type","docs","description","category","recommended","url","schema","messages","noIterator","create","context","MemberExpression","node","report","messageId"],"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/node_modules/eslint/lib/rules/no-iterator.js"],"sourcesContent":["/**\n * @fileoverview Rule to flag usage of __iterator__ property\n * @author Ian Christian Myers\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nconst { getStaticPropertyName } = require(\"./utils/ast-utils\");\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        type: \"suggestion\",\n\n        docs: {\n            description: \"disallow the use of the `__iterator__` property\",\n            category: \"Best Practices\",\n            recommended: false,\n            url: \"https://eslint.org/docs/rules/no-iterator\"\n        },\n\n        schema: [],\n\n        messages: {\n            noIterator: \"Reserved name '__iterator__'.\"\n        }\n    },\n\n    create(context) {\n\n        return {\n\n            MemberExpression(node) {\n\n                if (getStaticPropertyName(node) === \"__iterator__\") {\n                    context.report({\n                        node,\n                        messageId: \"noIterator\"\n                    });\n                }\n            }\n        };\n\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,a,CAEA;AACA;AACA;;AAEA,MAAM;EAAEA;AAAF,IAA4BC,OAAO,CAAC,mBAAD,CAAzC,C,CAEA;AACA;AACA;;;AAEAC,MAAM,CAACC,OAAP,GAAiB;EACbC,IAAI,EAAE;IACFC,IAAI,EAAE,YADJ;IAGFC,IAAI,EAAE;MACFC,WAAW,EAAE,iDADX;MAEFC,QAAQ,EAAE,gBAFR;MAGFC,WAAW,EAAE,KAHX;MAIFC,GAAG,EAAE;IAJH,CAHJ;IAUFC,MAAM,EAAE,EAVN;IAYFC,QAAQ,EAAE;MACNC,UAAU,EAAE;IADN;EAZR,CADO;;EAkBbC,MAAM,CAACC,OAAD,EAAU;IAEZ,OAAO;MAEHC,gBAAgB,CAACC,IAAD,EAAO;QAEnB,IAAIjB,qBAAqB,CAACiB,IAAD,CAArB,KAAgC,cAApC,EAAoD;UAChDF,OAAO,CAACG,MAAR,CAAe;YACXD,IADW;YAEXE,SAAS,EAAE;UAFA,CAAf;QAIH;MACJ;;IAVE,CAAP;EAaH;;AAjCY,CAAjB"},"metadata":{},"sourceType":"script"}