{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PagingDots = exports.getDotIndexes = exports.NextButton = exports.nextButtonDisabled = exports.PreviousButton = exports.prevButtonDisabled = void 0;\n\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\n/* eslint-disable complexity */\n\n\nconst react_1 = require(\"react\");\n\nconst types_1 = require(\"./types\");\n\nconst defaultButtonStyles = disabled => ({\n  border: 0,\n  background: 'rgba(0,0,0,0.4)',\n  color: 'white',\n  padding: 10,\n  textTransform: 'uppercase',\n  opacity: disabled ? 0.3 : 1,\n  cursor: disabled ? 'not-allowed' : 'pointer'\n});\n\nconst prevButtonDisabled = _ref => {\n  let {\n    currentSlide,\n    wrapAround,\n    cellAlign,\n    slidesToShow\n  } = _ref;\n\n  // inifite carousel\n  if (wrapAround) {\n    return false;\n  } // disable if displaying the leftmost slide\n\n\n  if (currentSlide === 0) {\n    return true;\n  } // remainder scroll mode\n\n\n  if (cellAlign === types_1.Alignment.Right && currentSlide <= slidesToShow - 1) {\n    return true;\n  }\n\n  return false;\n};\n\nexports.prevButtonDisabled = prevButtonDisabled;\n\nconst PreviousButton = props => {\n  const handleClick = event => {\n    event.preventDefault();\n    props === null || props === void 0 ? void 0 : props.previousSlide();\n  };\n\n  const {\n    prevButtonClassName,\n    prevButtonStyle = {},\n    prevButtonText\n  } = props.defaultControlsConfig || {};\n  const disabled = (0, exports.prevButtonDisabled)(props);\n  return (0, jsx_runtime_1.jsx)(\"button\", Object.assign({\n    className: prevButtonClassName,\n    style: Object.assign(Object.assign({}, defaultButtonStyles(disabled)), prevButtonStyle),\n    disabled: disabled,\n    onClick: handleClick,\n    \"aria-label\": \"previous\",\n    type: \"button\"\n  }, {\n    children: prevButtonText || 'Prev'\n  }));\n};\n\nexports.PreviousButton = PreviousButton;\n\nconst nextButtonDisabled = _ref2 => {\n  let {\n    currentSlide,\n    slideCount,\n    slidesToShow,\n    wrapAround,\n    cellAlign\n  } = _ref2;\n\n  // inifite carousel\n  if (wrapAround) {\n    return false;\n  } // If we are at the last possible slide without wrap, disable\n\n\n  if (currentSlide >= slideCount - 1) {\n    return true;\n  } // remainder scroll mode\n\n\n  if (cellAlign === types_1.Alignment.Left && currentSlide >= slideCount - slidesToShow) {\n    return true;\n  }\n\n  return false;\n};\n\nexports.nextButtonDisabled = nextButtonDisabled;\n\nconst NextButton = props => {\n  const handleClick = event => {\n    event.preventDefault();\n    props.nextSlide();\n  };\n\n  const {\n    defaultControlsConfig\n  } = props;\n  const {\n    nextButtonClassName,\n    nextButtonStyle = {},\n    nextButtonText\n  } = defaultControlsConfig;\n  const disabled = (0, exports.nextButtonDisabled)(props);\n  return (0, jsx_runtime_1.jsx)(\"button\", Object.assign({\n    className: nextButtonClassName,\n    style: Object.assign(Object.assign({}, defaultButtonStyles(disabled)), nextButtonStyle),\n    disabled: disabled,\n    onClick: handleClick,\n    \"aria-label\": \"next\",\n    type: \"button\"\n  }, {\n    children: nextButtonText || 'Next'\n  }));\n};\n\nexports.NextButton = NextButton;\n/**\n * Calculate the indices that each dot will jump to when clicked\n */\n\nconst getDotIndexes = (slideCount, slidesToScroll, scrollMode, slidesToShow, wrapAround, cellAlign) => {\n  const dotIndexes = [];\n  const scrollSlides = slidesToScroll <= 0 ? 1 : slidesToScroll;\n\n  if (wrapAround) {\n    for (let i = 0; i < slideCount; i += scrollSlides) {\n      dotIndexes.push(i);\n    }\n\n    return dotIndexes;\n  }\n\n  if (cellAlign === types_1.Alignment.Center) {\n    for (let i = 0; i < slideCount - 1; i += scrollSlides) {\n      dotIndexes.push(i);\n    }\n\n    if (slideCount > 0) {\n      dotIndexes.push(slideCount - 1);\n    }\n\n    return dotIndexes;\n  }\n\n  if (cellAlign === types_1.Alignment.Left) {\n    if (slidesToShow >= slideCount) {\n      return [0];\n    }\n\n    const lastPossibleIndexWithoutWhitespace = slideCount - slidesToShow;\n\n    for (let i = 0; i < lastPossibleIndexWithoutWhitespace; i += scrollSlides) {\n      dotIndexes.push(i);\n    }\n\n    if (scrollMode === types_1.ScrollMode.remainder) {\n      dotIndexes.push(lastPossibleIndexWithoutWhitespace);\n    } else {\n      dotIndexes.push(dotIndexes[dotIndexes.length - 1] + scrollSlides);\n    }\n\n    return dotIndexes;\n  }\n\n  if (cellAlign === types_1.Alignment.Right) {\n    if (slidesToShow >= slideCount) {\n      return [slideCount - 1];\n    }\n\n    const firstPossibleIndexWithoutWhitespace = slidesToShow - 1;\n\n    if (scrollMode === types_1.ScrollMode.remainder) {\n      for (let i = firstPossibleIndexWithoutWhitespace; i < slideCount - 1; i += scrollSlides) {\n        dotIndexes.push(i);\n      }\n\n      dotIndexes.push(slideCount - 1);\n    } else {\n      for (let i = slideCount - 1; i > firstPossibleIndexWithoutWhitespace; i -= scrollSlides) {\n        dotIndexes.push(i);\n      }\n\n      dotIndexes.push(dotIndexes[dotIndexes.length - 1] - scrollSlides);\n      dotIndexes.reverse();\n    }\n\n    return dotIndexes;\n  } // We should never reach this, because the if statements above cover all\n  // possible values of cellAlign\n\n\n  return dotIndexes;\n};\n\nexports.getDotIndexes = getDotIndexes;\n\nconst PagingDots = props => {\n  const listStyles = {\n    position: 'relative',\n    top: -10,\n    display: 'flex',\n    margin: 0,\n    padding: 0,\n    listStyleType: 'none'\n  };\n  const getButtonStyles = (0, react_1.useCallback)(active => ({\n    cursor: 'pointer',\n    opacity: active ? 1 : 0.5,\n    background: 'transparent',\n    border: 'none',\n    fill: 'black'\n  }), []);\n  const indexes = (0, exports.getDotIndexes)(props.slideCount, props.slidesToScroll, props.scrollMode, props.slidesToShow, props.wrapAround, props.cellAlign);\n  const {\n    pagingDotsContainerClassName,\n    pagingDotsClassName,\n    pagingDotsStyle = {}\n  } = props.defaultControlsConfig;\n  return (0, jsx_runtime_1.jsx)(\"ul\", Object.assign({\n    className: pagingDotsContainerClassName,\n    style: listStyles\n  }, {\n    children: indexes.map((index, i) => {\n      let isActive = props.currentSlide === index || props.currentSlide - props.slideCount === index || props.currentSlide + props.slideCount === index; // the below condition checks and sets navigation dots active if the current slide falls in the current index range\n\n      if (props.currentSlide < index && props.currentSlide > indexes[i - 1]) {\n        isActive = true;\n      }\n\n      return (0, jsx_runtime_1.jsx)(\"li\", Object.assign({\n        className: isActive ? 'paging-item active' : 'paging-item'\n      }, {\n        children: (0, jsx_runtime_1.jsx)(\"button\", Object.assign({\n          className: pagingDotsClassName,\n          type: \"button\",\n          style: Object.assign(Object.assign({}, getButtonStyles(isActive)), pagingDotsStyle),\n          onClick: props.goToSlide.bind(null, index),\n          \"aria-label\": `slide ${index + 1} bullet`,\n          \"aria-selected\": isActive\n        }, {\n          children: (0, jsx_runtime_1.jsx)(\"svg\", Object.assign({\n            className: \"paging-dot\",\n            width: \"6\",\n            height: \"6\",\n            \"aria-hidden\": \"true\",\n            focusable: \"false\"\n          }, {\n            children: (0, jsx_runtime_1.jsx)(\"circle\", {\n              cx: \"3\",\n              cy: \"3\",\n              r: \"3\"\n            })\n          }))\n        }))\n      }), index);\n    })\n  }));\n};\n\nexports.PagingDots = PagingDots;","map":{"version":3,"mappings":"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","names":["defaultButtonStyles","disabled","border","background","color","padding","textTransform","opacity","cursor","prevButtonDisabled","currentSlide","wrapAround","cellAlign","slidesToShow","types_1","Right","exports","PreviousButton","props","handleClick","event","preventDefault","previousSlide","prevButtonClassName","prevButtonStyle","prevButtonText","defaultControlsConfig","className","style","onClick","type","children","nextButtonDisabled","slideCount","Left","NextButton","nextSlide","nextButtonClassName","nextButtonStyle","nextButtonText","getDotIndexes","slidesToScroll","scrollMode","dotIndexes","scrollSlides","i","push","Center","lastPossibleIndexWithoutWhitespace","remainder","length","firstPossibleIndexWithoutWhitespace","reverse","PagingDots","listStyles","position","top","display","margin","listStyleType","getButtonStyles","active","fill","indexes","pagingDotsContainerClassName","pagingDotsClassName","pagingDotsStyle","map","index","isActive","goToSlide","bind","width","height","focusable","cx","cy","r"],"sources":["../src/default-controls.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}