{"ast":null,"code":"/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * See LICENSE file in root directory for full license.\n */\n\"use strict\";\n\nconst KEYS = require(\"./visitor-keys.json\"); // Types.\n\n\nconst NODE_TYPES = Object.freeze(Object.keys(KEYS)); // Freeze the keys.\n\nfor (const type of NODE_TYPES) {\n  Object.freeze(KEYS[type]);\n}\n\nObject.freeze(KEYS); // List to ignore keys.\n\nconst KEY_BLACKLIST = new Set([\"parent\", \"leadingComments\", \"trailingComments\"]);\n/**\n * Check whether a given key should be used or not.\n * @param {string} key The key to check.\n * @returns {boolean} `true` if the key should be used.\n */\n\nfunction filterKey(key) {\n  return !KEY_BLACKLIST.has(key) && key[0] !== \"_\";\n} //------------------------------------------------------------------------------\n// Public interfaces\n//------------------------------------------------------------------------------\n\n\nmodule.exports = Object.freeze({\n  /**\n   * Visitor keys.\n   * @type {{ [type: string]: string[] | undefined }}\n   */\n  KEYS,\n\n  /**\n   * Get visitor keys of a given node.\n   * @param {Object} node The AST node to get keys.\n   * @returns {string[]} Visitor keys of the node.\n   */\n  getKeys(node) {\n    return Object.keys(node).filter(filterKey);\n  },\n\n  // Disable valid-jsdoc rule because it reports syntax error on the type of @returns.\n  // eslint-disable-next-line valid-jsdoc\n\n  /**\n   * Make the union set with `KEYS` and given keys.\n   * @param {Object} additionalKeys The additional keys.\n   * @returns {{ [type: string]: string[] | undefined }} The union set.\n   */\n  unionWith(additionalKeys) {\n    const retv = Object.assign({}, KEYS);\n\n    for (const type of Object.keys(additionalKeys)) {\n      if (retv.hasOwnProperty(type)) {\n        const keys = new Set(additionalKeys[type]);\n\n        for (const key of retv[type]) {\n          keys.add(key);\n        }\n\n        retv[type] = Object.freeze(Array.from(keys));\n      } else {\n        retv[type] = Object.freeze(Array.from(additionalKeys[type]));\n      }\n    }\n\n    return Object.freeze(retv);\n  }\n\n});","map":{"version":3,"names":["KEYS","require","NODE_TYPES","Object","freeze","keys","type","KEY_BLACKLIST","Set","filterKey","key","has","module","exports","getKeys","node","filter","unionWith","additionalKeys","retv","assign","hasOwnProperty","add","Array","from"],"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/node_modules/eslint-utils/node_modules/eslint-visitor-keys/lib/index.js"],"sourcesContent":["/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * See LICENSE file in root directory for full license.\n */\n\"use strict\";\n\nconst KEYS = require(\"./visitor-keys.json\");\n\n// Types.\nconst NODE_TYPES = Object.freeze(Object.keys(KEYS));\n\n// Freeze the keys.\nfor (const type of NODE_TYPES) {\n    Object.freeze(KEYS[type]);\n}\nObject.freeze(KEYS);\n\n// List to ignore keys.\nconst KEY_BLACKLIST = new Set([\n    \"parent\",\n    \"leadingComments\",\n    \"trailingComments\"\n]);\n\n/**\n * Check whether a given key should be used or not.\n * @param {string} key The key to check.\n * @returns {boolean} `true` if the key should be used.\n */\nfunction filterKey(key) {\n    return !KEY_BLACKLIST.has(key) && key[0] !== \"_\";\n}\n\n//------------------------------------------------------------------------------\n// Public interfaces\n//------------------------------------------------------------------------------\n\nmodule.exports = Object.freeze({\n\n    /**\n     * Visitor keys.\n     * @type {{ [type: string]: string[] | undefined }}\n     */\n    KEYS,\n\n    /**\n     * Get visitor keys of a given node.\n     * @param {Object} node The AST node to get keys.\n     * @returns {string[]} Visitor keys of the node.\n     */\n    getKeys(node) {\n        return Object.keys(node).filter(filterKey);\n    },\n\n    // Disable valid-jsdoc rule because it reports syntax error on the type of @returns.\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Make the union set with `KEYS` and given keys.\n     * @param {Object} additionalKeys The additional keys.\n     * @returns {{ [type: string]: string[] | undefined }} The union set.\n     */\n    unionWith(additionalKeys) {\n        const retv = Object.assign({}, KEYS);\n\n        for (const type of Object.keys(additionalKeys)) {\n            if (retv.hasOwnProperty(type)) {\n                const keys = new Set(additionalKeys[type]);\n\n                for (const key of retv[type]) {\n                    keys.add(key);\n                }\n\n                retv[type] = Object.freeze(Array.from(keys));\n            } else {\n                retv[type] = Object.freeze(Array.from(additionalKeys[type]));\n            }\n        }\n\n        return Object.freeze(retv);\n    }\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,qBAAD,CAApB,C,CAEA;;;AACA,MAAMC,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACE,IAAP,CAAYL,IAAZ,CAAd,CAAnB,C,CAEA;;AACA,KAAK,MAAMM,IAAX,IAAmBJ,UAAnB,EAA+B;EAC3BC,MAAM,CAACC,MAAP,CAAcJ,IAAI,CAACM,IAAD,CAAlB;AACH;;AACDH,MAAM,CAACC,MAAP,CAAcJ,IAAd,E,CAEA;;AACA,MAAMO,aAAa,GAAG,IAAIC,GAAJ,CAAQ,CAC1B,QAD0B,EAE1B,iBAF0B,EAG1B,kBAH0B,CAAR,CAAtB;AAMA;AACA;AACA;AACA;AACA;;AACA,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;EACpB,OAAO,CAACH,aAAa,CAACI,GAAd,CAAkBD,GAAlB,CAAD,IAA2BA,GAAG,CAAC,CAAD,CAAH,KAAW,GAA7C;AACH,C,CAED;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBV,MAAM,CAACC,MAAP,CAAc;EAE3B;AACJ;AACA;AACA;EACIJ,IAN2B;;EAQ3B;AACJ;AACA;AACA;AACA;EACIc,OAAO,CAACC,IAAD,EAAO;IACV,OAAOZ,MAAM,CAACE,IAAP,CAAYU,IAAZ,EAAkBC,MAAlB,CAAyBP,SAAzB,CAAP;EACH,CAf0B;;EAiB3B;EACA;;EACA;AACJ;AACA;AACA;AACA;EACIQ,SAAS,CAACC,cAAD,EAAiB;IACtB,MAAMC,IAAI,GAAGhB,MAAM,CAACiB,MAAP,CAAc,EAAd,EAAkBpB,IAAlB,CAAb;;IAEA,KAAK,MAAMM,IAAX,IAAmBH,MAAM,CAACE,IAAP,CAAYa,cAAZ,CAAnB,EAAgD;MAC5C,IAAIC,IAAI,CAACE,cAAL,CAAoBf,IAApB,CAAJ,EAA+B;QAC3B,MAAMD,IAAI,GAAG,IAAIG,GAAJ,CAAQU,cAAc,CAACZ,IAAD,CAAtB,CAAb;;QAEA,KAAK,MAAMI,GAAX,IAAkBS,IAAI,CAACb,IAAD,CAAtB,EAA8B;UAC1BD,IAAI,CAACiB,GAAL,CAASZ,GAAT;QACH;;QAEDS,IAAI,CAACb,IAAD,CAAJ,GAAaH,MAAM,CAACC,MAAP,CAAcmB,KAAK,CAACC,IAAN,CAAWnB,IAAX,CAAd,CAAb;MACH,CARD,MAQO;QACHc,IAAI,CAACb,IAAD,CAAJ,GAAaH,MAAM,CAACC,MAAP,CAAcmB,KAAK,CAACC,IAAN,CAAWN,cAAc,CAACZ,IAAD,CAAzB,CAAd,CAAb;MACH;IACJ;;IAED,OAAOH,MAAM,CAACC,MAAP,CAAce,IAAd,CAAP;EACH;;AA1C0B,CAAd,CAAjB"},"metadata":{},"sourceType":"script"}