{"ast":null,"code":"/**\n * @fileoverview disallow using an async function as a Promise executor\n * @author Teddy Katz\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  meta: {\n    type: \"problem\",\n    docs: {\n      description: \"disallow using an async function as a Promise executor\",\n      category: \"Possible Errors\",\n      recommended: true,\n      url: \"https://eslint.org/docs/rules/no-async-promise-executor\"\n    },\n    fixable: null,\n    schema: [],\n    messages: {\n      async: \"Promise executor functions should not be async.\"\n    }\n  },\n\n  create(context) {\n    return {\n      \"NewExpression[callee.name='Promise'][arguments.0.async=true]\"(node) {\n        context.report({\n          node: context.getSourceCode().getFirstToken(node.arguments[0], token => token.value === \"async\"),\n          messageId: \"async\"\n        });\n      }\n\n    };\n  }\n\n};","map":{"version":3,"names":["module","exports","meta","type","docs","description","category","recommended","url","fixable","schema","messages","async","create","context","node","report","getSourceCode","getFirstToken","arguments","token","value","messageId"],"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/node_modules/eslint/lib/rules/no-async-promise-executor.js"],"sourcesContent":["/**\n * @fileoverview disallow using an async function as a Promise executor\n * @author Teddy Katz\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        type: \"problem\",\n\n        docs: {\n            description: \"disallow using an async function as a Promise executor\",\n            category: \"Possible Errors\",\n            recommended: true,\n            url: \"https://eslint.org/docs/rules/no-async-promise-executor\"\n        },\n\n        fixable: null,\n        schema: [],\n        messages: {\n            async: \"Promise executor functions should not be async.\"\n        }\n    },\n\n    create(context) {\n        return {\n            \"NewExpression[callee.name='Promise'][arguments.0.async=true]\"(node) {\n                context.report({\n                    node: context.getSourceCode().getFirstToken(node.arguments[0], token => token.value === \"async\"),\n                    messageId: \"async\"\n                });\n            }\n        };\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,a,CAEA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB;EACbC,IAAI,EAAE;IACFC,IAAI,EAAE,SADJ;IAGFC,IAAI,EAAE;MACFC,WAAW,EAAE,wDADX;MAEFC,QAAQ,EAAE,iBAFR;MAGFC,WAAW,EAAE,IAHX;MAIFC,GAAG,EAAE;IAJH,CAHJ;IAUFC,OAAO,EAAE,IAVP;IAWFC,MAAM,EAAE,EAXN;IAYFC,QAAQ,EAAE;MACNC,KAAK,EAAE;IADD;EAZR,CADO;;EAkBbC,MAAM,CAACC,OAAD,EAAU;IACZ,OAAO;MACH,+DAA+DC,IAA/D,EAAqE;QACjED,OAAO,CAACE,MAAR,CAAe;UACXD,IAAI,EAAED,OAAO,CAACG,aAAR,GAAwBC,aAAxB,CAAsCH,IAAI,CAACI,SAAL,CAAe,CAAf,CAAtC,EAAyDC,KAAK,IAAIA,KAAK,CAACC,KAAN,KAAgB,OAAlF,CADK;UAEXC,SAAS,EAAE;QAFA,CAAf;MAIH;;IANE,CAAP;EAQH;;AA3BY,CAAjB"},"metadata":{},"sourceType":"script"}