{"ast":null,"code":"/**\n * @fileoverview Rule to forbid control characters from regular expressions.\n * @author Nicholas C. Zakas\n */\n\"use strict\";\n\nconst RegExpValidator = require(\"regexpp\").RegExpValidator;\n\nconst collector = new class {\n  constructor() {\n    this._source = \"\";\n    this._controlChars = [];\n    this._validator = new RegExpValidator(this);\n  }\n\n  onPatternEnter() {\n    this._controlChars = [];\n  }\n\n  onCharacter(start, end, cp) {\n    if (cp >= 0x00 && cp <= 0x1F && (this._source.codePointAt(start) === cp || this._source.slice(start, end).startsWith(\"\\\\x\") || this._source.slice(start, end).startsWith(\"\\\\u\"))) {\n      this._controlChars.push(`\\\\x${`0${cp.toString(16)}`.slice(-2)}`);\n    }\n  }\n\n  collectControlChars(regexpStr) {\n    try {\n      this._source = regexpStr;\n\n      this._validator.validatePattern(regexpStr); // Call onCharacter hook\n\n    } catch {// Ignore syntax errors in RegExp.\n    }\n\n    return this._controlChars;\n  }\n\n}(); //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  meta: {\n    type: \"problem\",\n    docs: {\n      description: \"disallow control characters in regular expressions\",\n      category: \"Possible Errors\",\n      recommended: true,\n      url: \"https://eslint.org/docs/rules/no-control-regex\"\n    },\n    schema: [],\n    messages: {\n      unexpected: \"Unexpected control character(s) in regular expression: {{controlChars}}.\"\n    }\n  },\n\n  create(context) {\n    /**\n     * Get the regex expression\n     * @param {ASTNode} node node to evaluate\n     * @returns {RegExp|null} Regex if found else null\n     * @private\n     */\n    function getRegExpPattern(node) {\n      if (node.regex) {\n        return node.regex.pattern;\n      }\n\n      if (typeof node.value === \"string\" && (node.parent.type === \"NewExpression\" || node.parent.type === \"CallExpression\") && node.parent.callee.type === \"Identifier\" && node.parent.callee.name === \"RegExp\" && node.parent.arguments[0] === node) {\n        return node.value;\n      }\n\n      return null;\n    }\n\n    return {\n      Literal(node) {\n        const pattern = getRegExpPattern(node);\n\n        if (pattern) {\n          const controlCharacters = collector.collectControlChars(pattern);\n\n          if (controlCharacters.length > 0) {\n            context.report({\n              node,\n              messageId: \"unexpected\",\n              data: {\n                controlChars: controlCharacters.join(\", \")\n              }\n            });\n          }\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"names":["RegExpValidator","require","collector","constructor","_source","_controlChars","_validator","onPatternEnter","onCharacter","start","end","cp","codePointAt","slice","startsWith","push","toString","collectControlChars","regexpStr","validatePattern","module","exports","meta","type","docs","description","category","recommended","url","schema","messages","unexpected","create","context","getRegExpPattern","node","regex","pattern","value","parent","callee","name","arguments","Literal","controlCharacters","length","report","messageId","data","controlChars","join"],"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/node_modules/eslint/lib/rules/no-control-regex.js"],"sourcesContent":["/**\n * @fileoverview Rule to forbid control characters from regular expressions.\n * @author Nicholas C. Zakas\n */\n\n\"use strict\";\n\nconst RegExpValidator = require(\"regexpp\").RegExpValidator;\nconst collector = new (class {\n    constructor() {\n        this._source = \"\";\n        this._controlChars = [];\n        this._validator = new RegExpValidator(this);\n    }\n\n    onPatternEnter() {\n        this._controlChars = [];\n    }\n\n    onCharacter(start, end, cp) {\n        if (cp >= 0x00 &&\n            cp <= 0x1F &&\n            (\n                this._source.codePointAt(start) === cp ||\n                this._source.slice(start, end).startsWith(\"\\\\x\") ||\n                this._source.slice(start, end).startsWith(\"\\\\u\")\n            )\n        ) {\n            this._controlChars.push(`\\\\x${`0${cp.toString(16)}`.slice(-2)}`);\n        }\n    }\n\n    collectControlChars(regexpStr) {\n        try {\n            this._source = regexpStr;\n            this._validator.validatePattern(regexpStr); // Call onCharacter hook\n        } catch {\n\n            // Ignore syntax errors in RegExp.\n        }\n        return this._controlChars;\n    }\n})();\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        type: \"problem\",\n\n        docs: {\n            description: \"disallow control characters in regular expressions\",\n            category: \"Possible Errors\",\n            recommended: true,\n            url: \"https://eslint.org/docs/rules/no-control-regex\"\n        },\n\n        schema: [],\n\n        messages: {\n            unexpected: \"Unexpected control character(s) in regular expression: {{controlChars}}.\"\n        }\n    },\n\n    create(context) {\n\n        /**\n         * Get the regex expression\n         * @param {ASTNode} node node to evaluate\n         * @returns {RegExp|null} Regex if found else null\n         * @private\n         */\n        function getRegExpPattern(node) {\n            if (node.regex) {\n                return node.regex.pattern;\n            }\n            if (typeof node.value === \"string\" &&\n                (node.parent.type === \"NewExpression\" || node.parent.type === \"CallExpression\") &&\n                node.parent.callee.type === \"Identifier\" &&\n                node.parent.callee.name === \"RegExp\" &&\n                node.parent.arguments[0] === node\n            ) {\n                return node.value;\n            }\n\n            return null;\n        }\n\n        return {\n            Literal(node) {\n                const pattern = getRegExpPattern(node);\n\n                if (pattern) {\n                    const controlCharacters = collector.collectControlChars(pattern);\n\n                    if (controlCharacters.length > 0) {\n                        context.report({\n                            node,\n                            messageId: \"unexpected\",\n                            data: {\n                                controlChars: controlCharacters.join(\", \")\n                            }\n                        });\n                    }\n                }\n            }\n        };\n\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}