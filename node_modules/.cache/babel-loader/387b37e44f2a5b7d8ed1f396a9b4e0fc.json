{"ast":null,"code":"// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n'use strict';\n\nvar Schema = require('../schema');\n\nmodule.exports = new Schema({\n  include: [require('./failsafe')],\n  implicit: [require('../type/null'), require('../type/bool'), require('../type/int'), require('../type/float')]\n});","map":{"version":3,"names":["Schema","require","module","exports","include","implicit"],"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/node_modules/js-yaml/lib/js-yaml/schema/json.js"],"sourcesContent":["// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./failsafe')\n  ],\n  implicit: [\n    require('../type/null'),\n    require('../type/bool'),\n    require('../type/int'),\n    require('../type/float')\n  ]\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAGA,IAAIA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAApB;;AAGAC,MAAM,CAACC,OAAP,GAAiB,IAAIH,MAAJ,CAAW;EAC1BI,OAAO,EAAE,CACPH,OAAO,CAAC,YAAD,CADA,CADiB;EAI1BI,QAAQ,EAAE,CACRJ,OAAO,CAAC,cAAD,CADC,EAERA,OAAO,CAAC,cAAD,CAFC,EAGRA,OAAO,CAAC,aAAD,CAHC,EAIRA,OAAO,CAAC,eAAD,CAJC;AAJgB,CAAX,CAAjB"},"metadata":{},"sourceType":"script"}