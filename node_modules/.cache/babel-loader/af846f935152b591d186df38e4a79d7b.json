{"ast":null,"code":"var _jsxFileName = \"/Users/brenoaraujo/projects-to-github/RecipeApp/src/pages/FoodDetails.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router';\nimport { requestFoodsOrDrinks, requestRecipesById } from '../services/fetchAPIs';\nimport Card from '../components/Card';\nimport { getFavoriteRecipes, setFavoriteRecipes, getDoneRecipes, getRecipeProgress } from '../services/localStorage';\nimport '../css/RecipeDetails.css';\nimport RecipesContext from '../context/RecipesContext';\nimport ShareButton from '../components/ShareButton';\nimport FavoriteButton from '../components/FavoriteButton';\nconst currentURL = window.location.href;\nconst MAX_RECOMENDATION_CARDS = 6;\nfunction FoodDetails(props) {\n  const {\n    match: {\n      params: {\n        id\n      }\n    }\n  } = props;\n  const history = useHistory();\n  const [recipeInfo, setRecipeInfo] = useState({});\n  const {\n    strMealThumb,\n    strMeal,\n    strCategory,\n    strInstructions,\n    strYoutube,\n    strArea\n  } = recipeInfo;\n  const [isDone, setIsDone] = useState(false);\n  const [isInProgress, setIsInProgressDone] = useState(false);\n  const [renderRecomendations, setRecomendations] = useState([]);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [isCopied, setIsCopied] = useState(false);\n  const {\n    sliceIngredients,\n    sliceMeasures\n  } = useContext(RecipesContext);\n  useEffect(() => {\n    if (getDoneRecipes()) {\n      const currentRecipeIsDone = getDoneRecipes().find(recipe => recipe.id === id);\n      return setIsDone(currentRecipeIsDone);\n    }\n    return setIsDone(false);\n  }, [id]);\n  useEffect(() => {\n    if (getRecipeProgress()) {\n      const currentRecipeIsInProgress = !!getRecipeProgress().meals[id];\n      return setIsInProgressDone(currentRecipeIsInProgress);\n    }\n    return setIsInProgressDone(false);\n  }, [id]);\n  useEffect(() => {\n    requestRecipesById(id, 'themealdb').then(_ref => {\n      let {\n        meals\n      } = _ref;\n      return setRecipeInfo(meals[0]);\n    });\n  }, [id]);\n  useEffect(() => {\n    requestFoodsOrDrinks('thecocktaildb').then(_ref2 => {\n      let {\n        drinks\n      } = _ref2;\n      return setRecomendations(drinks.slice(0, MAX_RECOMENDATION_CARDS));\n    });\n  }, []);\n  useEffect(() => {\n    if (getFavoriteRecipes()) {\n      return setIsFavorite(getFavoriteRecipes().find(recipe => recipe.id === id));\n    }\n    setFavoriteRecipes([]);\n  }, [id]);\n  const ingredientsList = sliceIngredients(recipeInfo);\n  const measuresList = sliceMeasures(recipeInfo);\n  const url = strYoutube ? strYoutube.split('=')[1] : strYoutube;\n  const handleFavoriteDependencies = {\n    id,\n    type: 'comida',\n    area: strArea,\n    category: strCategory,\n    alcoholicOrNot: '',\n    name: strMeal,\n    image: strMealThumb\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"details__image\",\n    src: strMealThumb,\n    alt: \"food\",\n    \"data-testid\": \"recipe-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"titles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"details__category\",\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, strCategory), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"details__title\",\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, strMeal)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ShareButton, {\n    textToCopy: currentURL,\n    setIsCopied: setIsCopied,\n    isCopied: isCopied,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FavoriteButton, {\n    isFavorite: isFavorite,\n    setIsFavorite: setIsFavorite,\n    id: id,\n    favoriteDependencies: handleFavoriteDependencies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"details__description margin-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, \"Ingredientes:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"ingredient-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, ingredientsList.map((ingredient, index) => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"details__ingredient\",\n    key: ingredient,\n    \"data-testid\": `${index}-ingredient-name-and-measure`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"details__ingredient-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, `${ingredient}: `), measuresList[index] ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"details__measure\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, measuresList[index]) : ''))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"details__description--instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, \"Instru\\xE7\\xF5es:\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"details__instructions\",\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, strInstructions), /*#__PURE__*/React.createElement(\"iframe\", {\n    className: \"details__video\",\n    width: \"360\",\n    height: \"315\",\n    src: `https://youtube.com/embed/${url}`,\n    title: strMeal,\n    \"data-testid\": \"video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recomended\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"details__description center-this\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, \"\\xD3timos acompanhamentos:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"carousel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, renderRecomendations && renderRecomendations.map((beverage, index) => /*#__PURE__*/React.createElement(Card, {\n    id: \"idDrink\",\n    itemId: beverage.idDrink,\n    header: beverage.strDrink,\n    img: beverage.strDrinkThumb,\n    index: index,\n    key: beverage.idDrink,\n    testId: `${index}-recomendation-card`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"button\", {\n    className: isDone ? 'hidden-start-recipe-btn' : 'login__btn start-recipe',\n    type: \"button\",\n    onClick: () => history.push(`/comidas/${id}/in-progress`),\n    \"data-testid\": \"start-recipe-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, isInProgress ? 'Continuar Receita' : 'Iniciar Receita'));\n}\nFoodDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default FoodDetails;","map":{"version":3,"names":["React","useContext","useEffect","useState","PropTypes","useHistory","requestFoodsOrDrinks","requestRecipesById","Card","getFavoriteRecipes","setFavoriteRecipes","getDoneRecipes","getRecipeProgress","RecipesContext","ShareButton","FavoriteButton","currentURL","window","location","href","MAX_RECOMENDATION_CARDS","FoodDetails","props","match","params","id","history","recipeInfo","setRecipeInfo","strMealThumb","strMeal","strCategory","strInstructions","strYoutube","strArea","isDone","setIsDone","isInProgress","setIsInProgressDone","renderRecomendations","setRecomendations","isFavorite","setIsFavorite","isCopied","setIsCopied","sliceIngredients","sliceMeasures","currentRecipeIsDone","find","recipe","currentRecipeIsInProgress","meals","then","drinks","slice","ingredientsList","measuresList","url","split","handleFavoriteDependencies","type","area","category","alcoholicOrNot","name","image","map","ingredient","index","beverage","idDrink","strDrink","strDrinkThumb","push","propTypes","shape","string","isRequired"],"sources":["/Users/brenoaraujo/projects-to-github/RecipeApp/src/pages/FoodDetails.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router';\nimport {\n  requestFoodsOrDrinks,\n  requestRecipesById,\n} from '../services/fetchAPIs';\nimport Card from '../components/Card';\nimport {\n  getFavoriteRecipes,\n  setFavoriteRecipes,\n  getDoneRecipes,\n  getRecipeProgress,\n} from '../services/localStorage';\nimport '../css/RecipeDetails.css';\nimport RecipesContext from '../context/RecipesContext';\nimport ShareButton from '../components/ShareButton';\nimport FavoriteButton from '../components/FavoriteButton';\n\nconst currentURL = window.location.href;\n\nconst MAX_RECOMENDATION_CARDS = 6;\n\nfunction FoodDetails(props) {\n  const {\n    match: {\n      params: { id },\n    },\n  } = props;\n  const history = useHistory();\n\n  const [recipeInfo, setRecipeInfo] = useState({});\n  const {\n    strMealThumb,\n    strMeal,\n    strCategory,\n    strInstructions,\n    strYoutube,\n    strArea,\n  } = recipeInfo;\n  const [isDone, setIsDone] = useState(false);\n  const [isInProgress, setIsInProgressDone] = useState(false);\n  const [renderRecomendations, setRecomendations] = useState([]);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [isCopied, setIsCopied] = useState(false);\n  const { sliceIngredients, sliceMeasures } = useContext(RecipesContext);\n\n  useEffect(() => {\n    if (getDoneRecipes()) {\n      const currentRecipeIsDone = getDoneRecipes().find((recipe) => recipe.id === id);\n      return setIsDone(currentRecipeIsDone);\n    }\n    return setIsDone(false);\n  }, [id]);\n\n  useEffect(() => {\n    if (getRecipeProgress()) {\n      const currentRecipeIsInProgress = !!getRecipeProgress().meals[id];\n      return setIsInProgressDone(currentRecipeIsInProgress);\n    }\n    return setIsInProgressDone(false);\n  }, [id]);\n\n  useEffect(() => {\n    requestRecipesById(id, 'themealdb').then(({ meals }) => setRecipeInfo(meals[0]));\n  }, [id]);\n\n  useEffect(() => {\n    requestFoodsOrDrinks('thecocktaildb')\n      .then(({ drinks }) => setRecomendations(drinks.slice(0, MAX_RECOMENDATION_CARDS)));\n  }, []);\n\n  useEffect(() => {\n    if (getFavoriteRecipes()) {\n      return setIsFavorite(\n        getFavoriteRecipes().find((recipe) => recipe.id === id),\n      );\n    }\n    setFavoriteRecipes([]);\n  }, [id]);\n\n  const ingredientsList = sliceIngredients(recipeInfo);\n  const measuresList = sliceMeasures(recipeInfo);\n\n  const url = strYoutube ? strYoutube.split('=')[1] : strYoutube;\n\n  const handleFavoriteDependencies = {\n    id,\n    type: 'comida',\n    area: strArea,\n    category: strCategory,\n    alcoholicOrNot: '',\n    name: strMeal,\n    image: strMealThumb,\n  };\n\n  return (\n    <div className=\"page-container\">\n      <img\n        className=\"details__image\"\n        src={ strMealThumb }\n        alt=\"food\"\n        data-testid=\"recipe-photo\"\n      />\n      <div className=\"title-container\">\n        <div className=\"titles\">\n          <h2 className=\"details__category\" data-testid=\"recipe-category\">\n            {strCategory}\n          </h2>\n          <h1 className=\"details__title\" data-testid=\"recipe-title\">\n            {strMeal}\n          </h1>\n        </div>\n        <div className=\"details\">\n          <ShareButton\n            textToCopy={ currentURL }\n            setIsCopied={ setIsCopied }\n            isCopied={ isCopied }\n          />\n          <FavoriteButton\n            isFavorite={ isFavorite }\n            setIsFavorite={ setIsFavorite }\n            id={ id }\n            favoriteDependencies={ handleFavoriteDependencies }\n          />\n        </div>\n      </div>\n      <p className=\"details__description margin-left\">Ingredientes:</p>\n      <ul className=\"ingredient-list\">\n        {ingredientsList.map((ingredient, index) => (\n          <li\n            className=\"details__ingredient\"\n            key={ ingredient }\n            data-testid={ `${index}-ingredient-name-and-measure` }\n          >\n            <span className=\"details__ingredient-name\">{`${ingredient}: `}</span>\n            {measuresList[index] ? (\n              <span className=\"details__measure\">{measuresList[index]}</span>\n            ) : (\n              ''\n            )}\n          </li>\n        ))}\n      </ul>\n      <p className=\"details__description--instructions\">Instruções:</p>\n      <p className=\"details__instructions\" data-testid=\"instructions\">\n        {strInstructions}\n      </p>\n      <iframe\n        className=\"details__video\"\n        width=\"360\"\n        height=\"315\"\n        src={ `https://youtube.com/embed/${url}` }\n        title={ strMeal }\n        data-testid=\"video\"\n      />\n      <div className=\"recomended\">\n        <p className=\"details__description center-this\">Ótimos acompanhamentos:</p>\n        <div className=\"carousel\">\n          {renderRecomendations\n            && renderRecomendations.map((beverage, index) => (\n              <Card\n                id=\"idDrink\"\n                itemId={ beverage.idDrink }\n                header={ beverage.strDrink }\n                img={ beverage.strDrinkThumb }\n                index={ index }\n                key={ beverage.idDrink }\n                testId={ `${index}-recomendation-card` }\n              />\n            ))}\n        </div>\n      </div>\n      <button\n        className={ isDone ? 'hidden-start-recipe-btn' : 'login__btn start-recipe' }\n        type=\"button\"\n        onClick={ () => history.push(`/comidas/${id}/in-progress`) }\n        data-testid=\"start-recipe-btn\"\n      >\n        {isInProgress ? 'Continuar Receita' : 'Iniciar Receita' }\n      </button>\n    </div>\n  );\n}\n\nFoodDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default FoodDetails;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}