{"ast":null,"code":"var _jsxFileName = \"/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/src/components/Card.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(_ref) {\n  let {\n    name,\n    thumb,\n    index\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": `${index}-recipe-card`,\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      \"data-testid\": `${index}-card-name`,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: thumb,\n      alt: `foto e receita de ${name} `,\n      \"data-testid\": `${index}-card-img`,\n      style: {\n        width: '200px',\n        height: '200px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Card;\nCard.propTypes = {\n  name: PropTypes.string,\n  thumb: PropTypes.string,\n  index: PropTypes.number\n}.isRequired;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","PropTypes","Card","name","thumb","index","width","height","propTypes","string","number","isRequired"],"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/src/components/Card.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Card({ name, thumb, index }) {\n  return (\n    <div data-testid={ `${index}-recipe-card` }>\n      <legend data-testid={ `${index}-card-name` }>\n        {name}\n      </legend>\n      <img\n        src={ thumb }\n        alt={ `foto e receita de ${name} ` }\n        data-testid={ `${index}-card-img` }\n        style={ { width: '200px', height: '200px' } }\n      />\n    </div>\n  );\n}\n\nCard.propTypes = {\n  name: PropTypes.string,\n  thumb: PropTypes.string,\n  index: PropTypes.number,\n}.isRequired;\n\nexport default Card;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,IAAT,OAAsC;EAAA,IAAxB;IAAEC,IAAF;IAAQC,KAAR;IAAeC;EAAf,CAAwB;EACpC,oBACE;IAAK,eAAe,GAAEA,KAAM,cAA5B;IAAA,wBACE;MAAQ,eAAe,GAAEA,KAAM,YAA/B;MAAA,UACGF;IADH;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MACE,GAAG,EAAGC,KADR;MAEE,GAAG,EAAI,qBAAoBD,IAAK,GAFlC;MAGE,eAAe,GAAEE,KAAM,WAHzB;MAIE,KAAK,EAAG;QAAEC,KAAK,EAAE,OAAT;QAAkBC,MAAM,EAAE;MAA1B;IAJV;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;;KAdQL,I;AAgBTA,IAAI,CAACM,SAAL,GAAiB;EACfL,IAAI,EAAEF,SAAS,CAACQ,MADD;EAEfL,KAAK,EAAEH,SAAS,CAACQ,MAFF;EAGfJ,KAAK,EAAEJ,SAAS,CAACS;AAHF,EAIfC,UAJF;AAMA,eAAeT,IAAf"},"metadata":{},"sourceType":"module"}