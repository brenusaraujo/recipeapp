{"ast":null,"code":"var _jsxFileName = \"/Users/brenoaraujo/projects-to-github/RecipeApp/src/components/FilterButtons.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport RecipesContext from '../context/RecipesContext';\nimport '../css/FilterButtons.css';\nimport { requestCategories, requestRecipesByCategory } from '../services/fetchAPIs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MAX_MAP_LENGTH = 5;\n\nfunction FilterButtons(_ref) {\n  _s();\n\n  let {\n    url,\n    type\n  } = _ref;\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('All');\n  const {\n    location: {\n      pathname\n    }\n  } = useHistory();\n  const {\n    setFilteredFood,\n    setFilteredBeverage\n  } = useContext(RecipesContext);\n\n  const filterBeverage = async id => {\n    if (id === selectedCategory) {\n      setSelectedCategory('All');\n      return setFilteredBeverage([]);\n    }\n\n    const result = await requestRecipesByCategory(id, 'thecocktaildb');\n    setFilteredBeverage(result.drinks);\n    return setSelectedCategory(id);\n  };\n\n  const filterFood = async id => {\n    if (id === selectedCategory) {\n      setSelectedCategory('All');\n      return setFilteredFood([]);\n    }\n\n    const result = await requestRecipesByCategory(id, 'themealdb');\n    setFilteredFood(result.meals);\n    return setSelectedCategory(id);\n  };\n\n  const handleClick = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    if (pathname === '/bebidas') return filterBeverage(target.id);\n    return filterFood(target.id);\n  };\n\n  const resetFilters = () => {\n    setSelectedCategory('All');\n    if (pathname === '/bebidas') return setFilteredBeverage([]);\n    return setFilteredFood([]);\n  };\n\n  useEffect(() => {\n    requestCategories(url).then(items => setCategories(items[type]));\n  }, [type, url]);\n  const renderButtons = categories.slice(0, MAX_MAP_LENGTH);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"description\",\n      children: \"Categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: selectedCategory === 'All' ? 'selected' : 'filters__btn',\n        \"data-testid\": \"All-category-filter\",\n        type: \"button\",\n        onClick: resetFilters,\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), renderButtons && renderButtons.map(_ref3 => {\n        let {\n          strCategory\n        } = _ref3;\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedCategory === strCategory ? 'selected' : 'filters__btn',\n          type: \"button\",\n          \"data-testid\": `${strCategory}-category-filter`,\n          id: strCategory,\n          onClick: handleClick,\n          children: strCategory\n        }, strCategory, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(FilterButtons, \"WOtsLjgC9hBCWCxpnUx0EAZtZFY=\", false, function () {\n  return [useHistory];\n});\n\n_c = FilterButtons;\nFilterButtons.propTypes = {\n  type: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired\n};\nexport default FilterButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterButtons\");","map":{"version":3,"names":["React","useContext","useEffect","useState","PropTypes","useHistory","RecipesContext","requestCategories","requestRecipesByCategory","MAX_MAP_LENGTH","FilterButtons","url","type","categories","setCategories","selectedCategory","setSelectedCategory","location","pathname","setFilteredFood","setFilteredBeverage","filterBeverage","id","result","drinks","filterFood","meals","handleClick","target","resetFilters","then","items","renderButtons","slice","map","strCategory","propTypes","string","isRequired"],"sources":["/Users/brenoaraujo/projects-to-github/RecipeApp/src/components/FilterButtons.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport RecipesContext from '../context/RecipesContext';\nimport '../css/FilterButtons.css';\nimport { requestCategories, requestRecipesByCategory } from '../services/fetchAPIs';\n\nconst MAX_MAP_LENGTH = 5;\n\nfunction FilterButtons({ url, type }) {\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('All');\n  const {\n    location: { pathname },\n  } = useHistory();\n  const { setFilteredFood, setFilteredBeverage } = useContext(RecipesContext);\n\n  const filterBeverage = async (id) => {\n    if (id === selectedCategory) {\n      setSelectedCategory('All');\n      return setFilteredBeverage([]);\n    }\n    const result = await requestRecipesByCategory(id, 'thecocktaildb');\n    setFilteredBeverage(result.drinks);\n    return setSelectedCategory(id);\n  };\n\n  const filterFood = async (id) => {\n    if (id === selectedCategory) {\n      setSelectedCategory('All');\n      return setFilteredFood([]);\n    }\n    const result = await requestRecipesByCategory(id, 'themealdb');\n    setFilteredFood(result.meals);\n    return setSelectedCategory(id);\n  };\n\n  const handleClick = ({ target }) => {\n    if (pathname === '/bebidas') return filterBeverage(target.id);\n    return filterFood(target.id);\n  };\n\n  const resetFilters = () => {\n    setSelectedCategory('All');\n    if (pathname === '/bebidas') return setFilteredBeverage([]);\n    return setFilteredFood([]);\n  };\n\n  useEffect(() => {\n    requestCategories(url).then((items) => setCategories(items[type]));\n  }, [type, url]);\n\n  const renderButtons = categories.slice(0, MAX_MAP_LENGTH);\n\n  return (\n    <>\n      <p className=\"description\">Categories</p>\n      <div className=\"filters\">\n        <button\n          className={ selectedCategory === 'All' ? 'selected' : 'filters__btn' }\n          data-testid=\"All-category-filter\"\n          type=\"button\"\n          onClick={ resetFilters }\n        >\n          All\n        </button>\n        {renderButtons\n        && renderButtons.map(({ strCategory }) => (\n          <button\n            className={ selectedCategory === strCategory ? 'selected' : 'filters__btn' }\n            key={ strCategory }\n            type=\"button\"\n            data-testid={ `${strCategory}-category-filter` }\n            id={ strCategory }\n            onClick={ handleClick }\n          >\n            {strCategory}\n          </button>\n        ))}\n      </div>\n    </>\n  );\n}\n\nFilterButtons.propTypes = {\n  type: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n};\n\nexport default FilterButtons;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}