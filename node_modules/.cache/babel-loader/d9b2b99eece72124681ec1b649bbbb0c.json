{"ast":null,"code":"/**\n * @fileoverview Rule to flag use of a leading/trailing decimal point in a numeric literal\n * @author James Allardice\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nconst astUtils = require(\"./utils/ast-utils\"); //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n\nmodule.exports = {\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"disallow leading or trailing decimal points in numeric literals\",\n      category: \"Best Practices\",\n      recommended: false,\n      url: \"https://eslint.org/docs/rules/no-floating-decimal\"\n    },\n    schema: [],\n    fixable: \"code\",\n    messages: {\n      leading: \"A leading decimal point can be confused with a dot.\",\n      trailing: \"A trailing decimal point can be confused with a dot.\"\n    }\n  },\n\n  create(context) {\n    const sourceCode = context.getSourceCode();\n    return {\n      Literal(node) {\n        if (typeof node.value === \"number\") {\n          if (node.raw.startsWith(\".\")) {\n            context.report({\n              node,\n              messageId: \"leading\",\n\n              fix(fixer) {\n                const tokenBefore = sourceCode.getTokenBefore(node);\n                const needsSpaceBefore = tokenBefore && tokenBefore.range[1] === node.range[0] && !astUtils.canTokensBeAdjacent(tokenBefore, `0${node.raw}`);\n                return fixer.insertTextBefore(node, needsSpaceBefore ? \" 0\" : \"0\");\n              }\n\n            });\n          }\n\n          if (node.raw.indexOf(\".\") === node.raw.length - 1) {\n            context.report({\n              node,\n              messageId: \"trailing\",\n              fix: fixer => fixer.insertTextAfter(node, \"0\")\n            });\n          }\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"names":["astUtils","require","module","exports","meta","type","docs","description","category","recommended","url","schema","fixable","messages","leading","trailing","create","context","sourceCode","getSourceCode","Literal","node","value","raw","startsWith","report","messageId","fix","fixer","tokenBefore","getTokenBefore","needsSpaceBefore","range","canTokensBeAdjacent","insertTextBefore","indexOf","length","insertTextAfter"],"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/node_modules/eslint/lib/rules/no-floating-decimal.js"],"sourcesContent":["/**\n * @fileoverview Rule to flag use of a leading/trailing decimal point in a numeric literal\n * @author James Allardice\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nconst astUtils = require(\"./utils/ast-utils\");\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        type: \"suggestion\",\n\n        docs: {\n            description: \"disallow leading or trailing decimal points in numeric literals\",\n            category: \"Best Practices\",\n            recommended: false,\n            url: \"https://eslint.org/docs/rules/no-floating-decimal\"\n        },\n\n        schema: [],\n        fixable: \"code\",\n        messages: {\n            leading: \"A leading decimal point can be confused with a dot.\",\n            trailing: \"A trailing decimal point can be confused with a dot.\"\n        }\n    },\n\n    create(context) {\n        const sourceCode = context.getSourceCode();\n\n        return {\n            Literal(node) {\n\n                if (typeof node.value === \"number\") {\n                    if (node.raw.startsWith(\".\")) {\n                        context.report({\n                            node,\n                            messageId: \"leading\",\n                            fix(fixer) {\n                                const tokenBefore = sourceCode.getTokenBefore(node);\n                                const needsSpaceBefore = tokenBefore &&\n                                    tokenBefore.range[1] === node.range[0] &&\n                                    !astUtils.canTokensBeAdjacent(tokenBefore, `0${node.raw}`);\n\n                                return fixer.insertTextBefore(node, needsSpaceBefore ? \" 0\" : \"0\");\n                            }\n                        });\n                    }\n                    if (node.raw.indexOf(\".\") === node.raw.length - 1) {\n                        context.report({\n                            node,\n                            messageId: \"trailing\",\n                            fix: fixer => fixer.insertTextAfter(node, \"0\")\n                        });\n                    }\n                }\n            }\n        };\n\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,a,CAEA;AACA;AACA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,mBAAD,CAAxB,C,CAEA;AACA;AACA;;;AAEAC,MAAM,CAACC,OAAP,GAAiB;EACbC,IAAI,EAAE;IACFC,IAAI,EAAE,YADJ;IAGFC,IAAI,EAAE;MACFC,WAAW,EAAE,iEADX;MAEFC,QAAQ,EAAE,gBAFR;MAGFC,WAAW,EAAE,KAHX;MAIFC,GAAG,EAAE;IAJH,CAHJ;IAUFC,MAAM,EAAE,EAVN;IAWFC,OAAO,EAAE,MAXP;IAYFC,QAAQ,EAAE;MACNC,OAAO,EAAE,qDADH;MAENC,QAAQ,EAAE;IAFJ;EAZR,CADO;;EAmBbC,MAAM,CAACC,OAAD,EAAU;IACZ,MAAMC,UAAU,GAAGD,OAAO,CAACE,aAAR,EAAnB;IAEA,OAAO;MACHC,OAAO,CAACC,IAAD,EAAO;QAEV,IAAI,OAAOA,IAAI,CAACC,KAAZ,KAAsB,QAA1B,EAAoC;UAChC,IAAID,IAAI,CAACE,GAAL,CAASC,UAAT,CAAoB,GAApB,CAAJ,EAA8B;YAC1BP,OAAO,CAACQ,MAAR,CAAe;cACXJ,IADW;cAEXK,SAAS,EAAE,SAFA;;cAGXC,GAAG,CAACC,KAAD,EAAQ;gBACP,MAAMC,WAAW,GAAGX,UAAU,CAACY,cAAX,CAA0BT,IAA1B,CAApB;gBACA,MAAMU,gBAAgB,GAAGF,WAAW,IAChCA,WAAW,CAACG,KAAZ,CAAkB,CAAlB,MAAyBX,IAAI,CAACW,KAAL,CAAW,CAAX,CADJ,IAErB,CAAChC,QAAQ,CAACiC,mBAAT,CAA6BJ,WAA7B,EAA2C,IAAGR,IAAI,CAACE,GAAI,EAAvD,CAFL;gBAIA,OAAOK,KAAK,CAACM,gBAAN,CAAuBb,IAAvB,EAA6BU,gBAAgB,GAAG,IAAH,GAAU,GAAvD,CAAP;cACH;;YAVU,CAAf;UAYH;;UACD,IAAIV,IAAI,CAACE,GAAL,CAASY,OAAT,CAAiB,GAAjB,MAA0Bd,IAAI,CAACE,GAAL,CAASa,MAAT,GAAkB,CAAhD,EAAmD;YAC/CnB,OAAO,CAACQ,MAAR,CAAe;cACXJ,IADW;cAEXK,SAAS,EAAE,UAFA;cAGXC,GAAG,EAAEC,KAAK,IAAIA,KAAK,CAACS,eAAN,CAAsBhB,IAAtB,EAA4B,GAA5B;YAHH,CAAf;UAKH;QACJ;MACJ;;IA1BE,CAAP;EA6BH;;AAnDY,CAAjB"},"metadata":{},"sourceType":"script"}