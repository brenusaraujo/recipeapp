{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDefaultSlideIndex = exports.getPrevMoveIndex = exports.getNextMoveIndex = exports.isSlideVisible = exports.getIndexes = void 0;\n\nconst default_controls_1 = require(\"./default-controls\");\n\nconst types_1 = require(\"./types\");\n\nconst getIndexes = (slide, endSlide, slideCount) => {\n  let slideIndex = slide;\n  let endSlideIndex = endSlide;\n\n  if (slideIndex < 0) {\n    slideIndex += slideCount;\n  } else if (slideIndex > slideCount - 1) {\n    slideIndex -= slideCount;\n  }\n\n  if (endSlideIndex < 0) {\n    endSlideIndex += slideCount;\n  } else if (endSlideIndex > slideCount - 1) {\n    endSlideIndex -= slideCount;\n  }\n\n  return [slideIndex, endSlideIndex];\n};\n\nexports.getIndexes = getIndexes;\n\nconst isSlideVisible = (currentSlide, indexToCheck, slidesToShow, cellAlign) => {\n  // The addition or subtraction of constants (1 , 0.5) in the following\n  // calculations are accounting for the fact that a slide will be visible even\n  // after the position associated with its index is off-screen. For example,\n  // with cellAlign=\"left\", slidesToShow=1 and indexToCheck=0,\n  // if the currentSlide is set to 0.99, both (a sliver of) slide 0 and slide 1\n  // will be visible at the same time, even though the position we associate\n  // with index 0, its leftmost edge, is off-screen.\n  if (cellAlign === types_1.Alignment.Left) {\n    return indexToCheck < currentSlide + slidesToShow && indexToCheck > currentSlide - 1;\n  }\n\n  if (cellAlign === types_1.Alignment.Center) {\n    return indexToCheck > currentSlide - slidesToShow / 2 - 0.5 && indexToCheck <= currentSlide || indexToCheck > currentSlide && indexToCheck < currentSlide + slidesToShow / 2 + 0.5;\n  }\n\n  if (cellAlign === types_1.Alignment.Right) {\n    return indexToCheck < currentSlide + 1 && indexToCheck > currentSlide - slidesToShow;\n  }\n\n  return false;\n};\n\nexports.isSlideVisible = isSlideVisible;\n\nconst getNextMoveIndex = (scrollMode, wrapAround, currentSlide, slideCount, slidesToScroll, slidesToShow, cellAlign) => {\n  if (wrapAround) {\n    return currentSlide + slidesToScroll;\n  } // Quit early if we're already as far right as we can go\n\n\n  if (currentSlide >= slideCount - 1 || cellAlign === types_1.Alignment.Left && currentSlide >= slideCount - slidesToShow) {\n    return currentSlide;\n  }\n\n  if (scrollMode === types_1.ScrollMode.remainder && cellAlign === types_1.Alignment.Left) {\n    return Math.min(currentSlide + slidesToScroll, slideCount - slidesToShow);\n  }\n\n  return Math.min(currentSlide + slidesToScroll, slideCount - 1);\n};\n\nexports.getNextMoveIndex = getNextMoveIndex;\n\nconst getPrevMoveIndex = (scrollMode, wrapAround, currentSlide, slidesToScroll, slidesToShow, cellAlign) => {\n  if (wrapAround) {\n    return currentSlide - slidesToScroll;\n  } // Quit early if we're already as far left as we can go\n\n\n  if (currentSlide <= 0 || cellAlign === types_1.Alignment.Right && currentSlide <= slidesToShow - 1) {\n    return currentSlide;\n  }\n\n  if (scrollMode === types_1.ScrollMode.remainder && cellAlign === types_1.Alignment.Right) {\n    return Math.max(currentSlide - slidesToScroll, slidesToShow - 1);\n  }\n\n  return Math.max(currentSlide - slidesToScroll, 0);\n};\n\nexports.getPrevMoveIndex = getPrevMoveIndex;\n\nconst getDefaultSlideIndex = (slideIndex, slideCount, slidesToShow, slidesToScroll, cellAlign, autoplayReverse, scrollMode) => {\n  if (slideIndex !== undefined) {\n    return slideIndex;\n  }\n\n  const dotIndexes = (0, default_controls_1.getDotIndexes)(slideCount, slidesToScroll, scrollMode, slidesToShow, false, cellAlign);\n  return autoplayReverse ? dotIndexes[dotIndexes.length - 1] : dotIndexes[0];\n};\n\nexports.getDefaultSlideIndex = getDefaultSlideIndex;","map":{"version":3,"mappings":"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","names":["getIndexes","slide","endSlide","slideCount","slideIndex","endSlideIndex","exports","isSlideVisible","currentSlide","indexToCheck","slidesToShow","cellAlign","types_1","Left","Center","Right","getNextMoveIndex","scrollMode","wrapAround","slidesToScroll","remainder","Math","min","getPrevMoveIndex","max","getDefaultSlideIndex","autoplayReverse","undefined","dotIndexes","length"],"sources":["../src/utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}