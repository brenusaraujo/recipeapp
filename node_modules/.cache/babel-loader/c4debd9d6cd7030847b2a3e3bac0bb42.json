{"ast":null,"code":"'use strict';\n\nconst fs = require('graceful-fs');\n\nconst path = require('path');\n\nconst mkdirs = require('../mkdirs').mkdirs;\n\nconst pathExists = require('../path-exists').pathExists;\n\nconst utimesMillis = require('../util/utimes').utimesMillis;\n\nconst stat = require('../util/stat');\n\nfunction copy(src, dest, opts, cb) {\n  if (typeof opts === 'function' && !cb) {\n    cb = opts;\n    opts = {};\n  } else if (typeof opts === 'function') {\n    opts = {\n      filter: opts\n    };\n  }\n\n  cb = cb || function () {};\n\n  opts = opts || {};\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true; // default to true for now\n\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber; // overwrite falls back to clobber\n  // Warn about using preserveTimestamps on 32-bit node\n\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\n    see https://github.com/jprichardson/node-fs-extra/issues/269`);\n  }\n\n  stat.checkPaths(src, dest, 'copy', (err, stats) => {\n    if (err) return cb(err);\n    const {\n      srcStat,\n      destStat\n    } = stats;\n    stat.checkParentPaths(src, srcStat, dest, 'copy', err => {\n      if (err) return cb(err);\n      if (opts.filter) return handleFilter(checkParentDir, destStat, src, dest, opts, cb);\n      return checkParentDir(destStat, src, dest, opts, cb);\n    });\n  });\n}\n\nfunction checkParentDir(destStat, src, dest, opts, cb) {\n  const destParent = path.dirname(dest);\n  pathExists(destParent, (err, dirExists) => {\n    if (err) return cb(err);\n    if (dirExists) return startCopy(destStat, src, dest, opts, cb);\n    mkdirs(destParent, err => {\n      if (err) return cb(err);\n      return startCopy(destStat, src, dest, opts, cb);\n    });\n  });\n}\n\nfunction handleFilter(onInclude, destStat, src, dest, opts, cb) {\n  Promise.resolve(opts.filter(src, dest)).then(include => {\n    if (include) return onInclude(destStat, src, dest, opts, cb);\n    return cb();\n  }, error => cb(error));\n}\n\nfunction startCopy(destStat, src, dest, opts, cb) {\n  if (opts.filter) return handleFilter(getStats, destStat, src, dest, opts, cb);\n  return getStats(destStat, src, dest, opts, cb);\n}\n\nfunction getStats(destStat, src, dest, opts, cb) {\n  const stat = opts.dereference ? fs.stat : fs.lstat;\n  stat(src, (err, srcStat) => {\n    if (err) return cb(err);\n    if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts, cb);else if (srcStat.isFile() || srcStat.isCharacterDevice() || srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts, cb);else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts, cb);\n  });\n}\n\nfunction onFile(srcStat, destStat, src, dest, opts, cb) {\n  if (!destStat) return copyFile(srcStat, src, dest, opts, cb);\n  return mayCopyFile(srcStat, src, dest, opts, cb);\n}\n\nfunction mayCopyFile(srcStat, src, dest, opts, cb) {\n  if (opts.overwrite) {\n    fs.unlink(dest, err => {\n      if (err) return cb(err);\n      return copyFile(srcStat, src, dest, opts, cb);\n    });\n  } else if (opts.errorOnExist) {\n    return cb(new Error(`'${dest}' already exists`));\n  } else return cb();\n}\n\nfunction copyFile(srcStat, src, dest, opts, cb) {\n  fs.copyFile(src, dest, err => {\n    if (err) return cb(err);\n    if (opts.preserveTimestamps) return handleTimestampsAndMode(srcStat.mode, src, dest, cb);\n    return setDestMode(dest, srcStat.mode, cb);\n  });\n}\n\nfunction handleTimestampsAndMode(srcMode, src, dest, cb) {\n  // Make sure the file is writable before setting the timestamp\n  // otherwise open fails with EPERM when invoked with 'r+'\n  // (through utimes call)\n  if (fileIsNotWritable(srcMode)) {\n    return makeFileWritable(dest, srcMode, err => {\n      if (err) return cb(err);\n      return setDestTimestampsAndMode(srcMode, src, dest, cb);\n    });\n  }\n\n  return setDestTimestampsAndMode(srcMode, src, dest, cb);\n}\n\nfunction fileIsNotWritable(srcMode) {\n  return (srcMode & 0o200) === 0;\n}\n\nfunction makeFileWritable(dest, srcMode, cb) {\n  return setDestMode(dest, srcMode | 0o200, cb);\n}\n\nfunction setDestTimestampsAndMode(srcMode, src, dest, cb) {\n  setDestTimestamps(src, dest, err => {\n    if (err) return cb(err);\n    return setDestMode(dest, srcMode, cb);\n  });\n}\n\nfunction setDestMode(dest, srcMode, cb) {\n  return fs.chmod(dest, srcMode, cb);\n}\n\nfunction setDestTimestamps(src, dest, cb) {\n  // The initial srcStat.atime cannot be trusted\n  // because it is modified by the read(2) system call\n  // (See https://nodejs.org/api/fs.html#fs_stat_time_values)\n  fs.stat(src, (err, updatedSrcStat) => {\n    if (err) return cb(err);\n    return utimesMillis(dest, updatedSrcStat.atime, updatedSrcStat.mtime, cb);\n  });\n}\n\nfunction onDir(srcStat, destStat, src, dest, opts, cb) {\n  if (!destStat) return mkDirAndCopy(srcStat.mode, src, dest, opts, cb);\n\n  if (destStat && !destStat.isDirectory()) {\n    return cb(new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`));\n  }\n\n  return copyDir(src, dest, opts, cb);\n}\n\nfunction mkDirAndCopy(srcMode, src, dest, opts, cb) {\n  fs.mkdir(dest, err => {\n    if (err) return cb(err);\n    copyDir(src, dest, opts, err => {\n      if (err) return cb(err);\n      return setDestMode(dest, srcMode, cb);\n    });\n  });\n}\n\nfunction copyDir(src, dest, opts, cb) {\n  fs.readdir(src, (err, items) => {\n    if (err) return cb(err);\n    return copyDirItems(items, src, dest, opts, cb);\n  });\n}\n\nfunction copyDirItems(items, src, dest, opts, cb) {\n  const item = items.pop();\n  if (!item) return cb();\n  return copyDirItem(items, item, src, dest, opts, cb);\n}\n\nfunction copyDirItem(items, item, src, dest, opts, cb) {\n  const srcItem = path.join(src, item);\n  const destItem = path.join(dest, item);\n  stat.checkPaths(srcItem, destItem, 'copy', (err, stats) => {\n    if (err) return cb(err);\n    const {\n      destStat\n    } = stats;\n    startCopy(destStat, srcItem, destItem, opts, err => {\n      if (err) return cb(err);\n      return copyDirItems(items, src, dest, opts, cb);\n    });\n  });\n}\n\nfunction onLink(destStat, src, dest, opts, cb) {\n  fs.readlink(src, (err, resolvedSrc) => {\n    if (err) return cb(err);\n\n    if (opts.dereference) {\n      resolvedSrc = path.resolve(process.cwd(), resolvedSrc);\n    }\n\n    if (!destStat) {\n      return fs.symlink(resolvedSrc, dest, cb);\n    } else {\n      fs.readlink(dest, (err, resolvedDest) => {\n        if (err) {\n          // dest exists and is a regular file or directory,\n          // Windows may throw UNKNOWN error. If dest already exists,\n          // fs throws error anyway, so no need to guard against it here.\n          if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlink(resolvedSrc, dest, cb);\n          return cb(err);\n        }\n\n        if (opts.dereference) {\n          resolvedDest = path.resolve(process.cwd(), resolvedDest);\n        }\n\n        if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {\n          return cb(new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`));\n        } // do not copy if src is a subdir of dest since unlinking\n        // dest in this case would result in removing src contents\n        // and therefore a broken symlink would be created.\n\n\n        if (destStat.isDirectory() && stat.isSrcSubdir(resolvedDest, resolvedSrc)) {\n          return cb(new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`));\n        }\n\n        return copyLink(resolvedSrc, dest, cb);\n      });\n    }\n  });\n}\n\nfunction copyLink(resolvedSrc, dest, cb) {\n  fs.unlink(dest, err => {\n    if (err) return cb(err);\n    return fs.symlink(resolvedSrc, dest, cb);\n  });\n}\n\nmodule.exports = copy;","map":{"version":3,"names":["fs","require","path","mkdirs","pathExists","utimesMillis","stat","copy","src","dest","opts","cb","filter","clobber","overwrite","preserveTimestamps","process","arch","console","warn","checkPaths","err","stats","srcStat","destStat","checkParentPaths","handleFilter","checkParentDir","destParent","dirname","dirExists","startCopy","onInclude","Promise","resolve","then","include","error","getStats","dereference","lstat","isDirectory","onDir","isFile","isCharacterDevice","isBlockDevice","onFile","isSymbolicLink","onLink","copyFile","mayCopyFile","unlink","errorOnExist","Error","handleTimestampsAndMode","mode","setDestMode","srcMode","fileIsNotWritable","makeFileWritable","setDestTimestampsAndMode","setDestTimestamps","chmod","updatedSrcStat","atime","mtime","mkDirAndCopy","copyDir","mkdir","readdir","items","copyDirItems","item","pop","copyDirItem","srcItem","join","destItem","readlink","resolvedSrc","cwd","symlink","resolvedDest","code","isSrcSubdir","copyLink","module","exports"],"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/node_modules/fs-extra/lib/copy/copy.js"],"sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdirs = require('../mkdirs').mkdirs\nconst pathExists = require('../path-exists').pathExists\nconst utimesMillis = require('../util/utimes').utimesMillis\nconst stat = require('../util/stat')\n\nfunction copy (src, dest, opts, cb) {\n  if (typeof opts === 'function' && !cb) {\n    cb = opts\n    opts = {}\n  } else if (typeof opts === 'function') {\n    opts = { filter: opts }\n  }\n\n  cb = cb || function () {}\n  opts = opts || {}\n\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\n    see https://github.com/jprichardson/node-fs-extra/issues/269`)\n  }\n\n  stat.checkPaths(src, dest, 'copy', (err, stats) => {\n    if (err) return cb(err)\n    const { srcStat, destStat } = stats\n    stat.checkParentPaths(src, srcStat, dest, 'copy', err => {\n      if (err) return cb(err)\n      if (opts.filter) return handleFilter(checkParentDir, destStat, src, dest, opts, cb)\n      return checkParentDir(destStat, src, dest, opts, cb)\n    })\n  })\n}\n\nfunction checkParentDir (destStat, src, dest, opts, cb) {\n  const destParent = path.dirname(dest)\n  pathExists(destParent, (err, dirExists) => {\n    if (err) return cb(err)\n    if (dirExists) return startCopy(destStat, src, dest, opts, cb)\n    mkdirs(destParent, err => {\n      if (err) return cb(err)\n      return startCopy(destStat, src, dest, opts, cb)\n    })\n  })\n}\n\nfunction handleFilter (onInclude, destStat, src, dest, opts, cb) {\n  Promise.resolve(opts.filter(src, dest)).then(include => {\n    if (include) return onInclude(destStat, src, dest, opts, cb)\n    return cb()\n  }, error => cb(error))\n}\n\nfunction startCopy (destStat, src, dest, opts, cb) {\n  if (opts.filter) return handleFilter(getStats, destStat, src, dest, opts, cb)\n  return getStats(destStat, src, dest, opts, cb)\n}\n\nfunction getStats (destStat, src, dest, opts, cb) {\n  const stat = opts.dereference ? fs.stat : fs.lstat\n  stat(src, (err, srcStat) => {\n    if (err) return cb(err)\n\n    if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts, cb)\n    else if (srcStat.isFile() ||\n             srcStat.isCharacterDevice() ||\n             srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts, cb)\n    else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts, cb)\n  })\n}\n\nfunction onFile (srcStat, destStat, src, dest, opts, cb) {\n  if (!destStat) return copyFile(srcStat, src, dest, opts, cb)\n  return mayCopyFile(srcStat, src, dest, opts, cb)\n}\n\nfunction mayCopyFile (srcStat, src, dest, opts, cb) {\n  if (opts.overwrite) {\n    fs.unlink(dest, err => {\n      if (err) return cb(err)\n      return copyFile(srcStat, src, dest, opts, cb)\n    })\n  } else if (opts.errorOnExist) {\n    return cb(new Error(`'${dest}' already exists`))\n  } else return cb()\n}\n\nfunction copyFile (srcStat, src, dest, opts, cb) {\n  fs.copyFile(src, dest, err => {\n    if (err) return cb(err)\n    if (opts.preserveTimestamps) return handleTimestampsAndMode(srcStat.mode, src, dest, cb)\n    return setDestMode(dest, srcStat.mode, cb)\n  })\n}\n\nfunction handleTimestampsAndMode (srcMode, src, dest, cb) {\n  // Make sure the file is writable before setting the timestamp\n  // otherwise open fails with EPERM when invoked with 'r+'\n  // (through utimes call)\n  if (fileIsNotWritable(srcMode)) {\n    return makeFileWritable(dest, srcMode, err => {\n      if (err) return cb(err)\n      return setDestTimestampsAndMode(srcMode, src, dest, cb)\n    })\n  }\n  return setDestTimestampsAndMode(srcMode, src, dest, cb)\n}\n\nfunction fileIsNotWritable (srcMode) {\n  return (srcMode & 0o200) === 0\n}\n\nfunction makeFileWritable (dest, srcMode, cb) {\n  return setDestMode(dest, srcMode | 0o200, cb)\n}\n\nfunction setDestTimestampsAndMode (srcMode, src, dest, cb) {\n  setDestTimestamps(src, dest, err => {\n    if (err) return cb(err)\n    return setDestMode(dest, srcMode, cb)\n  })\n}\n\nfunction setDestMode (dest, srcMode, cb) {\n  return fs.chmod(dest, srcMode, cb)\n}\n\nfunction setDestTimestamps (src, dest, cb) {\n  // The initial srcStat.atime cannot be trusted\n  // because it is modified by the read(2) system call\n  // (See https://nodejs.org/api/fs.html#fs_stat_time_values)\n  fs.stat(src, (err, updatedSrcStat) => {\n    if (err) return cb(err)\n    return utimesMillis(dest, updatedSrcStat.atime, updatedSrcStat.mtime, cb)\n  })\n}\n\nfunction onDir (srcStat, destStat, src, dest, opts, cb) {\n  if (!destStat) return mkDirAndCopy(srcStat.mode, src, dest, opts, cb)\n  if (destStat && !destStat.isDirectory()) {\n    return cb(new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`))\n  }\n  return copyDir(src, dest, opts, cb)\n}\n\nfunction mkDirAndCopy (srcMode, src, dest, opts, cb) {\n  fs.mkdir(dest, err => {\n    if (err) return cb(err)\n    copyDir(src, dest, opts, err => {\n      if (err) return cb(err)\n      return setDestMode(dest, srcMode, cb)\n    })\n  })\n}\n\nfunction copyDir (src, dest, opts, cb) {\n  fs.readdir(src, (err, items) => {\n    if (err) return cb(err)\n    return copyDirItems(items, src, dest, opts, cb)\n  })\n}\n\nfunction copyDirItems (items, src, dest, opts, cb) {\n  const item = items.pop()\n  if (!item) return cb()\n  return copyDirItem(items, item, src, dest, opts, cb)\n}\n\nfunction copyDirItem (items, item, src, dest, opts, cb) {\n  const srcItem = path.join(src, item)\n  const destItem = path.join(dest, item)\n  stat.checkPaths(srcItem, destItem, 'copy', (err, stats) => {\n    if (err) return cb(err)\n    const { destStat } = stats\n    startCopy(destStat, srcItem, destItem, opts, err => {\n      if (err) return cb(err)\n      return copyDirItems(items, src, dest, opts, cb)\n    })\n  })\n}\n\nfunction onLink (destStat, src, dest, opts, cb) {\n  fs.readlink(src, (err, resolvedSrc) => {\n    if (err) return cb(err)\n    if (opts.dereference) {\n      resolvedSrc = path.resolve(process.cwd(), resolvedSrc)\n    }\n\n    if (!destStat) {\n      return fs.symlink(resolvedSrc, dest, cb)\n    } else {\n      fs.readlink(dest, (err, resolvedDest) => {\n        if (err) {\n          // dest exists and is a regular file or directory,\n          // Windows may throw UNKNOWN error. If dest already exists,\n          // fs throws error anyway, so no need to guard against it here.\n          if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlink(resolvedSrc, dest, cb)\n          return cb(err)\n        }\n        if (opts.dereference) {\n          resolvedDest = path.resolve(process.cwd(), resolvedDest)\n        }\n        if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {\n          return cb(new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`))\n        }\n\n        // do not copy if src is a subdir of dest since unlinking\n        // dest in this case would result in removing src contents\n        // and therefore a broken symlink would be created.\n        if (destStat.isDirectory() && stat.isSrcSubdir(resolvedDest, resolvedSrc)) {\n          return cb(new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`))\n        }\n        return copyLink(resolvedSrc, dest, cb)\n      })\n    }\n  })\n}\n\nfunction copyLink (resolvedSrc, dest, cb) {\n  fs.unlink(dest, err => {\n    if (err) return cb(err)\n    return fs.symlink(resolvedSrc, dest, cb)\n  })\n}\n\nmodule.exports = copy\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}