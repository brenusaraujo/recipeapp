{"ast":null,"code":"/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n */\n\"use strict\";\n/**\n * Check whether a given character is a combining mark or not.\n * @param {number} codePoint The character code to check.\n * @returns {boolean} `true` if the character belongs to the category, any of `Mc`, `Me`, and `Mn`.\n */\n\nmodule.exports = function isCombiningCharacter(codePoint) {\n  return /^[\\p{Mc}\\p{Me}\\p{Mn}]$/u.test(String.fromCodePoint(codePoint));\n};","map":{"version":3,"names":["module","exports","isCombiningCharacter","codePoint","test","String","fromCodePoint"],"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/node_modules/eslint/lib/rules/utils/unicode/is-combining-character.js"],"sourcesContent":["/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n */\n\"use strict\";\n\n/**\n * Check whether a given character is a combining mark or not.\n * @param {number} codePoint The character code to check.\n * @returns {boolean} `true` if the character belongs to the category, any of `Mc`, `Me`, and `Mn`.\n */\nmodule.exports = function isCombiningCharacter(codePoint) {\n    return /^[\\p{Mc}\\p{Me}\\p{Mn}]$/u.test(String.fromCodePoint(codePoint));\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,oBAAT,CAA8BC,SAA9B,EAAyC;EACtD,OAAO,0BAA0BC,IAA1B,CAA+BC,MAAM,CAACC,aAAP,CAAqBH,SAArB,CAA/B,CAAP;AACH,CAFD"},"metadata":{},"sourceType":"script"}