{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\n\nconst react_1 = require(\"react\");\n\nconst control_styles_1 = require(\"./control-styles\");\n\nconst types_1 = require(\"./types\");\n\nconst controlsMap = [{\n  funcName: 'renderTopLeftControls',\n  key: types_1.Positions.TopLeft\n}, {\n  funcName: 'renderTopCenterControls',\n  key: types_1.Positions.TopCenter\n}, {\n  funcName: 'renderTopRightControls',\n  key: types_1.Positions.TopRight\n}, {\n  funcName: 'renderCenterLeftControls',\n  key: types_1.Positions.CenterLeft\n}, {\n  funcName: 'renderCenterCenterControls',\n  key: types_1.Positions.CenterCenter\n}, {\n  funcName: 'renderCenterRightControls',\n  key: types_1.Positions.CenterRight\n}, {\n  funcName: 'renderBottomLeftControls',\n  key: types_1.Positions.BottomLeft\n}, {\n  funcName: 'renderBottomCenterControls',\n  key: types_1.Positions.BottomCenter\n}, {\n  funcName: 'renderBottomRightControls',\n  key: types_1.Positions.BottomRight\n}];\n\nconst renderControls = (props, slideCount, currentSlide, goToSlide, nextSlide, prevSlide, slidesToScroll) => {\n  if (props.withoutControls) {\n    return null;\n  }\n\n  return controlsMap.map(control => {\n    var _a;\n\n    if (!props[control.funcName] || typeof props[control.funcName] !== 'function') {\n      return (0, jsx_runtime_1.jsx)(react_1.Fragment, {}, control.funcName);\n    }\n\n    return (0, jsx_runtime_1.jsx)(\"div\", Object.assign({\n      style: Object.assign(Object.assign({}, (0, control_styles_1.getControlContainerStyles)(control.key)), {\n        pointerEvents: 'none'\n      })\n    }, {\n      children: (0, jsx_runtime_1.jsx)(\"div\", Object.assign({\n        className: [`slider-control-${control.key.toLowerCase()}`, props.defaultControlsConfig.containerClassName || ''].join(' ').trim(),\n        // The container has `pointerEvents: 'none'` so we need to override\n        // that to make sure the controls are clickable.\n        style: {\n          pointerEvents: 'auto'\n        }\n      }, {\n        children: (_a = props[control.funcName]) === null || _a === void 0 ? void 0 : _a.call(props, {\n          cellAlign: props.cellAlign,\n          cellSpacing: props.cellSpacing,\n          currentSlide,\n          defaultControlsConfig: props.defaultControlsConfig || {},\n          goToSlide,\n          nextSlide,\n          previousSlide: prevSlide,\n          scrollMode: props.scrollMode,\n          slideCount,\n          slidesToScroll,\n          slidesToShow: props.slidesToShow || 1,\n          vertical: props.vertical,\n          wrapAround: props.wrapAround\n        })\n      }))\n    }), control.funcName);\n  });\n};\n\nexports.default = renderControls;","map":{"version":3,"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AAOA,MAAMA,WAAW,GAAe,CAC9B;EAAEC,QAAQ,EAAE,uBAAZ;EAAqCC,GAAG,EAAEC,kBAAUC;AAApD,CAD8B,EAE9B;EAAEH,QAAQ,EAAE,yBAAZ;EAAuCC,GAAG,EAAEC,kBAAUE;AAAtD,CAF8B,EAG9B;EAAEJ,QAAQ,EAAE,wBAAZ;EAAsCC,GAAG,EAAEC,kBAAUG;AAArD,CAH8B,EAI9B;EAAEL,QAAQ,EAAE,0BAAZ;EAAwCC,GAAG,EAAEC,kBAAUI;AAAvD,CAJ8B,EAK9B;EAAEN,QAAQ,EAAE,4BAAZ;EAA0CC,GAAG,EAAEC,kBAAUK;AAAzD,CAL8B,EAM9B;EAAEP,QAAQ,EAAE,2BAAZ;EAAyCC,GAAG,EAAEC,kBAAUM;AAAxD,CAN8B,EAO9B;EAAER,QAAQ,EAAE,0BAAZ;EAAwCC,GAAG,EAAEC,kBAAUO;AAAvD,CAP8B,EAQ9B;EAAET,QAAQ,EAAE,4BAAZ;EAA0CC,GAAG,EAAEC,kBAAUQ;AAAzD,CAR8B,EAS9B;EAAEV,QAAQ,EAAE,2BAAZ;EAAyCC,GAAG,EAAEC,kBAAUS;AAAxD,CAT8B,CAAhC;;AAYA,MAAMC,cAAc,GAAG,CACrBC,KADqB,EAErBC,UAFqB,EAGrBC,YAHqB,EAIrBC,SAJqB,EAKrBC,SALqB,EAMrBC,SANqB,EAOrBC,cAPqB,KAQU;EAC/B,IAAIN,KAAK,CAACO,eAAV,EAA2B;IACzB,OAAO,IAAP;EACD;;EACD,OAAOrB,WAAW,CAACsB,GAAZ,CAAiBC,OAAD,IAAY;;;IACjC,IACE,CAACT,KAAK,CAACS,OAAO,CAACtB,QAAT,CAAN,IACA,OAAOa,KAAK,CAACS,OAAO,CAACtB,QAAT,CAAZ,KAAmC,UAFrC,EAGE;MACA,OAAO,uBAACuB,gBAAD,EAAS,EAAT,EAAeD,OAAO,CAACtB,QAAvB,CAAP;IACD;;IACD,OACE;MAEEwB,KAAK,kCACA,gDAA0BF,OAAO,CAACrB,GAAlC,CADA,GACsC;QACzCwB,aAAa,EAAE;MAD0B,CADtC;IAFP,GAIyB;MAAAC,UAGvB;QACEC,SAAS,EAAE,CACT,kBAAkBL,OAAO,CAACrB,GAAR,CAAY2B,WAAZ,EAAyB,EADlC,EAETf,KAAK,CAACgB,qBAAN,CAA4BC,kBAA5B,IAAkD,EAFzC,EAIRC,IAJQ,CAIH,GAJG,EAKRC,IALQ,EADb;QAOE;QACA;QACAR,KAAK,EAAE;UAAEC,aAAa,EAAE;QAAjB;MATT,GASkC;QAAAC,UAE/B,WAAK,CAACJ,OAAO,CAACtB,QAAT,CAAL,MAAuB,IAAvB,IAAuBiC,aAAvB,GAAuB,MAAvB,GAAuBA,eAAG;UACzBC,SAAS,EAAErB,KAAK,CAACqB,SADQ;UAEzBC,WAAW,EAAEtB,KAAK,CAACsB,WAFM;UAGzBpB,YAHyB;UAIzBc,qBAAqB,EAAEhB,KAAK,CAACgB,qBAAN,IAA+B,EAJ7B;UAKzBb,SALyB;UAMzBC,SANyB;UAOzBmB,aAAa,EAAElB,SAPU;UAQzBmB,UAAU,EAAExB,KAAK,CAACwB,UARO;UASzBvB,UATyB;UAUzBK,cAVyB;UAWzBmB,YAAY,EAAEzB,KAAK,CAACyB,YAAN,IAAsB,CAXX;UAYzBC,QAAQ,EAAE1B,KAAK,CAAC0B,QAZS;UAazBC,UAAU,EAAE3B,KAAK,CAAC2B;QAbO,CAAH;MAFQ,CATlC;IAHuB,CAJzB,GACOlB,OAAO,CAACtB,QADf,CADF;EAqCD,CA5CM,CAAP;AA6CD,CAzDD;;AA2DAyC,kBAAe7B,cAAf","names":["controlsMap","funcName","key","types_1","TopLeft","TopCenter","TopRight","CenterLeft","CenterCenter","CenterRight","BottomLeft","BottomCenter","BottomRight","renderControls","props","slideCount","currentSlide","goToSlide","nextSlide","prevSlide","slidesToScroll","withoutControls","map","control","react_1","style","pointerEvents","children","className","toLowerCase","defaultControlsConfig","containerClassName","join","trim","_a","cellAlign","cellSpacing","previousSlide","scrollMode","slidesToShow","vertical","wrapAround","exports"],"sources":["../src/controls.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}