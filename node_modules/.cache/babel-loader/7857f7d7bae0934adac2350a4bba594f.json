{"ast":null,"code":"var _jsxFileName = \"/Users/brenoaraujo/projects-to-github/RecipeApp/src/components/ShareButton.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport shareIcon from \"../images/shareIcon.svg\";\nconst copy = require('clipboard-copy');\nfunction ShareButton(_ref) {\n  let {\n    setIsCopied,\n    textToCopy,\n    isCopied\n  } = _ref;\n  const handleShare = async text => {\n    await copy(text);\n    setIsCopied(true);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"details__share\",\n    type: \"button\",\n    \"data-testid\": \"share-btn\",\n    onClick: () => handleShare(textToCopy),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"details__icon\",\n    src: shareIcon,\n    alt: \"share\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })), isCopied && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 20\n    }\n  }, \"Link copiado!\"));\n}\nShareButton.propTypes = {\n  textToCopy: PropTypes.string.isRequired,\n  setIsCopied: PropTypes.func.isRequired,\n  isCopied: PropTypes.bool.isRequired\n};\nexport default ShareButton;","map":{"version":3,"names":["React","PropTypes","copy","require","ShareButton","setIsCopied","textToCopy","isCopied","handleShare","text","shareIcon","propTypes","string","isRequired","func","bool"],"sources":["/Users/brenoaraujo/projects-to-github/RecipeApp/src/components/ShareButton.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport shareIcon from '../images/shareIcon.svg';\n\nconst copy = require('clipboard-copy');\n\nfunction ShareButton({ setIsCopied, textToCopy, isCopied }) {\n  const handleShare = async (text) => {\n    await copy(text);\n    setIsCopied(true);\n  };\n  return (\n    <>\n      <button\n        className=\"details__share\"\n        type=\"button\"\n        data-testid=\"share-btn\"\n        onClick={ () => handleShare(textToCopy) }\n      >\n        <img className=\"details__icon\" src={ shareIcon } alt=\"share\" />\n      </button>\n      {isCopied && <p className=\"link\">Link copiado!</p>}\n    </>\n  );\n}\n\nShareButton.propTypes = {\n  textToCopy: PropTypes.string.isRequired,\n  setIsCopied: PropTypes.func.isRequired,\n  isCopied: PropTypes.bool.isRequired,\n};\n\nexport default ShareButton;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAAC;AAGnC,MAAMC,IAAI,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAEtC,SAASC,WAAW,OAAwC;EAAA,IAAvC;IAAEC,WAAW;IAAEC,UAAU;IAAEC;EAAS,CAAC;EACxD,MAAMC,WAAW,GAAG,MAAOC,IAAI,IAAK;IAClC,MAAMP,IAAI,CAACO,IAAI,CAAC;IAChBJ,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EACD,oBACE,uDACE;IACE,SAAS,EAAC,gBAAgB;IAC1B,IAAI,EAAC,QAAQ;IACb,eAAY,WAAW;IACvB,OAAO,EAAG,MAAMG,WAAW,CAACF,UAAU,CAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEzC;IAAK,SAAS,EAAC,eAAe;IAAC,GAAG,EAAGI,SAAW;IAAC,GAAG,EAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACxD,EACRH,QAAQ,iBAAI;IAAG,SAAS,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBAAkB,CACjD;AAEP;AAEAH,WAAW,CAACO,SAAS,GAAG;EACtBL,UAAU,EAAEL,SAAS,CAACW,MAAM,CAACC,UAAU;EACvCR,WAAW,EAAEJ,SAAS,CAACa,IAAI,CAACD,UAAU;EACtCN,QAAQ,EAAEN,SAAS,CAACc,IAAI,CAACF;AAC3B,CAAC;AAED,eAAeT,WAAW"},"metadata":{},"sourceType":"module"}