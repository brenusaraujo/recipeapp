{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\n\nconst react_1 = require(\"react\");\n\nconst control_styles_1 = require(\"./control-styles\");\n\nconst default_controls_1 = require(\"./default-controls\");\n\nconst types_1 = require(\"./types\");\n\nconst controlsMap = [{\n  funcName: 'renderTopLeftControls',\n  key: types_1.Positions.TopLeft\n}, {\n  funcName: 'renderTopCenterControls',\n  key: types_1.Positions.TopCenter\n}, {\n  funcName: 'renderTopRightControls',\n  key: types_1.Positions.TopRight\n}, {\n  funcName: 'renderCenterLeftControls',\n  key: types_1.Positions.CenterLeft\n}, {\n  funcName: 'renderCenterCenterControls',\n  key: types_1.Positions.CenterCenter\n}, {\n  funcName: 'renderCenterRightControls',\n  key: types_1.Positions.CenterRight\n}, {\n  funcName: 'renderBottomLeftControls',\n  key: types_1.Positions.BottomLeft\n}, {\n  funcName: 'renderBottomCenterControls',\n  key: types_1.Positions.BottomCenter\n}, {\n  funcName: 'renderBottomRightControls',\n  key: types_1.Positions.BottomRight\n}];\n\nconst renderControls = (props, slideCount, currentSlide, goToSlide, nextSlide, prevSlide, slidesToScroll) => {\n  if (props.withoutControls) {\n    return null;\n  }\n\n  const disableCheckProps = Object.assign(Object.assign({}, props), {\n    currentSlide,\n    slideCount\n  });\n  const nextDisabled = (0, default_controls_1.nextButtonDisabled)(disableCheckProps);\n  const previousDisabled = (0, default_controls_1.prevButtonDisabled)(disableCheckProps);\n  const pagingDotsIndices = (0, default_controls_1.getDotIndexes)(slideCount, slidesToScroll, props.scrollMode, props.slidesToShow, props.wrapAround, props.cellAlign);\n  return controlsMap.map(control => {\n    var _a;\n\n    if (!props[control.funcName] || typeof props[control.funcName] !== 'function') {\n      return (0, jsx_runtime_1.jsx)(react_1.Fragment, {}, control.funcName);\n    }\n\n    return (0, jsx_runtime_1.jsx)(\"div\", Object.assign({\n      style: Object.assign(Object.assign({}, (0, control_styles_1.getControlContainerStyles)(control.key)), {\n        pointerEvents: 'none'\n      })\n    }, {\n      children: (0, jsx_runtime_1.jsx)(\"div\", Object.assign({\n        className: [`slider-control-${control.key.toLowerCase()}`, props.defaultControlsConfig.containerClassName || ''].join(' ').trim(),\n        // The container has `pointerEvents: 'none'` so we need to override\n        // that to make sure the controls are clickable.\n        style: {\n          pointerEvents: 'auto'\n        }\n      }, {\n        children: (_a = props[control.funcName]) === null || _a === void 0 ? void 0 : _a.call(props, {\n          cellAlign: props.cellAlign,\n          cellSpacing: props.cellSpacing,\n          currentSlide,\n          defaultControlsConfig: props.defaultControlsConfig || {},\n          pagingDotsIndices,\n          goToSlide,\n          nextDisabled,\n          nextSlide,\n          onUserNavigation: props.onUserNavigation,\n          previousDisabled,\n          previousSlide: prevSlide,\n          scrollMode: props.scrollMode,\n          slideCount,\n          slidesToScroll,\n          slidesToShow: props.slidesToShow || 1,\n          vertical: props.vertical,\n          wrapAround: props.wrapAround\n        })\n      }))\n    }), control.funcName);\n  });\n};\n\nexports.default = renderControls;","map":{"version":3,"sources":["../src/controls.tsx"],"names":[],"mappings":";;;;;;;;AAAA,MAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,MAAA,gBAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,MAAA,kBAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAKA,MAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAOA,MAAM,WAAW,GAAe,CAC9B;EAAE,QAAQ,EAAE,uBAAZ;EAAqC,GAAG,EAAE,OAAA,CAAA,SAAA,CAAU;AAApD,CAD8B,EAE9B;EAAE,QAAQ,EAAE,yBAAZ;EAAuC,GAAG,EAAE,OAAA,CAAA,SAAA,CAAU;AAAtD,CAF8B,EAG9B;EAAE,QAAQ,EAAE,wBAAZ;EAAsC,GAAG,EAAE,OAAA,CAAA,SAAA,CAAU;AAArD,CAH8B,EAI9B;EAAE,QAAQ,EAAE,0BAAZ;EAAwC,GAAG,EAAE,OAAA,CAAA,SAAA,CAAU;AAAvD,CAJ8B,EAK9B;EAAE,QAAQ,EAAE,4BAAZ;EAA0C,GAAG,EAAE,OAAA,CAAA,SAAA,CAAU;AAAzD,CAL8B,EAM9B;EAAE,QAAQ,EAAE,2BAAZ;EAAyC,GAAG,EAAE,OAAA,CAAA,SAAA,CAAU;AAAxD,CAN8B,EAO9B;EAAE,QAAQ,EAAE,0BAAZ;EAAwC,GAAG,EAAE,OAAA,CAAA,SAAA,CAAU;AAAvD,CAP8B,EAQ9B;EAAE,QAAQ,EAAE,4BAAZ;EAA0C,GAAG,EAAE,OAAA,CAAA,SAAA,CAAU;AAAzD,CAR8B,EAS9B;EAAE,QAAQ,EAAE,2BAAZ;EAAyC,GAAG,EAAE,OAAA,CAAA,SAAA,CAAU;AAAxD,CAT8B,CAAhC;;AAYA,MAAM,cAAc,GAAG,CACrB,KADqB,EAErB,UAFqB,EAGrB,YAHqB,EAIrB,SAJqB,EAKrB,SALqB,EAMrB,SANqB,EAOrB,cAPqB,KAQU;EAC/B,IAAI,KAAK,CAAC,eAAV,EAA2B;IACzB,OAAO,IAAP;EACD;;EAED,MAAM,iBAAiB,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAClB,KADkB,CAAA,EACb;IACR,YADQ;IAER;EAFQ,CADa,CAAvB;EAKA,MAAM,YAAY,GAAG,CAAA,GAAA,kBAAA,CAAA,kBAAA,EAAmB,iBAAnB,CAArB;EACA,MAAM,gBAAgB,GAAG,CAAA,GAAA,kBAAA,CAAA,kBAAA,EAAmB,iBAAnB,CAAzB;EACA,MAAM,iBAAiB,GAAG,CAAA,GAAA,kBAAA,CAAA,aAAA,EACxB,UADwB,EAExB,cAFwB,EAGxB,KAAK,CAAC,UAHkB,EAIxB,KAAK,CAAC,YAJkB,EAKxB,KAAK,CAAC,UALkB,EAMxB,KAAK,CAAC,SANkB,CAA1B;EASA,OAAO,WAAW,CAAC,GAAZ,CAAiB,OAAD,IAAY;;;IACjC,IACE,CAAC,KAAK,CAAC,OAAO,CAAC,QAAT,CAAN,IACA,OAAO,KAAK,CAAC,OAAO,CAAC,QAAT,CAAZ,KAAmC,UAFrC,EAGE;MACA,OAAO,CAAA,GAAA,aAAA,CAAA,GAAA,EAAC,OAAA,CAAA,QAAD,EAAS,EAAT,EAAe,OAAO,CAAC,QAAvB,CAAP;IACD;;IACD,OACE,CAAA,GAAA,aAAA,CAAA,GAAA,EAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;MAEE,KAAK,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACA,CAAA,GAAA,gBAAA,CAAA,yBAAA,EAA0B,OAAO,CAAC,GAAlC,CADA,CAAA,EACsC;QACzC,aAAa,EAAE;MAD0B,CADtC;IAFP,CAAA,EAIyB;MAAA,QAAA,EAGvB,CAAA,GAAA,aAAA,CAAA,GAAA,EAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;QACE,SAAS,EAAE,CACT,kBAAkB,OAAO,CAAC,GAAR,CAAY,WAAZ,EAAyB,EADlC,EAET,KAAK,CAAC,qBAAN,CAA4B,kBAA5B,IAAkD,EAFzC,EAIR,IAJQ,CAIH,GAJG,EAKR,IALQ,EADb;QAOE;QACA;QACA,KAAK,EAAE;UAAE,aAAa,EAAE;QAAjB;MATT,CAAA,EASkC;QAAA,QAAA,EAE/B,CAAA,EAAA,GAAA,KAAK,CAAC,OAAO,CAAC,QAAT,CAAL,MAAuB,IAAvB,IAAuB,EAAA,KAAA,KAAA,CAAvB,GAAuB,KAAA,CAAvB,GAAuB,EAAA,CAAA,IAAA,CAAA,KAAA,EAAG;UACzB,SAAS,EAAE,KAAK,CAAC,SADQ;UAEzB,WAAW,EAAE,KAAK,CAAC,WAFM;UAGzB,YAHyB;UAIzB,qBAAqB,EAAE,KAAK,CAAC,qBAAN,IAA+B,EAJ7B;UAKzB,iBALyB;UAMzB,SANyB;UAOzB,YAPyB;UAQzB,SARyB;UASzB,gBAAgB,EAAE,KAAK,CAAC,gBATC;UAUzB,gBAVyB;UAWzB,aAAa,EAAE,SAXU;UAYzB,UAAU,EAAE,KAAK,CAAC,UAZO;UAazB,UAbyB;UAczB,cAdyB;UAezB,YAAY,EAAE,KAAK,CAAC,YAAN,IAAsB,CAfX;UAgBzB,QAAQ,EAAE,KAAK,CAAC,QAhBS;UAiBzB,UAAU,EAAE,KAAK,CAAC;QAjBO,CAAH;MAFQ,CATlC,CAAA;IAHuB,CAJzB,CAAA,EACO,OAAO,CAAC,QADf,CADF;EAyCD,CAhDM,CAAP;AAiDD,CA9ED;;AAgFA,OAAA,CAAA,OAAA,GAAe,cAAf","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\nconst react_1 = require(\"react\");\nconst control_styles_1 = require(\"./control-styles\");\nconst default_controls_1 = require(\"./default-controls\");\nconst types_1 = require(\"./types\");\nconst controlsMap = [\n    { funcName: 'renderTopLeftControls', key: types_1.Positions.TopLeft },\n    { funcName: 'renderTopCenterControls', key: types_1.Positions.TopCenter },\n    { funcName: 'renderTopRightControls', key: types_1.Positions.TopRight },\n    { funcName: 'renderCenterLeftControls', key: types_1.Positions.CenterLeft },\n    { funcName: 'renderCenterCenterControls', key: types_1.Positions.CenterCenter },\n    { funcName: 'renderCenterRightControls', key: types_1.Positions.CenterRight },\n    { funcName: 'renderBottomLeftControls', key: types_1.Positions.BottomLeft },\n    { funcName: 'renderBottomCenterControls', key: types_1.Positions.BottomCenter },\n    { funcName: 'renderBottomRightControls', key: types_1.Positions.BottomRight },\n];\nconst renderControls = (props, slideCount, currentSlide, goToSlide, nextSlide, prevSlide, slidesToScroll) => {\n    if (props.withoutControls) {\n        return null;\n    }\n    const disableCheckProps = Object.assign(Object.assign({}, props), { currentSlide,\n        slideCount });\n    const nextDisabled = (0, default_controls_1.nextButtonDisabled)(disableCheckProps);\n    const previousDisabled = (0, default_controls_1.prevButtonDisabled)(disableCheckProps);\n    const pagingDotsIndices = (0, default_controls_1.getDotIndexes)(slideCount, slidesToScroll, props.scrollMode, props.slidesToShow, props.wrapAround, props.cellAlign);\n    return controlsMap.map((control) => {\n        var _a;\n        if (!props[control.funcName] ||\n            typeof props[control.funcName] !== 'function') {\n            return (0, jsx_runtime_1.jsx)(react_1.Fragment, {}, control.funcName);\n        }\n        return ((0, jsx_runtime_1.jsx)(\"div\", Object.assign({ style: Object.assign(Object.assign({}, (0, control_styles_1.getControlContainerStyles)(control.key)), { pointerEvents: 'none' }) }, { children: (0, jsx_runtime_1.jsx)(\"div\", Object.assign({ className: [\n                    `slider-control-${control.key.toLowerCase()}`,\n                    props.defaultControlsConfig.containerClassName || '',\n                ]\n                    .join(' ')\n                    .trim(), \n                // The container has `pointerEvents: 'none'` so we need to override\n                // that to make sure the controls are clickable.\n                style: { pointerEvents: 'auto' } }, { children: (_a = props[control.funcName]) === null || _a === void 0 ? void 0 : _a.call(props, {\n                    cellAlign: props.cellAlign,\n                    cellSpacing: props.cellSpacing,\n                    currentSlide,\n                    defaultControlsConfig: props.defaultControlsConfig || {},\n                    pagingDotsIndices,\n                    goToSlide,\n                    nextDisabled,\n                    nextSlide,\n                    onUserNavigation: props.onUserNavigation,\n                    previousDisabled,\n                    previousSlide: prevSlide,\n                    scrollMode: props.scrollMode,\n                    slideCount,\n                    slidesToScroll,\n                    slidesToShow: props.slidesToShow || 1,\n                    vertical: props.vertical,\n                    wrapAround: props.wrapAround,\n                }) })) }), control.funcName));\n    });\n};\nexports.default = renderControls;\n"]},"metadata":{},"sourceType":"script"}