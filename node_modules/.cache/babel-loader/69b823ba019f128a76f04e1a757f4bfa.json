{"ast":null,"code":"// Generated by LiveScript 1.6.0\n(function () {\n  var reject, special, tokenRegex;\n  reject = require('prelude-ls').reject;\n\n  function consumeOp(tokens, op) {\n    if (tokens[0] === op) {\n      return tokens.shift();\n    } else {\n      throw new Error(\"Expected '\" + op + \"', but got '\" + tokens[0] + \"' instead in \" + JSON.stringify(tokens) + \".\");\n    }\n  }\n\n  function maybeConsumeOp(tokens, op) {\n    if (tokens[0] === op) {\n      return tokens.shift();\n    }\n  }\n\n  function consumeList(tokens, arg$, hasDelimiters) {\n    var open, close, result, untilTest;\n    open = arg$[0], close = arg$[1];\n\n    if (hasDelimiters) {\n      consumeOp(tokens, open);\n    }\n\n    result = [];\n    untilTest = \",\" + (hasDelimiters ? close : '');\n\n    while (tokens.length && hasDelimiters && tokens[0] !== close) {\n      result.push(consumeElement(tokens, untilTest));\n      maybeConsumeOp(tokens, ',');\n    }\n\n    if (hasDelimiters) {\n      consumeOp(tokens, close);\n    }\n\n    return result;\n  }\n\n  function consumeArray(tokens, hasDelimiters) {\n    return consumeList(tokens, ['[', ']'], hasDelimiters);\n  }\n\n  function consumeTuple(tokens, hasDelimiters) {\n    return consumeList(tokens, ['(', ')'], hasDelimiters);\n  }\n\n  function consumeFields(tokens, hasDelimiters) {\n    var result, untilTest, key;\n\n    if (hasDelimiters) {\n      consumeOp(tokens, '{');\n    }\n\n    result = {};\n    untilTest = \",\" + (hasDelimiters ? '}' : '');\n\n    while (tokens.length && (!hasDelimiters || tokens[0] !== '}')) {\n      key = consumeValue(tokens, ':');\n      consumeOp(tokens, ':');\n      result[key] = consumeElement(tokens, untilTest);\n      maybeConsumeOp(tokens, ',');\n    }\n\n    if (hasDelimiters) {\n      consumeOp(tokens, '}');\n    }\n\n    return result;\n  }\n\n  function consumeValue(tokens, untilTest) {\n    var out;\n    untilTest == null && (untilTest = '');\n    out = '';\n\n    while (tokens.length && -1 === untilTest.indexOf(tokens[0])) {\n      out += tokens.shift();\n    }\n\n    return out;\n  }\n\n  function consumeElement(tokens, untilTest) {\n    switch (tokens[0]) {\n      case '[':\n        return consumeArray(tokens, true);\n\n      case '(':\n        return consumeTuple(tokens, true);\n\n      case '{':\n        return consumeFields(tokens, true);\n\n      default:\n        return consumeValue(tokens, untilTest);\n    }\n  }\n\n  function consumeTopLevel(tokens, types, options) {\n    var ref$, type, structure, origTokens, result, finalResult, x$, y$;\n    ref$ = types[0], type = ref$.type, structure = ref$.structure;\n    origTokens = tokens.concat();\n\n    if (!options.explicit && types.length === 1 && (!type && structure || type === 'Array' || type === 'Object')) {\n      result = structure === 'array' || type === 'Array' ? consumeArray(tokens, tokens[0] === '[') : structure === 'tuple' ? consumeTuple(tokens, tokens[0] === '(') : consumeFields(tokens, tokens[0] === '{');\n      finalResult = tokens.length ? consumeElement(structure === 'array' || type === 'Array' ? (x$ = origTokens, x$.unshift('['), x$.push(']'), x$) : (y$ = origTokens, y$.unshift('('), y$.push(')'), y$)) : result;\n    } else {\n      finalResult = consumeElement(tokens);\n    }\n\n    return finalResult;\n  }\n\n  special = /\\[\\]\\(\\)}{:,/.source;\n  tokenRegex = RegExp('(\"(?:\\\\\\\\\"|[^\"])*\")|(\\'(?:\\\\\\\\\\'|[^\\'])*\\')|(/(?:\\\\\\\\/|[^/])*/[a-zA-Z]*)|(#.*#)|([' + special + '])|([^\\\\s' + special + '](?:\\\\s*[^\\\\s' + special + ']+)*)|\\\\s*');\n\n  module.exports = function (types, string, options) {\n    var tokens, node;\n    options == null && (options = {});\n\n    if (!options.explicit && types.length === 1 && types[0].type === 'String') {\n      return string;\n    }\n\n    tokens = reject(not$, string.split(tokenRegex));\n    node = consumeTopLevel(tokens, types, options);\n\n    if (!node) {\n      throw new Error(\"Error parsing '\" + string + \"'.\");\n    }\n\n    return node;\n  };\n\n  function not$(x) {\n    return !x;\n  }\n}).call(this);","map":{"version":3,"names":["reject","special","tokenRegex","require","consumeOp","tokens","op","shift","Error","JSON","stringify","maybeConsumeOp","consumeList","arg$","hasDelimiters","open","close","result","untilTest","length","push","consumeElement","consumeArray","consumeTuple","consumeFields","key","consumeValue","out","indexOf","consumeTopLevel","types","options","ref$","type","structure","origTokens","finalResult","x$","y$","concat","explicit","unshift","source","RegExp","module","exports","string","node","not$","split","x","call"],"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/node_modules/levn/lib/parse-string.js"],"sourcesContent":["// Generated by LiveScript 1.6.0\n(function(){\n  var reject, special, tokenRegex;\n  reject = require('prelude-ls').reject;\n  function consumeOp(tokens, op){\n    if (tokens[0] === op) {\n      return tokens.shift();\n    } else {\n      throw new Error(\"Expected '\" + op + \"', but got '\" + tokens[0] + \"' instead in \" + JSON.stringify(tokens) + \".\");\n    }\n  }\n  function maybeConsumeOp(tokens, op){\n    if (tokens[0] === op) {\n      return tokens.shift();\n    }\n  }\n  function consumeList(tokens, arg$, hasDelimiters){\n    var open, close, result, untilTest;\n    open = arg$[0], close = arg$[1];\n    if (hasDelimiters) {\n      consumeOp(tokens, open);\n    }\n    result = [];\n    untilTest = \",\" + (hasDelimiters ? close : '');\n    while (tokens.length && (hasDelimiters && tokens[0] !== close)) {\n      result.push(consumeElement(tokens, untilTest));\n      maybeConsumeOp(tokens, ',');\n    }\n    if (hasDelimiters) {\n      consumeOp(tokens, close);\n    }\n    return result;\n  }\n  function consumeArray(tokens, hasDelimiters){\n    return consumeList(tokens, ['[', ']'], hasDelimiters);\n  }\n  function consumeTuple(tokens, hasDelimiters){\n    return consumeList(tokens, ['(', ')'], hasDelimiters);\n  }\n  function consumeFields(tokens, hasDelimiters){\n    var result, untilTest, key;\n    if (hasDelimiters) {\n      consumeOp(tokens, '{');\n    }\n    result = {};\n    untilTest = \",\" + (hasDelimiters ? '}' : '');\n    while (tokens.length && (!hasDelimiters || tokens[0] !== '}')) {\n      key = consumeValue(tokens, ':');\n      consumeOp(tokens, ':');\n      result[key] = consumeElement(tokens, untilTest);\n      maybeConsumeOp(tokens, ',');\n    }\n    if (hasDelimiters) {\n      consumeOp(tokens, '}');\n    }\n    return result;\n  }\n  function consumeValue(tokens, untilTest){\n    var out;\n    untilTest == null && (untilTest = '');\n    out = '';\n    while (tokens.length && -1 === untilTest.indexOf(tokens[0])) {\n      out += tokens.shift();\n    }\n    return out;\n  }\n  function consumeElement(tokens, untilTest){\n    switch (tokens[0]) {\n    case '[':\n      return consumeArray(tokens, true);\n    case '(':\n      return consumeTuple(tokens, true);\n    case '{':\n      return consumeFields(tokens, true);\n    default:\n      return consumeValue(tokens, untilTest);\n    }\n  }\n  function consumeTopLevel(tokens, types, options){\n    var ref$, type, structure, origTokens, result, finalResult, x$, y$;\n    ref$ = types[0], type = ref$.type, structure = ref$.structure;\n    origTokens = tokens.concat();\n    if (!options.explicit && types.length === 1 && ((!type && structure) || (type === 'Array' || type === 'Object'))) {\n      result = structure === 'array' || type === 'Array'\n        ? consumeArray(tokens, tokens[0] === '[')\n        : structure === 'tuple'\n          ? consumeTuple(tokens, tokens[0] === '(')\n          : consumeFields(tokens, tokens[0] === '{');\n      finalResult = tokens.length ? consumeElement(structure === 'array' || type === 'Array'\n        ? (x$ = origTokens, x$.unshift('['), x$.push(']'), x$)\n        : (y$ = origTokens, y$.unshift('('), y$.push(')'), y$)) : result;\n    } else {\n      finalResult = consumeElement(tokens);\n    }\n    return finalResult;\n  }\n  special = /\\[\\]\\(\\)}{:,/.source;\n  tokenRegex = RegExp('(\"(?:\\\\\\\\\"|[^\"])*\")|(\\'(?:\\\\\\\\\\'|[^\\'])*\\')|(/(?:\\\\\\\\/|[^/])*/[a-zA-Z]*)|(#.*#)|([' + special + '])|([^\\\\s' + special + '](?:\\\\s*[^\\\\s' + special + ']+)*)|\\\\s*');\n  module.exports = function(types, string, options){\n    var tokens, node;\n    options == null && (options = {});\n    if (!options.explicit && types.length === 1 && types[0].type === 'String') {\n      return string;\n    }\n    tokens = reject(not$, string.split(tokenRegex));\n    node = consumeTopLevel(tokens, types, options);\n    if (!node) {\n      throw new Error(\"Error parsing '\" + string + \"'.\");\n    }\n    return node;\n  };\n  function not$(x){ return !x; }\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}