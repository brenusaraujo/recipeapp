{"ast":null,"code":"var _jsxFileName = \"/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/src/components/Recipes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchMeals } from '../services/foodAPI';\nimport fetchDrinks from '../services/drinkAPI';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Recipes(_ref) {\n  _s();\n\n  let {\n    type\n  } = _ref;\n  const MAXIMUM_CARDS = 12;\n  const [firstRecipes, setFirstRecipes] = useState([]);\n\n  async function fetchMealsAPI() {\n    const meals = await fetchMeals();\n    setFirstRecipes(meals.splice(0, MAXIMUM_CARDS));\n  }\n\n  async function fetchDrinksAPI() {\n    const drinks = await fetchDrinks();\n    setFirstRecipes(drinks.splice(0, MAXIMUM_CARDS));\n  }\n\n  useEffect(() => {\n    if (type === 'foods') {\n      fetchMealsAPI();\n    } else {\n      fetchDrinksAPI();\n    }\n  }, []);\n\n  function mealsMap(meal, index) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      name: meal.strMeal,\n      thumb: meal.strMealThumb,\n      index: index\n    }, meal.idMeal, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n  function drinksMap(drink, index) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      name: drink.strDrink,\n      thumb: drink.strDrinkThumb,\n      index: index\n    }, drink.idDrink, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: type === 'foods' ? firstRecipes.map((meal, index) => mealsMap(meal, index)) : firstRecipes.map((drink, index) => drinksMap(drink, index))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Recipes, \"juUpvhcB09z7ioiSBYx+NmGQyQU=\");\n\n_c = Recipes;\nRecipes.propTypes = {\n  type: PropTypes.string\n}.isRequired;\nexport default Recipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipes\");","map":{"version":3,"names":["React","useEffect","useState","PropTypes","fetchMeals","fetchDrinks","Card","Recipes","type","MAXIMUM_CARDS","firstRecipes","setFirstRecipes","fetchMealsAPI","meals","splice","fetchDrinksAPI","drinks","mealsMap","meal","index","strMeal","strMealThumb","idMeal","drinksMap","drink","strDrink","strDrinkThumb","idDrink","map","propTypes","string","isRequired"],"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/src/components/Recipes.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchMeals } from '../services/foodAPI';\nimport fetchDrinks from '../services/drinkAPI';\nimport Card from './Card';\n\nfunction Recipes({ type }) {\n  const MAXIMUM_CARDS = 12;\n  const [firstRecipes, setFirstRecipes] = useState([]);\n\n  async function fetchMealsAPI() {\n    const meals = await fetchMeals();\n    setFirstRecipes(meals.splice(0, MAXIMUM_CARDS));\n  }\n\n  async function fetchDrinksAPI() {\n    const drinks = await fetchDrinks();\n    setFirstRecipes(drinks.splice(0, MAXIMUM_CARDS));\n  }\n\n  useEffect(() => {\n    if (type === 'foods') {\n      fetchMealsAPI();\n    } else {\n      fetchDrinksAPI();\n    }\n  }, []);\n\n  function mealsMap(meal, index) {\n    return (\n      <Card\n        key={ meal.idMeal }\n        name={ meal.strMeal }\n        thumb={ meal.strMealThumb }\n        index={ index }\n      />\n    );\n  }\n\n  function drinksMap(drink, index) {\n    return (\n      <Card\n        key={ drink.idDrink }\n        name={ drink.strDrink }\n        thumb={ drink.strDrinkThumb }\n        index={ index }\n      />\n    );\n  }\n\n  return (\n    <div>\n      {\n        type === 'foods'\n          ? firstRecipes.map((meal, index) => mealsMap(meal, index))\n          : firstRecipes.map((drink, index) => drinksMap(drink, index))\n      }\n    </div>\n  );\n}\n\nRecipes.propTypes = {\n  type: PropTypes.string,\n}.isRequired;\n\nexport default Recipes;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,OAAT,OAA2B;EAAA;;EAAA,IAAV;IAAEC;EAAF,CAAU;EACzB,MAAMC,aAAa,GAAG,EAAtB;EACA,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;;EAEA,eAAeU,aAAf,GAA+B;IAC7B,MAAMC,KAAK,GAAG,MAAMT,UAAU,EAA9B;IACAO,eAAe,CAACE,KAAK,CAACC,MAAN,CAAa,CAAb,EAAgBL,aAAhB,CAAD,CAAf;EACD;;EAED,eAAeM,cAAf,GAAgC;IAC9B,MAAMC,MAAM,GAAG,MAAMX,WAAW,EAAhC;IACAM,eAAe,CAACK,MAAM,CAACF,MAAP,CAAc,CAAd,EAAiBL,aAAjB,CAAD,CAAf;EACD;;EAEDR,SAAS,CAAC,MAAM;IACd,IAAIO,IAAI,KAAK,OAAb,EAAsB;MACpBI,aAAa;IACd,CAFD,MAEO;MACLG,cAAc;IACf;EACF,CANQ,EAMN,EANM,CAAT;;EAQA,SAASE,QAAT,CAAkBC,IAAlB,EAAwBC,KAAxB,EAA+B;IAC7B,oBACE,QAAC,IAAD;MAEE,IAAI,EAAGD,IAAI,CAACE,OAFd;MAGE,KAAK,EAAGF,IAAI,CAACG,YAHf;MAIE,KAAK,EAAGF;IAJV,GACQD,IAAI,CAACI,MADb;MAAA;MAAA;MAAA;IAAA,QADF;EAQD;;EAED,SAASC,SAAT,CAAmBC,KAAnB,EAA0BL,KAA1B,EAAiC;IAC/B,oBACE,QAAC,IAAD;MAEE,IAAI,EAAGK,KAAK,CAACC,QAFf;MAGE,KAAK,EAAGD,KAAK,CAACE,aAHhB;MAIE,KAAK,EAAGP;IAJV,GACQK,KAAK,CAACG,OADd;MAAA;MAAA;MAAA;IAAA,QADF;EAQD;;EAED,oBACE;IAAA,UAEInB,IAAI,KAAK,OAAT,GACIE,YAAY,CAACkB,GAAb,CAAiB,CAACV,IAAD,EAAOC,KAAP,KAAiBF,QAAQ,CAACC,IAAD,EAAOC,KAAP,CAA1C,CADJ,GAEIT,YAAY,CAACkB,GAAb,CAAiB,CAACJ,KAAD,EAAQL,KAAR,KAAkBI,SAAS,CAACC,KAAD,EAAQL,KAAR,CAA5C;EAJR;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GArDQZ,O;;KAAAA,O;AAuDTA,OAAO,CAACsB,SAAR,GAAoB;EAClBrB,IAAI,EAAEL,SAAS,CAAC2B;AADE,EAElBC,UAFF;AAIA,eAAexB,OAAf"},"metadata":{},"sourceType":"module"}