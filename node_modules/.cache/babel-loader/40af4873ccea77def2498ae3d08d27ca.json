{"ast":null,"code":"var _jsxFileName = \"/Users/brenoaraujo/projects-to-github/RecipeApp/src/pages/FoodInProgress.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ProgressCard from '../components/ProgressCard';\nimport RecipesContext from '../context/RecipesContext';\nimport { requestRecipesById } from '../services/fetchAPIs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FoodInProgress(props) {\n  _s();\n\n  const {\n    match: {\n      params: {\n        id\n      }\n    }\n  } = props;\n  const {\n    sliceIngredients,\n    sliceMeasures\n  } = useContext(RecipesContext);\n  const [recipeInfo, setRecipeInfo] = useState({});\n  const {\n    strMealThumb,\n    strMeal,\n    strCategory,\n    strInstructions,\n    strArea,\n    strTags\n  } = recipeInfo;\n  const ingredientsList = sliceIngredients(recipeInfo);\n  const measuresList = sliceMeasures(recipeInfo);\n  useEffect(() => {\n    requestRecipesById(id, 'themealdb').then(_ref => {\n      let {\n        meals\n      } = _ref;\n      return setRecipeInfo(meals[0]);\n    });\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(ProgressCard, {\n    photo: strMealThumb,\n    title: strMeal,\n    category: strCategory,\n    ingredients: ingredientsList,\n    measures: measuresList,\n    instructions: strInstructions,\n    type: \"meals\",\n    id: id,\n    area: strArea,\n    tags: strTags === null ? '' : strTags\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FoodInProgress, \"5XuOXIGNiVwVyolUcJQCFoGOOCU=\");\n\n_c = FoodInProgress;\nFoodInProgress.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default FoodInProgress;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodInProgress\");","map":{"version":3,"names":["React","useContext","useEffect","useState","PropTypes","ProgressCard","RecipesContext","requestRecipesById","FoodInProgress","props","match","params","id","sliceIngredients","sliceMeasures","recipeInfo","setRecipeInfo","strMealThumb","strMeal","strCategory","strInstructions","strArea","strTags","ingredientsList","measuresList","then","meals","propTypes","shape","string","isRequired"],"sources":["/Users/brenoaraujo/projects-to-github/RecipeApp/src/pages/FoodInProgress.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ProgressCard from '../components/ProgressCard';\nimport RecipesContext from '../context/RecipesContext';\nimport { requestRecipesById } from '../services/fetchAPIs';\n\nfunction FoodInProgress(props) {\n  const {\n    match: {\n      params: { id },\n    },\n  } = props;\n\n  const { sliceIngredients, sliceMeasures } = useContext(RecipesContext);\n  const [recipeInfo, setRecipeInfo] = useState({});\n  const {\n    strMealThumb,\n    strMeal,\n    strCategory,\n    strInstructions,\n    strArea,\n    strTags,\n  } = recipeInfo;\n\n  const ingredientsList = sliceIngredients(recipeInfo);\n  const measuresList = sliceMeasures(recipeInfo);\n\n  useEffect(() => {\n    requestRecipesById(id, 'themealdb').then(({ meals }) => setRecipeInfo(meals[0]));\n  }, [id]);\n\n  return (\n    <ProgressCard\n      photo={ strMealThumb }\n      title={ strMeal }\n      category={ strCategory }\n      ingredients={ ingredientsList }\n      measures={ measuresList }\n      instructions={ strInstructions }\n      type=\"meals\"\n      id={ id }\n      area={ strArea }\n      tags={ strTags === null ? '' : strTags }\n    />\n  );\n}\n\nFoodInProgress.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default FoodInProgress;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,SAASC,kBAAT,QAAmC,uBAAnC;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;EAAA;;EAC7B,MAAM;IACJC,KAAK,EAAE;MACLC,MAAM,EAAE;QAAEC;MAAF;IADH;EADH,IAIFH,KAJJ;EAMA,MAAM;IAAEI,gBAAF;IAAoBC;EAApB,IAAsCb,UAAU,CAACK,cAAD,CAAtD;EACA,MAAM,CAACS,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM;IACJc,YADI;IAEJC,OAFI;IAGJC,WAHI;IAIJC,eAJI;IAKJC,OALI;IAMJC;EANI,IAOFP,UAPJ;EASA,MAAMQ,eAAe,GAAGV,gBAAgB,CAACE,UAAD,CAAxC;EACA,MAAMS,YAAY,GAAGV,aAAa,CAACC,UAAD,CAAlC;EAEAb,SAAS,CAAC,MAAM;IACdK,kBAAkB,CAACK,EAAD,EAAK,WAAL,CAAlB,CAAoCa,IAApC,CAAyC;MAAA,IAAC;QAAEC;MAAF,CAAD;MAAA,OAAeV,aAAa,CAACU,KAAK,CAAC,CAAD,CAAN,CAA5B;IAAA,CAAzC;EACD,CAFQ,EAEN,CAACd,EAAD,CAFM,CAAT;EAIA,oBACE,QAAC,YAAD;IACE,KAAK,EAAGK,YADV;IAEE,KAAK,EAAGC,OAFV;IAGE,QAAQ,EAAGC,WAHb;IAIE,WAAW,EAAGI,eAJhB;IAKE,QAAQ,EAAGC,YALb;IAME,YAAY,EAAGJ,eANjB;IAOE,IAAI,EAAC,OAPP;IAQE,EAAE,EAAGR,EARP;IASE,IAAI,EAAGS,OATT;IAUE,IAAI,EAAGC,OAAO,KAAK,IAAZ,GAAmB,EAAnB,GAAwBA;EAVjC;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GAvCQd,c;;KAAAA,c;AAyCTA,cAAc,CAACmB,SAAf,GAA2B;EACzBjB,KAAK,EAAEN,SAAS,CAACwB,KAAV,CAAgB;IACrBjB,MAAM,EAAEP,SAAS,CAACwB,KAAV,CAAgB;MACtBhB,EAAE,EAAER,SAAS,CAACyB,MAAV,CAAiBC;IADC,CAAhB,EAELA;EAHkB,CAAhB,EAIJA;AALsB,CAA3B;AAQA,eAAetB,cAAf"},"metadata":{},"sourceType":"module"}