{"ast":null,"code":"var _jsxFileName = \"/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/src/components/Recipes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchMeals, fetchMealsCategories, searchFoods } from '../services/foodAPI';\nimport { fetchDrinks, fetchDrinksCategories } from '../services/drinkAPI';\nimport Card from './Card';\nimport AppContext from '../context/AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Recipes(_ref) {\n  _s();\n\n  let {\n    type\n  } = _ref;\n  const MAX_RECIPES = 12;\n  const MAX_CATEGORIES = 5;\n  const {\n    firstRecipes,\n    setFirstRecipes,\n    categories,\n    setCategories\n  } = useContext(AppContext);\n\n  async function fetchMealsAPI() {\n    const meals = await fetchMeals();\n    setFirstRecipes(meals.splice(0, MAX_RECIPES));\n    const mealsCategories = await fetchMealsCategories();\n    setCategories(mealsCategories.splice(0, MAX_CATEGORIES));\n  }\n\n  async function fetchDrinksAPI() {\n    const drinks = await fetchDrinks();\n    setFirstRecipes(drinks.splice(0, MAX_RECIPES));\n    const drinksCategories = await fetchDrinksCategories();\n    setCategories(drinksCategories.splice(0, MAX_CATEGORIES));\n  }\n\n  useEffect(() => {\n    if (type === 'foods') {\n      fetchMealsAPI();\n    } else {\n      fetchDrinksAPI();\n    }\n  }, []);\n\n  function mealsMap(meal, index) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      name: meal.strMeal,\n      thumb: meal.strMealThumb,\n      index: index\n    }, meal.idMeal, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n  function drinksMap(drink, index) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      name: drink.strDrink,\n      thumb: drink.strDrinkThumb,\n      index: index\n    }, drink.idDrink, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": `${category.strCategory}-category-filter`,\n        children: category.strCategory\n      }, category.strCategory, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), type === 'foods' ? firstRecipes.map((meal, index) => mealsMap(meal, index)) : firstRecipes.map((drink, index) => drinksMap(drink, index))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Recipes, \"Rb/vacqZ9dI0lSs0RpMJFwzSQBg=\");\n\n_c = Recipes;\nRecipes.propTypes = {\n  type: PropTypes.string\n}.isRequired;\nexport default Recipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipes\");","map":{"version":3,"names":["React","useEffect","useContext","PropTypes","fetchMeals","fetchMealsCategories","searchFoods","fetchDrinks","fetchDrinksCategories","Card","AppContext","Recipes","type","MAX_RECIPES","MAX_CATEGORIES","firstRecipes","setFirstRecipes","categories","setCategories","fetchMealsAPI","meals","splice","mealsCategories","fetchDrinksAPI","drinks","drinksCategories","mealsMap","meal","index","strMeal","strMealThumb","idMeal","drinksMap","drink","strDrink","strDrinkThumb","idDrink","map","category","strCategory","propTypes","string","isRequired"],"sources":["/Users/brenoaraujo/Projetos Trybe/sd-022-b-project-recipes-app/src/components/Recipes.js"],"sourcesContent":["import React, { useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchMeals, fetchMealsCategories, searchFoods } from '../services/foodAPI';\nimport { fetchDrinks, fetchDrinksCategories } from '../services/drinkAPI';\nimport Card from './Card';\nimport AppContext from '../context/AppContext';\n\nfunction Recipes({ type }) {\n  const MAX_RECIPES = 12;\n  const MAX_CATEGORIES = 5;\n\n  const { firstRecipes,\n    setFirstRecipes,\n    categories,\n    setCategories,\n  } = useContext(AppContext);\n\n  async function fetchMealsAPI() {\n    const meals = await fetchMeals();\n    setFirstRecipes(meals.splice(0, MAX_RECIPES));\n    const mealsCategories = await fetchMealsCategories();\n    setCategories(mealsCategories.splice(0, MAX_CATEGORIES));\n  }\n\n  async function fetchDrinksAPI() {\n    const drinks = await fetchDrinks();\n    setFirstRecipes(drinks.splice(0, MAX_RECIPES));\n    const drinksCategories = await fetchDrinksCategories();\n    setCategories(drinksCategories.splice(0, MAX_CATEGORIES));\n  }\n\n  useEffect(() => {\n    if (type === 'foods') {\n      fetchMealsAPI();\n    } else {\n      fetchDrinksAPI();\n    }\n  }, []);\n\n  function mealsMap(meal, index) {\n    return (\n      <Card\n        key={ meal.idMeal }\n        name={ meal.strMeal }\n        thumb={ meal.strMealThumb }\n        index={ index }\n      />\n    );\n  }\n\n  function drinksMap(drink, index) {\n    return (\n      <Card\n        key={ drink.idDrink }\n        name={ drink.strDrink }\n        thumb={ drink.strDrinkThumb }\n        index={ index }\n      />\n    );\n  }\n\n  return (\n    <div>\n      <section>\n        {categories.map((category) => (\n          <button\n            key={ category.strCategory }\n            type=\"button\"\n            data-testid={ `${category.strCategory}-category-filter` }\n          >\n            {category.strCategory}\n          </button>))}\n      </section>\n      {\n        type === 'foods'\n          ? firstRecipes.map((meal, index) => mealsMap(meal, index))\n          : firstRecipes.map((drink, index) => drinksMap(drink, index))\n      }\n    </div>\n  );\n}\n\nRecipes.propTypes = {\n  type: PropTypes.string,\n}.isRequired;\n\nexport default Recipes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}